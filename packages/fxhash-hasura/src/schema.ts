// @ts-nocheck
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

export type Scalars = {
    AccountStatus: any,
    BlockchainNetwork: any,
    Boolean: boolean,
    Float: number,
    Int: number,
    String: string,
    _int2: any,
    _int4: any,
    _int8: any,
    _text: any,
    action_type_enum: any,
    article_flag_enum: any,
    bigint: any,
    bpchar: any,
    codex_type_enum: any,
    codex_update_request_status_enum: any,
    float8: any,
    generative_token_flag_enum: any,
    generative_token_version: any,
    gentk_assign_state_enum: any,
    json: any,
    jsonb: any,
    numeric: any,
    smallint: any,
    timestamptz: any,
    transaction_type_enum: any,
    user_flag_enum: any,
    user_type_enum: any,
    uuid: any,
}


/** columns and relationships of "Account" */
export interface Account {
    /** An object relationship */
    Profile: (Profile | null)
    /** An array relationship */
    Wallets: Wallet[]
    /** An aggregate relationship */
    Wallets_aggregate: Wallet_aggregate
    id: Scalars['uuid']
    status: Scalars['AccountStatus']
    username: Scalars['String']
    __typename: 'Account'
}


/** aggregated selection of "Account" */
export interface Account_aggregate {
    aggregate: (Account_aggregate_fields | null)
    nodes: Account[]
    __typename: 'Account_aggregate'
}


/** aggregate fields of "Account" */
export interface Account_aggregate_fields {
    count: Scalars['Int']
    max: (Account_max_fields | null)
    min: (Account_min_fields | null)
    __typename: 'Account_aggregate_fields'
}


/** unique or primary key constraints on table "Account" */
export type Account_constraint = 'Account_pkey' | 'Account_username_key'


/** aggregate max on columns */
export interface Account_max_fields {
    id: (Scalars['uuid'] | null)
    status: (Scalars['AccountStatus'] | null)
    username: (Scalars['String'] | null)
    __typename: 'Account_max_fields'
}


/** aggregate min on columns */
export interface Account_min_fields {
    id: (Scalars['uuid'] | null)
    status: (Scalars['AccountStatus'] | null)
    username: (Scalars['String'] | null)
    __typename: 'Account_min_fields'
}


/** response of any mutation on the table "Account" */
export interface Account_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: Account[]
    __typename: 'Account_mutation_response'
}


/** select columns of table "Account" */
export type Account_select_column = 'id' | 'status' | 'username'


/** update columns of table "Account" */
export type Account_update_column = 'id' | 'status' | 'username'


/** columns and relationships of "Profile" */
export interface Profile {
    /** An object relationship */
    Account: Account
    accountId: Scalars['uuid']
    description: (Scalars['String'] | null)
    instagram: (Scalars['String'] | null)
    picture: (Scalars['String'] | null)
    twitter: (Scalars['String'] | null)
    website: (Scalars['String'] | null)
    __typename: 'Profile'
}


/** aggregated selection of "Profile" */
export interface Profile_aggregate {
    aggregate: (Profile_aggregate_fields | null)
    nodes: Profile[]
    __typename: 'Profile_aggregate'
}


/** aggregate fields of "Profile" */
export interface Profile_aggregate_fields {
    count: Scalars['Int']
    max: (Profile_max_fields | null)
    min: (Profile_min_fields | null)
    __typename: 'Profile_aggregate_fields'
}


/** unique or primary key constraints on table "Profile" */
export type Profile_constraint = 'Profile_pkey'


/** aggregate max on columns */
export interface Profile_max_fields {
    accountId: (Scalars['uuid'] | null)
    description: (Scalars['String'] | null)
    instagram: (Scalars['String'] | null)
    picture: (Scalars['String'] | null)
    twitter: (Scalars['String'] | null)
    website: (Scalars['String'] | null)
    __typename: 'Profile_max_fields'
}


/** aggregate min on columns */
export interface Profile_min_fields {
    accountId: (Scalars['uuid'] | null)
    description: (Scalars['String'] | null)
    instagram: (Scalars['String'] | null)
    picture: (Scalars['String'] | null)
    twitter: (Scalars['String'] | null)
    website: (Scalars['String'] | null)
    __typename: 'Profile_min_fields'
}


/** response of any mutation on the table "Profile" */
export interface Profile_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: Profile[]
    __typename: 'Profile_mutation_response'
}


/** select columns of table "Profile" */
export type Profile_select_column = 'accountId' | 'description' | 'instagram' | 'picture' | 'twitter' | 'website'


/** update columns of table "Profile" */
export type Profile_update_column = 'accountId' | 'description' | 'instagram' | 'picture' | 'twitter' | 'website'

export interface SetWhitelistOutput {
    merkleRoot: (Scalars['String'] | null)
    message: (Scalars['String'] | null)
    success: Scalars['Boolean']
    __typename: 'SetWhitelistOutput'
}


/** columns and relationships of "Wallet" */
export interface Wallet {
    /** An object relationship */
    Account: Account
    accountId: Scalars['uuid']
    address: Scalars['String']
    network: Scalars['BlockchainNetwork']
    __typename: 'Wallet'
}


/** aggregated selection of "Wallet" */
export interface Wallet_aggregate {
    aggregate: (Wallet_aggregate_fields | null)
    nodes: Wallet[]
    __typename: 'Wallet_aggregate'
}


/** aggregate fields of "Wallet" */
export interface Wallet_aggregate_fields {
    count: Scalars['Int']
    max: (Wallet_max_fields | null)
    min: (Wallet_min_fields | null)
    __typename: 'Wallet_aggregate_fields'
}


/** unique or primary key constraints on table "Wallet" */
export type Wallet_constraint = 'Wallet_pkey'


/** aggregate max on columns */
export interface Wallet_max_fields {
    accountId: (Scalars['uuid'] | null)
    address: (Scalars['String'] | null)
    network: (Scalars['BlockchainNetwork'] | null)
    __typename: 'Wallet_max_fields'
}


/** aggregate min on columns */
export interface Wallet_min_fields {
    accountId: (Scalars['uuid'] | null)
    address: (Scalars['String'] | null)
    network: (Scalars['BlockchainNetwork'] | null)
    __typename: 'Wallet_min_fields'
}


/** response of any mutation on the table "Wallet" */
export interface Wallet_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: Wallet[]
    __typename: 'Wallet_mutation_response'
}


/** select columns of table "Wallet" */
export type Wallet_select_column = 'accountId' | 'address' | 'network'


/** update columns of table "Wallet" */
export type Wallet_update_column = 'accountId' | 'address' | 'network'


/** columns and relationships of "Whitelist" */
export interface Whitelist {
    /** An array relationship */
    Whitelist_WhitelistEntries: WhitelistEntries[]
    /** An aggregate relationship */
    Whitelist_WhitelistEntries_aggregate: WhitelistEntries_aggregate
    merkleRoot: Scalars['String']
    __typename: 'Whitelist'
}


/** columns and relationships of "WhitelistEntries" */
export interface WhitelistEntries {
    /** An object relationship */
    WhitelistEntries_Whitelist: Whitelist
    merkleRoot: Scalars['String']
    walletAddress: Scalars['String']
    whitelistIndex: Scalars['Int']
    __typename: 'WhitelistEntries'
}


/** aggregated selection of "WhitelistEntries" */
export interface WhitelistEntries_aggregate {
    aggregate: (WhitelistEntries_aggregate_fields | null)
    nodes: WhitelistEntries[]
    __typename: 'WhitelistEntries_aggregate'
}


/** aggregate fields of "WhitelistEntries" */
export interface WhitelistEntries_aggregate_fields {
    avg: (WhitelistEntries_avg_fields | null)
    count: Scalars['Int']
    max: (WhitelistEntries_max_fields | null)
    min: (WhitelistEntries_min_fields | null)
    stddev: (WhitelistEntries_stddev_fields | null)
    stddev_pop: (WhitelistEntries_stddev_pop_fields | null)
    stddev_samp: (WhitelistEntries_stddev_samp_fields | null)
    sum: (WhitelistEntries_sum_fields | null)
    var_pop: (WhitelistEntries_var_pop_fields | null)
    var_samp: (WhitelistEntries_var_samp_fields | null)
    variance: (WhitelistEntries_variance_fields | null)
    __typename: 'WhitelistEntries_aggregate_fields'
}


/** aggregate avg on columns */
export interface WhitelistEntries_avg_fields {
    whitelistIndex: (Scalars['Float'] | null)
    __typename: 'WhitelistEntries_avg_fields'
}


/** unique or primary key constraints on table "WhitelistEntries" */
export type WhitelistEntries_constraint = 'WhitelistEntries_pkey'


/** aggregate max on columns */
export interface WhitelistEntries_max_fields {
    merkleRoot: (Scalars['String'] | null)
    walletAddress: (Scalars['String'] | null)
    whitelistIndex: (Scalars['Int'] | null)
    __typename: 'WhitelistEntries_max_fields'
}


/** aggregate min on columns */
export interface WhitelistEntries_min_fields {
    merkleRoot: (Scalars['String'] | null)
    walletAddress: (Scalars['String'] | null)
    whitelistIndex: (Scalars['Int'] | null)
    __typename: 'WhitelistEntries_min_fields'
}


/** response of any mutation on the table "WhitelistEntries" */
export interface WhitelistEntries_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: WhitelistEntries[]
    __typename: 'WhitelistEntries_mutation_response'
}


/** select columns of table "WhitelistEntries" */
export type WhitelistEntries_select_column = 'merkleRoot' | 'walletAddress' | 'whitelistIndex'


/** aggregate stddev on columns */
export interface WhitelistEntries_stddev_fields {
    whitelistIndex: (Scalars['Float'] | null)
    __typename: 'WhitelistEntries_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface WhitelistEntries_stddev_pop_fields {
    whitelistIndex: (Scalars['Float'] | null)
    __typename: 'WhitelistEntries_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface WhitelistEntries_stddev_samp_fields {
    whitelistIndex: (Scalars['Float'] | null)
    __typename: 'WhitelistEntries_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface WhitelistEntries_sum_fields {
    whitelistIndex: (Scalars['Int'] | null)
    __typename: 'WhitelistEntries_sum_fields'
}


/** update columns of table "WhitelistEntries" */
export type WhitelistEntries_update_column = 'merkleRoot' | 'walletAddress' | 'whitelistIndex'


/** aggregate var_pop on columns */
export interface WhitelistEntries_var_pop_fields {
    whitelistIndex: (Scalars['Float'] | null)
    __typename: 'WhitelistEntries_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface WhitelistEntries_var_samp_fields {
    whitelistIndex: (Scalars['Float'] | null)
    __typename: 'WhitelistEntries_var_samp_fields'
}


/** aggregate variance on columns */
export interface WhitelistEntries_variance_fields {
    whitelistIndex: (Scalars['Float'] | null)
    __typename: 'WhitelistEntries_variance_fields'
}


/** aggregated selection of "Whitelist" */
export interface Whitelist_aggregate {
    aggregate: (Whitelist_aggregate_fields | null)
    nodes: Whitelist[]
    __typename: 'Whitelist_aggregate'
}


/** aggregate fields of "Whitelist" */
export interface Whitelist_aggregate_fields {
    count: Scalars['Int']
    max: (Whitelist_max_fields | null)
    min: (Whitelist_min_fields | null)
    __typename: 'Whitelist_aggregate_fields'
}


/** unique or primary key constraints on table "Whitelist" */
export type Whitelist_constraint = 'Whitelist_pkey'


/** aggregate max on columns */
export interface Whitelist_max_fields {
    merkleRoot: (Scalars['String'] | null)
    __typename: 'Whitelist_max_fields'
}


/** aggregate min on columns */
export interface Whitelist_min_fields {
    merkleRoot: (Scalars['String'] | null)
    __typename: 'Whitelist_min_fields'
}


/** response of any mutation on the table "Whitelist" */
export interface Whitelist_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: Whitelist[]
    __typename: 'Whitelist_mutation_response'
}


/** select columns of table "Whitelist" */
export type Whitelist_select_column = 'merkleRoot'


/** update columns of table "Whitelist" */
export type Whitelist_update_column = 'merkleRoot'


/** columns and relationships of "action" */
export interface action {
    /** An object relationship */
    article: (article | null)
    article_id: (Scalars['Int'] | null)
    created_at: Scalars['timestamptz']
    /** An object relationship */
    generative_token: (generative_token | null)
    id: Scalars['uuid']
    issuer_id: (Scalars['String'] | null)
    metadata: (Scalars['jsonb'] | null)
    numeric_value: (Scalars['numeric'] | null)
    /** An object relationship */
    objkt: (objkt | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    op_hash: Scalars['String']
    /** An object relationship */
    redeemable: (redeemable | null)
    redeemable_address: (Scalars['String'] | null)
    target_id: (Scalars['String'] | null)
    ticket_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    type: Scalars['action_type_enum']
    /** An object relationship */
    user: (user | null)
    /** An object relationship */
    userByIssuerId: (user | null)
    __typename: 'action'
}


/** aggregated selection of "action" */
export interface action_aggregate {
    aggregate: (action_aggregate_fields | null)
    nodes: action[]
    __typename: 'action_aggregate'
}


/** aggregate fields of "action" */
export interface action_aggregate_fields {
    avg: (action_avg_fields | null)
    count: Scalars['Int']
    max: (action_max_fields | null)
    min: (action_min_fields | null)
    stddev: (action_stddev_fields | null)
    stddev_pop: (action_stddev_pop_fields | null)
    stddev_samp: (action_stddev_samp_fields | null)
    sum: (action_sum_fields | null)
    var_pop: (action_var_pop_fields | null)
    var_samp: (action_var_samp_fields | null)
    variance: (action_variance_fields | null)
    __typename: 'action_aggregate_fields'
}


/** aggregate avg on columns */
export interface action_avg_fields {
    article_id: (Scalars['Float'] | null)
    numeric_value: (Scalars['Float'] | null)
    __typename: 'action_avg_fields'
}


/** unique or primary key constraints on table "action" */
export type action_constraint = 'PK_2d9db9cf5edfbbae74eb56e3a39'


/** aggregate max on columns */
export interface action_max_fields {
    article_id: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['uuid'] | null)
    issuer_id: (Scalars['String'] | null)
    numeric_value: (Scalars['numeric'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    op_hash: (Scalars['String'] | null)
    redeemable_address: (Scalars['String'] | null)
    target_id: (Scalars['String'] | null)
    ticket_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    type: (Scalars['action_type_enum'] | null)
    __typename: 'action_max_fields'
}


/** aggregate min on columns */
export interface action_min_fields {
    article_id: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['uuid'] | null)
    issuer_id: (Scalars['String'] | null)
    numeric_value: (Scalars['numeric'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    op_hash: (Scalars['String'] | null)
    redeemable_address: (Scalars['String'] | null)
    target_id: (Scalars['String'] | null)
    ticket_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    type: (Scalars['action_type_enum'] | null)
    __typename: 'action_min_fields'
}


/** response of any mutation on the table "action" */
export interface action_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: action[]
    __typename: 'action_mutation_response'
}


/** select columns of table "action" */
export type action_select_column = 'article_id' | 'created_at' | 'id' | 'issuer_id' | 'metadata' | 'numeric_value' | 'objkt_id' | 'objkt_issuer_version' | 'op_hash' | 'redeemable_address' | 'target_id' | 'ticket_id' | 'token_id' | 'type'


/** aggregate stddev on columns */
export interface action_stddev_fields {
    article_id: (Scalars['Float'] | null)
    numeric_value: (Scalars['Float'] | null)
    __typename: 'action_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface action_stddev_pop_fields {
    article_id: (Scalars['Float'] | null)
    numeric_value: (Scalars['Float'] | null)
    __typename: 'action_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface action_stddev_samp_fields {
    article_id: (Scalars['Float'] | null)
    numeric_value: (Scalars['Float'] | null)
    __typename: 'action_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface action_sum_fields {
    article_id: (Scalars['Int'] | null)
    numeric_value: (Scalars['numeric'] | null)
    __typename: 'action_sum_fields'
}


/** update columns of table "action" */
export type action_update_column = 'article_id' | 'created_at' | 'id' | 'issuer_id' | 'metadata' | 'numeric_value' | 'objkt_id' | 'objkt_issuer_version' | 'op_hash' | 'redeemable_address' | 'target_id' | 'ticket_id' | 'token_id' | 'type'


/** aggregate var_pop on columns */
export interface action_var_pop_fields {
    article_id: (Scalars['Float'] | null)
    numeric_value: (Scalars['Float'] | null)
    __typename: 'action_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface action_var_samp_fields {
    article_id: (Scalars['Float'] | null)
    numeric_value: (Scalars['Float'] | null)
    __typename: 'action_var_samp_fields'
}


/** aggregate variance on columns */
export interface action_variance_fields {
    article_id: (Scalars['Float'] | null)
    numeric_value: (Scalars['Float'] | null)
    __typename: 'action_variance_fields'
}


/** columns and relationships of "article" */
export interface article {
    /** An array relationship */
    actions: action[]
    /** An aggregate relationship */
    actions_aggregate: action_aggregate
    /** An array relationship */
    article_ledgers: article_ledger[]
    /** An aggregate relationship */
    article_ledgers_aggregate: article_ledger_aggregate
    /** An array relationship */
    article_revisions: article_revision[]
    /** An aggregate relationship */
    article_revisions_aggregate: article_revision_aggregate
    artifact_uri: Scalars['String']
    author_id: Scalars['String']
    body: Scalars['String']
    created_at: Scalars['timestamptz']
    description: Scalars['String']
    display_uri: Scalars['String']
    editions: Scalars['bigint']
    flag: Scalars['article_flag_enum']
    id: Scalars['Int']
    language: Scalars['String']
    /** An array relationship */
    listings: listing[]
    /** An aggregate relationship */
    listings_aggregate: listing_aggregate
    /** An object relationship */
    media_image: (media_image | null)
    metadata: Scalars['json']
    metadata_locked: Scalars['Boolean']
    metadata_uri: Scalars['String']
    mint_op_hash: Scalars['String']
    /** An object relationship */
    moderation_reason: (moderation_reason | null)
    moderation_reason_id: (Scalars['String'] | null)
    platforms: (Scalars['_text'] | null)
    royalties: Scalars['Int']
    slug: Scalars['String']
    /** An array relationship */
    splits: split[]
    /** An aggregate relationship */
    splits_aggregate: split_aggregate
    tags: Scalars['_text']
    thumbnailMediaId: (Scalars['bpchar'] | null)
    thumbnail_caption: (Scalars['String'] | null)
    thumbnail_uri: Scalars['String']
    title: Scalars['String']
    /** An array relationship */
    transactions: transaction[]
    /** An aggregate relationship */
    transactions_aggregate: transaction_aggregate
    /** An object relationship */
    user: user
    __typename: 'article'
}


/** aggregated selection of "article" */
export interface article_aggregate {
    aggregate: (article_aggregate_fields | null)
    nodes: article[]
    __typename: 'article_aggregate'
}


/** aggregate fields of "article" */
export interface article_aggregate_fields {
    avg: (article_avg_fields | null)
    count: Scalars['Int']
    max: (article_max_fields | null)
    min: (article_min_fields | null)
    stddev: (article_stddev_fields | null)
    stddev_pop: (article_stddev_pop_fields | null)
    stddev_samp: (article_stddev_samp_fields | null)
    sum: (article_sum_fields | null)
    var_pop: (article_var_pop_fields | null)
    var_samp: (article_var_samp_fields | null)
    variance: (article_variance_fields | null)
    __typename: 'article_aggregate_fields'
}


/** aggregate avg on columns */
export interface article_avg_fields {
    editions: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    __typename: 'article_avg_fields'
}


/** unique or primary key constraints on table "article" */
export type article_constraint = 'PK_40808690eb7b915046558c0f81b'


/** columns and relationships of "article_generative_token" */
export interface article_generative_token {
    article_id: Scalars['Int']
    generative_token_id: Scalars['String']
    line: Scalars['Int']
    __typename: 'article_generative_token'
}


/** aggregated selection of "article_generative_token" */
export interface article_generative_token_aggregate {
    aggregate: (article_generative_token_aggregate_fields | null)
    nodes: article_generative_token[]
    __typename: 'article_generative_token_aggregate'
}


/** aggregate fields of "article_generative_token" */
export interface article_generative_token_aggregate_fields {
    avg: (article_generative_token_avg_fields | null)
    count: Scalars['Int']
    max: (article_generative_token_max_fields | null)
    min: (article_generative_token_min_fields | null)
    stddev: (article_generative_token_stddev_fields | null)
    stddev_pop: (article_generative_token_stddev_pop_fields | null)
    stddev_samp: (article_generative_token_stddev_samp_fields | null)
    sum: (article_generative_token_sum_fields | null)
    var_pop: (article_generative_token_var_pop_fields | null)
    var_samp: (article_generative_token_var_samp_fields | null)
    variance: (article_generative_token_variance_fields | null)
    __typename: 'article_generative_token_aggregate_fields'
}


/** aggregate avg on columns */
export interface article_generative_token_avg_fields {
    article_id: (Scalars['Float'] | null)
    line: (Scalars['Float'] | null)
    __typename: 'article_generative_token_avg_fields'
}


/** unique or primary key constraints on table "article_generative_token" */
export type article_generative_token_constraint = 'PK_10ab76f2a055c1017ea7371332b'


/** aggregate max on columns */
export interface article_generative_token_max_fields {
    article_id: (Scalars['Int'] | null)
    generative_token_id: (Scalars['String'] | null)
    line: (Scalars['Int'] | null)
    __typename: 'article_generative_token_max_fields'
}


/** aggregate min on columns */
export interface article_generative_token_min_fields {
    article_id: (Scalars['Int'] | null)
    generative_token_id: (Scalars['String'] | null)
    line: (Scalars['Int'] | null)
    __typename: 'article_generative_token_min_fields'
}


/** response of any mutation on the table "article_generative_token" */
export interface article_generative_token_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: article_generative_token[]
    __typename: 'article_generative_token_mutation_response'
}


/** select columns of table "article_generative_token" */
export type article_generative_token_select_column = 'article_id' | 'generative_token_id' | 'line'


/** aggregate stddev on columns */
export interface article_generative_token_stddev_fields {
    article_id: (Scalars['Float'] | null)
    line: (Scalars['Float'] | null)
    __typename: 'article_generative_token_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface article_generative_token_stddev_pop_fields {
    article_id: (Scalars['Float'] | null)
    line: (Scalars['Float'] | null)
    __typename: 'article_generative_token_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface article_generative_token_stddev_samp_fields {
    article_id: (Scalars['Float'] | null)
    line: (Scalars['Float'] | null)
    __typename: 'article_generative_token_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface article_generative_token_sum_fields {
    article_id: (Scalars['Int'] | null)
    line: (Scalars['Int'] | null)
    __typename: 'article_generative_token_sum_fields'
}


/** update columns of table "article_generative_token" */
export type article_generative_token_update_column = 'article_id' | 'generative_token_id' | 'line'


/** aggregate var_pop on columns */
export interface article_generative_token_var_pop_fields {
    article_id: (Scalars['Float'] | null)
    line: (Scalars['Float'] | null)
    __typename: 'article_generative_token_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface article_generative_token_var_samp_fields {
    article_id: (Scalars['Float'] | null)
    line: (Scalars['Float'] | null)
    __typename: 'article_generative_token_var_samp_fields'
}


/** aggregate variance on columns */
export interface article_generative_token_variance_fields {
    article_id: (Scalars['Float'] | null)
    line: (Scalars['Float'] | null)
    __typename: 'article_generative_token_variance_fields'
}


/** columns and relationships of "article_ledger" */
export interface article_ledger {
    amount: Scalars['bigint']
    /** An object relationship */
    article: article
    article_id: Scalars['Int']
    owner_id: Scalars['String']
    /** An object relationship */
    user: user
    __typename: 'article_ledger'
}


/** aggregated selection of "article_ledger" */
export interface article_ledger_aggregate {
    aggregate: (article_ledger_aggregate_fields | null)
    nodes: article_ledger[]
    __typename: 'article_ledger_aggregate'
}


/** aggregate fields of "article_ledger" */
export interface article_ledger_aggregate_fields {
    avg: (article_ledger_avg_fields | null)
    count: Scalars['Int']
    max: (article_ledger_max_fields | null)
    min: (article_ledger_min_fields | null)
    stddev: (article_ledger_stddev_fields | null)
    stddev_pop: (article_ledger_stddev_pop_fields | null)
    stddev_samp: (article_ledger_stddev_samp_fields | null)
    sum: (article_ledger_sum_fields | null)
    var_pop: (article_ledger_var_pop_fields | null)
    var_samp: (article_ledger_var_samp_fields | null)
    variance: (article_ledger_variance_fields | null)
    __typename: 'article_ledger_aggregate_fields'
}


/** aggregate avg on columns */
export interface article_ledger_avg_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    __typename: 'article_ledger_avg_fields'
}


/** unique or primary key constraints on table "article_ledger" */
export type article_ledger_constraint = 'PK_eeea7173c4f29f2f62b92b0efdf'


/** aggregate max on columns */
export interface article_ledger_max_fields {
    amount: (Scalars['bigint'] | null)
    article_id: (Scalars['Int'] | null)
    owner_id: (Scalars['String'] | null)
    __typename: 'article_ledger_max_fields'
}


/** aggregate min on columns */
export interface article_ledger_min_fields {
    amount: (Scalars['bigint'] | null)
    article_id: (Scalars['Int'] | null)
    owner_id: (Scalars['String'] | null)
    __typename: 'article_ledger_min_fields'
}


/** response of any mutation on the table "article_ledger" */
export interface article_ledger_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: article_ledger[]
    __typename: 'article_ledger_mutation_response'
}


/** select columns of table "article_ledger" */
export type article_ledger_select_column = 'amount' | 'article_id' | 'owner_id'


/** aggregate stddev on columns */
export interface article_ledger_stddev_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    __typename: 'article_ledger_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface article_ledger_stddev_pop_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    __typename: 'article_ledger_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface article_ledger_stddev_samp_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    __typename: 'article_ledger_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface article_ledger_sum_fields {
    amount: (Scalars['bigint'] | null)
    article_id: (Scalars['Int'] | null)
    __typename: 'article_ledger_sum_fields'
}


/** update columns of table "article_ledger" */
export type article_ledger_update_column = 'amount' | 'article_id' | 'owner_id'


/** aggregate var_pop on columns */
export interface article_ledger_var_pop_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    __typename: 'article_ledger_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface article_ledger_var_samp_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    __typename: 'article_ledger_var_samp_fields'
}


/** aggregate variance on columns */
export interface article_ledger_variance_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    __typename: 'article_ledger_variance_fields'
}


/** aggregate max on columns */
export interface article_max_fields {
    artifact_uri: (Scalars['String'] | null)
    author_id: (Scalars['String'] | null)
    body: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    description: (Scalars['String'] | null)
    display_uri: (Scalars['String'] | null)
    editions: (Scalars['bigint'] | null)
    flag: (Scalars['article_flag_enum'] | null)
    id: (Scalars['Int'] | null)
    language: (Scalars['String'] | null)
    metadata_uri: (Scalars['String'] | null)
    mint_op_hash: (Scalars['String'] | null)
    moderation_reason_id: (Scalars['String'] | null)
    royalties: (Scalars['Int'] | null)
    slug: (Scalars['String'] | null)
    thumbnailMediaId: (Scalars['bpchar'] | null)
    thumbnail_caption: (Scalars['String'] | null)
    thumbnail_uri: (Scalars['String'] | null)
    title: (Scalars['String'] | null)
    __typename: 'article_max_fields'
}


/** aggregate min on columns */
export interface article_min_fields {
    artifact_uri: (Scalars['String'] | null)
    author_id: (Scalars['String'] | null)
    body: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    description: (Scalars['String'] | null)
    display_uri: (Scalars['String'] | null)
    editions: (Scalars['bigint'] | null)
    flag: (Scalars['article_flag_enum'] | null)
    id: (Scalars['Int'] | null)
    language: (Scalars['String'] | null)
    metadata_uri: (Scalars['String'] | null)
    mint_op_hash: (Scalars['String'] | null)
    moderation_reason_id: (Scalars['String'] | null)
    royalties: (Scalars['Int'] | null)
    slug: (Scalars['String'] | null)
    thumbnailMediaId: (Scalars['bpchar'] | null)
    thumbnail_caption: (Scalars['String'] | null)
    thumbnail_uri: (Scalars['String'] | null)
    title: (Scalars['String'] | null)
    __typename: 'article_min_fields'
}


/** response of any mutation on the table "article" */
export interface article_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: article[]
    __typename: 'article_mutation_response'
}


/** columns and relationships of "article_revision" */
export interface article_revision {
    /** An object relationship */
    article: article
    article_id: Scalars['Int']
    created_at: Scalars['timestamptz']
    iteration: Scalars['smallint']
    metadata_uri: Scalars['String']
    op_hash: Scalars['String']
    __typename: 'article_revision'
}


/** aggregated selection of "article_revision" */
export interface article_revision_aggregate {
    aggregate: (article_revision_aggregate_fields | null)
    nodes: article_revision[]
    __typename: 'article_revision_aggregate'
}


/** aggregate fields of "article_revision" */
export interface article_revision_aggregate_fields {
    avg: (article_revision_avg_fields | null)
    count: Scalars['Int']
    max: (article_revision_max_fields | null)
    min: (article_revision_min_fields | null)
    stddev: (article_revision_stddev_fields | null)
    stddev_pop: (article_revision_stddev_pop_fields | null)
    stddev_samp: (article_revision_stddev_samp_fields | null)
    sum: (article_revision_sum_fields | null)
    var_pop: (article_revision_var_pop_fields | null)
    var_samp: (article_revision_var_samp_fields | null)
    variance: (article_revision_variance_fields | null)
    __typename: 'article_revision_aggregate_fields'
}


/** aggregate avg on columns */
export interface article_revision_avg_fields {
    article_id: (Scalars['Float'] | null)
    iteration: (Scalars['Float'] | null)
    __typename: 'article_revision_avg_fields'
}


/** unique or primary key constraints on table "article_revision" */
export type article_revision_constraint = 'PK_6dccdbb0aa1593c3c560c23c5e9'


/** aggregate max on columns */
export interface article_revision_max_fields {
    article_id: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    iteration: (Scalars['smallint'] | null)
    metadata_uri: (Scalars['String'] | null)
    op_hash: (Scalars['String'] | null)
    __typename: 'article_revision_max_fields'
}


/** aggregate min on columns */
export interface article_revision_min_fields {
    article_id: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    iteration: (Scalars['smallint'] | null)
    metadata_uri: (Scalars['String'] | null)
    op_hash: (Scalars['String'] | null)
    __typename: 'article_revision_min_fields'
}


/** response of any mutation on the table "article_revision" */
export interface article_revision_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: article_revision[]
    __typename: 'article_revision_mutation_response'
}


/** select columns of table "article_revision" */
export type article_revision_select_column = 'article_id' | 'created_at' | 'iteration' | 'metadata_uri' | 'op_hash'


/** aggregate stddev on columns */
export interface article_revision_stddev_fields {
    article_id: (Scalars['Float'] | null)
    iteration: (Scalars['Float'] | null)
    __typename: 'article_revision_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface article_revision_stddev_pop_fields {
    article_id: (Scalars['Float'] | null)
    iteration: (Scalars['Float'] | null)
    __typename: 'article_revision_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface article_revision_stddev_samp_fields {
    article_id: (Scalars['Float'] | null)
    iteration: (Scalars['Float'] | null)
    __typename: 'article_revision_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface article_revision_sum_fields {
    article_id: (Scalars['Int'] | null)
    iteration: (Scalars['smallint'] | null)
    __typename: 'article_revision_sum_fields'
}


/** update columns of table "article_revision" */
export type article_revision_update_column = 'article_id' | 'created_at' | 'iteration' | 'metadata_uri' | 'op_hash'


/** aggregate var_pop on columns */
export interface article_revision_var_pop_fields {
    article_id: (Scalars['Float'] | null)
    iteration: (Scalars['Float'] | null)
    __typename: 'article_revision_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface article_revision_var_samp_fields {
    article_id: (Scalars['Float'] | null)
    iteration: (Scalars['Float'] | null)
    __typename: 'article_revision_var_samp_fields'
}


/** aggregate variance on columns */
export interface article_revision_variance_fields {
    article_id: (Scalars['Float'] | null)
    iteration: (Scalars['Float'] | null)
    __typename: 'article_revision_variance_fields'
}


/** select columns of table "article" */
export type article_select_column = 'artifact_uri' | 'author_id' | 'body' | 'created_at' | 'description' | 'display_uri' | 'editions' | 'flag' | 'id' | 'language' | 'metadata' | 'metadata_locked' | 'metadata_uri' | 'mint_op_hash' | 'moderation_reason_id' | 'platforms' | 'royalties' | 'slug' | 'tags' | 'thumbnailMediaId' | 'thumbnail_caption' | 'thumbnail_uri' | 'title'


/** select "article_aggregate_bool_exp_bool_and_arguments_columns" columns of table "article" */
export type article_select_column_article_aggregate_bool_exp_bool_and_arguments_columns = 'metadata_locked'


/** select "article_aggregate_bool_exp_bool_or_arguments_columns" columns of table "article" */
export type article_select_column_article_aggregate_bool_exp_bool_or_arguments_columns = 'metadata_locked'


/** aggregate stddev on columns */
export interface article_stddev_fields {
    editions: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    __typename: 'article_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface article_stddev_pop_fields {
    editions: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    __typename: 'article_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface article_stddev_samp_fields {
    editions: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    __typename: 'article_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface article_sum_fields {
    editions: (Scalars['bigint'] | null)
    id: (Scalars['Int'] | null)
    royalties: (Scalars['Int'] | null)
    __typename: 'article_sum_fields'
}


/** update columns of table "article" */
export type article_update_column = 'artifact_uri' | 'author_id' | 'body' | 'created_at' | 'description' | 'display_uri' | 'editions' | 'flag' | 'id' | 'language' | 'metadata' | 'metadata_locked' | 'metadata_uri' | 'mint_op_hash' | 'moderation_reason_id' | 'platforms' | 'royalties' | 'slug' | 'tags' | 'thumbnailMediaId' | 'thumbnail_caption' | 'thumbnail_uri' | 'title'


/** aggregate var_pop on columns */
export interface article_var_pop_fields {
    editions: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    __typename: 'article_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface article_var_samp_fields {
    editions: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    __typename: 'article_var_samp_fields'
}


/** aggregate variance on columns */
export interface article_variance_fields {
    editions: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    __typename: 'article_variance_fields'
}


/** columns and relationships of "auction" */
export interface auction {
    /** An object relationship */
    auction_bid_table: (auction_bid_table | null)
    /** An array relationship */
    auction_bids: auction_bid[]
    /** An aggregate relationship */
    auction_bids_aggregate: auction_bid_aggregate
    bid_table_id: (Scalars['Int'] | null)
    bid_time_increment: Scalars['Int']
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: Scalars['timestamptz']
    ends_at: (Scalars['timestamptz'] | null)
    fulfilled_at: (Scalars['timestamptz'] | null)
    id: Scalars['Int']
    min_duration: Scalars['Int']
    /** An object relationship */
    objkt: (objkt | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    reserve_price: Scalars['bigint']
    seller_id: (Scalars['String'] | null)
    /** An object relationship */
    user: (user | null)
    version: Scalars['Int']
    __typename: 'auction'
}


/** aggregated selection of "auction" */
export interface auction_aggregate {
    aggregate: (auction_aggregate_fields | null)
    nodes: auction[]
    __typename: 'auction_aggregate'
}


/** aggregate fields of "auction" */
export interface auction_aggregate_fields {
    avg: (auction_avg_fields | null)
    count: Scalars['Int']
    max: (auction_max_fields | null)
    min: (auction_min_fields | null)
    stddev: (auction_stddev_fields | null)
    stddev_pop: (auction_stddev_pop_fields | null)
    stddev_samp: (auction_stddev_samp_fields | null)
    sum: (auction_sum_fields | null)
    var_pop: (auction_var_pop_fields | null)
    var_samp: (auction_var_samp_fields | null)
    variance: (auction_variance_fields | null)
    __typename: 'auction_aggregate_fields'
}


/** aggregate avg on columns */
export interface auction_avg_fields {
    bid_table_id: (Scalars['Float'] | null)
    bid_time_increment: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    min_duration: (Scalars['Float'] | null)
    reserve_price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'auction_avg_fields'
}


/** columns and relationships of "auction_bid" */
export interface auction_bid {
    /** An object relationship */
    auction: (auction | null)
    auction_id: (Scalars['Int'] | null)
    auction_version: (Scalars['Int'] | null)
    bidder_id: (Scalars['String'] | null)
    created_at: Scalars['timestamptz']
    id: Scalars['uuid']
    price: Scalars['numeric']
    /** An object relationship */
    user: (user | null)
    __typename: 'auction_bid'
}


/** aggregated selection of "auction_bid" */
export interface auction_bid_aggregate {
    aggregate: (auction_bid_aggregate_fields | null)
    nodes: auction_bid[]
    __typename: 'auction_bid_aggregate'
}


/** aggregate fields of "auction_bid" */
export interface auction_bid_aggregate_fields {
    avg: (auction_bid_avg_fields | null)
    count: Scalars['Int']
    max: (auction_bid_max_fields | null)
    min: (auction_bid_min_fields | null)
    stddev: (auction_bid_stddev_fields | null)
    stddev_pop: (auction_bid_stddev_pop_fields | null)
    stddev_samp: (auction_bid_stddev_samp_fields | null)
    sum: (auction_bid_sum_fields | null)
    var_pop: (auction_bid_var_pop_fields | null)
    var_samp: (auction_bid_var_samp_fields | null)
    variance: (auction_bid_variance_fields | null)
    __typename: 'auction_bid_aggregate_fields'
}


/** aggregate avg on columns */
export interface auction_bid_avg_fields {
    auction_id: (Scalars['Float'] | null)
    auction_version: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'auction_bid_avg_fields'
}


/** unique or primary key constraints on table "auction_bid" */
export type auction_bid_constraint = 'PK_bb11c1cfa7707fac20673b28ef5'


/** aggregate max on columns */
export interface auction_bid_max_fields {
    auction_id: (Scalars['Int'] | null)
    auction_version: (Scalars['Int'] | null)
    bidder_id: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['uuid'] | null)
    price: (Scalars['numeric'] | null)
    __typename: 'auction_bid_max_fields'
}


/** aggregate min on columns */
export interface auction_bid_min_fields {
    auction_id: (Scalars['Int'] | null)
    auction_version: (Scalars['Int'] | null)
    bidder_id: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['uuid'] | null)
    price: (Scalars['numeric'] | null)
    __typename: 'auction_bid_min_fields'
}


/** response of any mutation on the table "auction_bid" */
export interface auction_bid_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: auction_bid[]
    __typename: 'auction_bid_mutation_response'
}


/** select columns of table "auction_bid" */
export type auction_bid_select_column = 'auction_id' | 'auction_version' | 'bidder_id' | 'created_at' | 'id' | 'price'


/** aggregate stddev on columns */
export interface auction_bid_stddev_fields {
    auction_id: (Scalars['Float'] | null)
    auction_version: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'auction_bid_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface auction_bid_stddev_pop_fields {
    auction_id: (Scalars['Float'] | null)
    auction_version: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'auction_bid_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface auction_bid_stddev_samp_fields {
    auction_id: (Scalars['Float'] | null)
    auction_version: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'auction_bid_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface auction_bid_sum_fields {
    auction_id: (Scalars['Int'] | null)
    auction_version: (Scalars['Int'] | null)
    price: (Scalars['numeric'] | null)
    __typename: 'auction_bid_sum_fields'
}


/** columns and relationships of "auction_bid_table" */
export interface auction_bid_table {
    /** An array relationship */
    auctions: auction[]
    /** An aggregate relationship */
    auctions_aggregate: auction_aggregate
    id: Scalars['Int']
    table: Scalars['jsonb']
    __typename: 'auction_bid_table'
}


/** aggregated selection of "auction_bid_table" */
export interface auction_bid_table_aggregate {
    aggregate: (auction_bid_table_aggregate_fields | null)
    nodes: auction_bid_table[]
    __typename: 'auction_bid_table_aggregate'
}


/** aggregate fields of "auction_bid_table" */
export interface auction_bid_table_aggregate_fields {
    avg: (auction_bid_table_avg_fields | null)
    count: Scalars['Int']
    max: (auction_bid_table_max_fields | null)
    min: (auction_bid_table_min_fields | null)
    stddev: (auction_bid_table_stddev_fields | null)
    stddev_pop: (auction_bid_table_stddev_pop_fields | null)
    stddev_samp: (auction_bid_table_stddev_samp_fields | null)
    sum: (auction_bid_table_sum_fields | null)
    var_pop: (auction_bid_table_var_pop_fields | null)
    var_samp: (auction_bid_table_var_samp_fields | null)
    variance: (auction_bid_table_variance_fields | null)
    __typename: 'auction_bid_table_aggregate_fields'
}


/** aggregate avg on columns */
export interface auction_bid_table_avg_fields {
    id: (Scalars['Float'] | null)
    __typename: 'auction_bid_table_avg_fields'
}


/** unique or primary key constraints on table "auction_bid_table" */
export type auction_bid_table_constraint = 'PK_57b09fff66c5df1611c7b595a10'


/** aggregate max on columns */
export interface auction_bid_table_max_fields {
    id: (Scalars['Int'] | null)
    __typename: 'auction_bid_table_max_fields'
}


/** aggregate min on columns */
export interface auction_bid_table_min_fields {
    id: (Scalars['Int'] | null)
    __typename: 'auction_bid_table_min_fields'
}


/** response of any mutation on the table "auction_bid_table" */
export interface auction_bid_table_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: auction_bid_table[]
    __typename: 'auction_bid_table_mutation_response'
}


/** select columns of table "auction_bid_table" */
export type auction_bid_table_select_column = 'id' | 'table'


/** aggregate stddev on columns */
export interface auction_bid_table_stddev_fields {
    id: (Scalars['Float'] | null)
    __typename: 'auction_bid_table_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface auction_bid_table_stddev_pop_fields {
    id: (Scalars['Float'] | null)
    __typename: 'auction_bid_table_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface auction_bid_table_stddev_samp_fields {
    id: (Scalars['Float'] | null)
    __typename: 'auction_bid_table_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface auction_bid_table_sum_fields {
    id: (Scalars['Int'] | null)
    __typename: 'auction_bid_table_sum_fields'
}


/** update columns of table "auction_bid_table" */
export type auction_bid_table_update_column = 'id' | 'table'


/** aggregate var_pop on columns */
export interface auction_bid_table_var_pop_fields {
    id: (Scalars['Float'] | null)
    __typename: 'auction_bid_table_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface auction_bid_table_var_samp_fields {
    id: (Scalars['Float'] | null)
    __typename: 'auction_bid_table_var_samp_fields'
}


/** aggregate variance on columns */
export interface auction_bid_table_variance_fields {
    id: (Scalars['Float'] | null)
    __typename: 'auction_bid_table_variance_fields'
}


/** update columns of table "auction_bid" */
export type auction_bid_update_column = 'auction_id' | 'auction_version' | 'bidder_id' | 'created_at' | 'id' | 'price'


/** aggregate var_pop on columns */
export interface auction_bid_var_pop_fields {
    auction_id: (Scalars['Float'] | null)
    auction_version: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'auction_bid_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface auction_bid_var_samp_fields {
    auction_id: (Scalars['Float'] | null)
    auction_version: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'auction_bid_var_samp_fields'
}


/** aggregate variance on columns */
export interface auction_bid_variance_fields {
    auction_id: (Scalars['Float'] | null)
    auction_version: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'auction_bid_variance_fields'
}


/** unique or primary key constraints on table "auction" */
export type auction_constraint = 'PK_b15570c9d210ca79ad2c9b4e398'


/** aggregate max on columns */
export interface auction_max_fields {
    bid_table_id: (Scalars['Int'] | null)
    bid_time_increment: (Scalars['Int'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    ends_at: (Scalars['timestamptz'] | null)
    fulfilled_at: (Scalars['timestamptz'] | null)
    id: (Scalars['Int'] | null)
    min_duration: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    reserve_price: (Scalars['bigint'] | null)
    seller_id: (Scalars['String'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'auction_max_fields'
}


/** aggregate min on columns */
export interface auction_min_fields {
    bid_table_id: (Scalars['Int'] | null)
    bid_time_increment: (Scalars['Int'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    ends_at: (Scalars['timestamptz'] | null)
    fulfilled_at: (Scalars['timestamptz'] | null)
    id: (Scalars['Int'] | null)
    min_duration: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    reserve_price: (Scalars['bigint'] | null)
    seller_id: (Scalars['String'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'auction_min_fields'
}


/** response of any mutation on the table "auction" */
export interface auction_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: auction[]
    __typename: 'auction_mutation_response'
}


/** select columns of table "auction" */
export type auction_select_column = 'bid_table_id' | 'bid_time_increment' | 'cancelled_at' | 'created_at' | 'ends_at' | 'fulfilled_at' | 'id' | 'min_duration' | 'objkt_id' | 'objkt_issuer_version' | 'reserve_price' | 'seller_id' | 'version'


/** aggregate stddev on columns */
export interface auction_stddev_fields {
    bid_table_id: (Scalars['Float'] | null)
    bid_time_increment: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    min_duration: (Scalars['Float'] | null)
    reserve_price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'auction_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface auction_stddev_pop_fields {
    bid_table_id: (Scalars['Float'] | null)
    bid_time_increment: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    min_duration: (Scalars['Float'] | null)
    reserve_price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'auction_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface auction_stddev_samp_fields {
    bid_table_id: (Scalars['Float'] | null)
    bid_time_increment: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    min_duration: (Scalars['Float'] | null)
    reserve_price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'auction_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface auction_sum_fields {
    bid_table_id: (Scalars['Int'] | null)
    bid_time_increment: (Scalars['Int'] | null)
    id: (Scalars['Int'] | null)
    min_duration: (Scalars['Int'] | null)
    reserve_price: (Scalars['bigint'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'auction_sum_fields'
}


/** update columns of table "auction" */
export type auction_update_column = 'bid_table_id' | 'bid_time_increment' | 'cancelled_at' | 'created_at' | 'ends_at' | 'fulfilled_at' | 'id' | 'min_duration' | 'objkt_id' | 'objkt_issuer_version' | 'reserve_price' | 'seller_id' | 'version'


/** aggregate var_pop on columns */
export interface auction_var_pop_fields {
    bid_table_id: (Scalars['Float'] | null)
    bid_time_increment: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    min_duration: (Scalars['Float'] | null)
    reserve_price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'auction_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface auction_var_samp_fields {
    bid_table_id: (Scalars['Float'] | null)
    bid_time_increment: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    min_duration: (Scalars['Float'] | null)
    reserve_price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'auction_var_samp_fields'
}


/** aggregate variance on columns */
export interface auction_variance_fields {
    bid_table_id: (Scalars['Float'] | null)
    bid_time_increment: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    min_duration: (Scalars['Float'] | null)
    reserve_price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'auction_variance_fields'
}


/** columns and relationships of "codex" */
export interface codex {
    author_id: Scalars['String']
    /** An array relationship */
    generative_tokens: generative_token[]
    /** An aggregate relationship */
    generative_tokens_aggregate: generative_token_aggregate
    id: Scalars['String']
    locked: Scalars['Boolean']
    token_version: Scalars['generative_token_version']
    type: Scalars['codex_type_enum']
    /** An object relationship */
    user: user
    value: (Scalars['String'] | null)
    __typename: 'codex'
}


/** aggregated selection of "codex" */
export interface codex_aggregate {
    aggregate: (codex_aggregate_fields | null)
    nodes: codex[]
    __typename: 'codex_aggregate'
}


/** aggregate fields of "codex" */
export interface codex_aggregate_fields {
    count: Scalars['Int']
    max: (codex_max_fields | null)
    min: (codex_min_fields | null)
    __typename: 'codex_aggregate_fields'
}


/** unique or primary key constraints on table "codex" */
export type codex_constraint = 'PK_c3191249ea093f9859ee0d383c1'


/** aggregate max on columns */
export interface codex_max_fields {
    author_id: (Scalars['String'] | null)
    id: (Scalars['String'] | null)
    token_version: (Scalars['generative_token_version'] | null)
    type: (Scalars['codex_type_enum'] | null)
    value: (Scalars['String'] | null)
    __typename: 'codex_max_fields'
}


/** aggregate min on columns */
export interface codex_min_fields {
    author_id: (Scalars['String'] | null)
    id: (Scalars['String'] | null)
    token_version: (Scalars['generative_token_version'] | null)
    type: (Scalars['codex_type_enum'] | null)
    value: (Scalars['String'] | null)
    __typename: 'codex_min_fields'
}


/** response of any mutation on the table "codex" */
export interface codex_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: codex[]
    __typename: 'codex_mutation_response'
}


/** select columns of table "codex" */
export type codex_select_column = 'author_id' | 'id' | 'locked' | 'token_version' | 'type' | 'value'


/** select "codex_aggregate_bool_exp_bool_and_arguments_columns" columns of table "codex" */
export type codex_select_column_codex_aggregate_bool_exp_bool_and_arguments_columns = 'locked'


/** select "codex_aggregate_bool_exp_bool_or_arguments_columns" columns of table "codex" */
export type codex_select_column_codex_aggregate_bool_exp_bool_or_arguments_columns = 'locked'


/** update columns of table "codex" */
export type codex_update_column = 'author_id' | 'id' | 'locked' | 'token_version' | 'type' | 'value'


/** columns and relationships of "codex_update_request" */
export interface codex_update_request {
    codex_id: Scalars['String']
    created_at: Scalars['timestamptz']
    /** An object relationship */
    generative_token: generative_token
    status: Scalars['codex_update_request_status_enum']
    token_id: Scalars['String']
    token_version: Scalars['generative_token_version']
    __typename: 'codex_update_request'
}


/** aggregated selection of "codex_update_request" */
export interface codex_update_request_aggregate {
    aggregate: (codex_update_request_aggregate_fields | null)
    nodes: codex_update_request[]
    __typename: 'codex_update_request_aggregate'
}


/** aggregate fields of "codex_update_request" */
export interface codex_update_request_aggregate_fields {
    count: Scalars['Int']
    max: (codex_update_request_max_fields | null)
    min: (codex_update_request_min_fields | null)
    __typename: 'codex_update_request_aggregate_fields'
}


/** unique or primary key constraints on table "codex_update_request" */
export type codex_update_request_constraint = 'PK_5841bafd692945d7920558190cd'


/** aggregate max on columns */
export interface codex_update_request_max_fields {
    codex_id: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    status: (Scalars['codex_update_request_status_enum'] | null)
    token_id: (Scalars['String'] | null)
    token_version: (Scalars['generative_token_version'] | null)
    __typename: 'codex_update_request_max_fields'
}


/** aggregate min on columns */
export interface codex_update_request_min_fields {
    codex_id: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    status: (Scalars['codex_update_request_status_enum'] | null)
    token_id: (Scalars['String'] | null)
    token_version: (Scalars['generative_token_version'] | null)
    __typename: 'codex_update_request_min_fields'
}


/** response of any mutation on the table "codex_update_request" */
export interface codex_update_request_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: codex_update_request[]
    __typename: 'codex_update_request_mutation_response'
}


/** select columns of table "codex_update_request" */
export type codex_update_request_select_column = 'codex_id' | 'created_at' | 'status' | 'token_id' | 'token_version'


/** update columns of table "codex_update_request" */
export type codex_update_request_update_column = 'codex_id' | 'created_at' | 'status' | 'token_id' | 'token_version'


/** columns and relationships of "collaboration" */
export interface collaboration {
    collaboration_contract_id: Scalars['String']
    collaborator_id: Scalars['String']
    /** An object relationship */
    user: user
    /** An object relationship */
    userByCollaboratorId: user
    __typename: 'collaboration'
}


/** aggregated selection of "collaboration" */
export interface collaboration_aggregate {
    aggregate: (collaboration_aggregate_fields | null)
    nodes: collaboration[]
    __typename: 'collaboration_aggregate'
}


/** aggregate fields of "collaboration" */
export interface collaboration_aggregate_fields {
    count: Scalars['Int']
    max: (collaboration_max_fields | null)
    min: (collaboration_min_fields | null)
    __typename: 'collaboration_aggregate_fields'
}


/** unique or primary key constraints on table "collaboration" */
export type collaboration_constraint = 'PK_40fb1f0eb56850dff4dbb5b0834'


/** aggregate max on columns */
export interface collaboration_max_fields {
    collaboration_contract_id: (Scalars['String'] | null)
    collaborator_id: (Scalars['String'] | null)
    __typename: 'collaboration_max_fields'
}


/** aggregate min on columns */
export interface collaboration_min_fields {
    collaboration_contract_id: (Scalars['String'] | null)
    collaborator_id: (Scalars['String'] | null)
    __typename: 'collaboration_min_fields'
}


/** response of any mutation on the table "collaboration" */
export interface collaboration_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: collaboration[]
    __typename: 'collaboration_mutation_response'
}


/** select columns of table "collaboration" */
export type collaboration_select_column = 'collaboration_contract_id' | 'collaborator_id'


/** update columns of table "collaboration" */
export type collaboration_update_column = 'collaboration_contract_id' | 'collaborator_id'


/** columns and relationships of "collection_offer" */
export interface collection_offer {
    amount: Scalars['numeric']
    buyer_id: Scalars['String']
    cancelled_at: (Scalars['timestamptz'] | null)
    completed_at: (Scalars['timestamptz'] | null)
    created_at: Scalars['timestamptz']
    /** An object relationship */
    generative_token: generative_token
    id: Scalars['String']
    initial_amount: Scalars['numeric']
    price: Scalars['numeric']
    token_id: Scalars['String']
    /** An object relationship */
    user: user
    version: Scalars['Int']
    __typename: 'collection_offer'
}


/** aggregated selection of "collection_offer" */
export interface collection_offer_aggregate {
    aggregate: (collection_offer_aggregate_fields | null)
    nodes: collection_offer[]
    __typename: 'collection_offer_aggregate'
}


/** aggregate fields of "collection_offer" */
export interface collection_offer_aggregate_fields {
    avg: (collection_offer_avg_fields | null)
    count: Scalars['Int']
    max: (collection_offer_max_fields | null)
    min: (collection_offer_min_fields | null)
    stddev: (collection_offer_stddev_fields | null)
    stddev_pop: (collection_offer_stddev_pop_fields | null)
    stddev_samp: (collection_offer_stddev_samp_fields | null)
    sum: (collection_offer_sum_fields | null)
    var_pop: (collection_offer_var_pop_fields | null)
    var_samp: (collection_offer_var_samp_fields | null)
    variance: (collection_offer_variance_fields | null)
    __typename: 'collection_offer_aggregate_fields'
}


/** aggregate avg on columns */
export interface collection_offer_avg_fields {
    amount: (Scalars['Float'] | null)
    initial_amount: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'collection_offer_avg_fields'
}


/** unique or primary key constraints on table "collection_offer" */
export type collection_offer_constraint = 'PK_a367623ce45dde246af6122e71e'


/** aggregate max on columns */
export interface collection_offer_max_fields {
    amount: (Scalars['numeric'] | null)
    buyer_id: (Scalars['String'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    completed_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    initial_amount: (Scalars['numeric'] | null)
    price: (Scalars['numeric'] | null)
    token_id: (Scalars['String'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'collection_offer_max_fields'
}


/** aggregate min on columns */
export interface collection_offer_min_fields {
    amount: (Scalars['numeric'] | null)
    buyer_id: (Scalars['String'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    completed_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    initial_amount: (Scalars['numeric'] | null)
    price: (Scalars['numeric'] | null)
    token_id: (Scalars['String'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'collection_offer_min_fields'
}


/** response of any mutation on the table "collection_offer" */
export interface collection_offer_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: collection_offer[]
    __typename: 'collection_offer_mutation_response'
}


/** select columns of table "collection_offer" */
export type collection_offer_select_column = 'amount' | 'buyer_id' | 'cancelled_at' | 'completed_at' | 'created_at' | 'id' | 'initial_amount' | 'price' | 'token_id' | 'version'


/** aggregate stddev on columns */
export interface collection_offer_stddev_fields {
    amount: (Scalars['Float'] | null)
    initial_amount: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'collection_offer_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface collection_offer_stddev_pop_fields {
    amount: (Scalars['Float'] | null)
    initial_amount: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'collection_offer_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface collection_offer_stddev_samp_fields {
    amount: (Scalars['Float'] | null)
    initial_amount: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'collection_offer_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface collection_offer_sum_fields {
    amount: (Scalars['numeric'] | null)
    initial_amount: (Scalars['numeric'] | null)
    price: (Scalars['numeric'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'collection_offer_sum_fields'
}


/** update columns of table "collection_offer" */
export type collection_offer_update_column = 'amount' | 'buyer_id' | 'cancelled_at' | 'completed_at' | 'created_at' | 'id' | 'initial_amount' | 'price' | 'token_id' | 'version'


/** aggregate var_pop on columns */
export interface collection_offer_var_pop_fields {
    amount: (Scalars['Float'] | null)
    initial_amount: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'collection_offer_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface collection_offer_var_samp_fields {
    amount: (Scalars['Float'] | null)
    initial_amount: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'collection_offer_var_samp_fields'
}


/** aggregate variance on columns */
export interface collection_offer_variance_fields {
    amount: (Scalars['Float'] | null)
    initial_amount: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'collection_offer_variance_fields'
}


/** ordering argument of a cursor */
export type cursor_ordering = 'ASC' | 'DESC'


/** columns and relationships of "generative_token" */
export interface generative_token {
    /** An array relationship */
    actions: action[]
    /** An aggregate relationship */
    actions_aggregate: action_aggregate
    author_id: (Scalars['String'] | null)
    balance: Scalars['numeric']
    captureMediaId: (Scalars['bpchar'] | null)
    /** An object relationship */
    codex: (codex | null)
    codexId: (Scalars['String'] | null)
    codex_id: (Scalars['String'] | null)
    /** An array relationship */
    codex_update_requests: codex_update_request[]
    /** An aggregate relationship */
    codex_update_requests_aggregate: codex_update_request_aggregate
    /** An array relationship */
    collection_offers: collection_offer[]
    /** An aggregate relationship */
    collection_offers_aggregate: collection_offer_aggregate
    created_at: Scalars['timestamptz']
    display_uri: (Scalars['String'] | null)
    enabled: Scalars['Boolean']
    flag: Scalars['generative_token_flag_enum']
    generative_uri: (Scalars['String'] | null)
    id: Scalars['String']
    input_bytes_size: Scalars['Int']
    iterations_count: (Scalars['numeric'] | null)
    labels: Scalars['_int4']
    lock_end: Scalars['timestamptz']
    lock_price_for_reserves: Scalars['Boolean']
    locked_seconds: Scalars['Int']
    /** An object relationship */
    market_stat: (market_stats | null)
    /** An array relationship */
    market_stats_histories: market_stats_history[]
    /** An aggregate relationship */
    market_stats_histories_aggregate: market_stats_history_aggregate
    /** An object relationship */
    media_image: (media_image | null)
    metadata: (Scalars['json'] | null)
    metadata_uri: (Scalars['String'] | null)
    mint_opens_at: Scalars['timestamptz']
    /** An array relationship */
    mint_ticket_settings: mint_ticket_settings[]
    /** An aggregate relationship */
    mint_ticket_settings_aggregate: mint_ticket_settings_aggregate
    /** An array relationship */
    mint_tickets: mint_ticket[]
    /** An aggregate relationship */
    mint_tickets_aggregate: mint_ticket_aggregate
    /** An object relationship */
    moderation_reason: (moderation_reason | null)
    moderation_reason_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    /** An array relationship */
    objkts: objkt[]
    /** An aggregate relationship */
    objkts_aggregate: objkt_aggregate
    open_editions: Scalars['Boolean']
    open_editions_ends_at: (Scalars['timestamptz'] | null)
    original_supply: Scalars['numeric']
    params_definition: (Scalars['json'] | null)
    preview_input_bytes: (Scalars['String'] | null)
    /** An array relationship */
    pricing_dutch_auctions: pricing_dutch_auction[]
    /** An aggregate relationship */
    pricing_dutch_auctions_aggregate: pricing_dutch_auction_aggregate
    /** An array relationship */
    pricing_fixeds: pricing_fixed[]
    /** An aggregate relationship */
    pricing_fixeds_aggregate: pricing_fixed_aggregate
    /** An array relationship */
    redeemables: redeemable[]
    /** An aggregate relationship */
    redeemables_aggregate: redeemable_aggregate
    /** An array relationship */
    reports: report[]
    /** An aggregate relationship */
    reports_aggregate: report_aggregate
    /** An array relationship */
    reserves: reserve[]
    /** An aggregate relationship */
    reserves_aggregate: reserve_aggregate
    royalties: Scalars['Int']
    slug: (Scalars['String'] | null)
    /** An array relationship */
    splits: split[]
    /** An array relationship */
    splitsByGenerativeTokenPrimaryId: split[]
    /** An aggregate relationship */
    splitsByGenerativeTokenPrimaryId_aggregate: split_aggregate
    /** An aggregate relationship */
    splits_aggregate: split_aggregate
    supply: Scalars['numeric']
    tags: (Scalars['_text'] | null)
    thumbnail_uri: (Scalars['String'] | null)
    /** An array relationship */
    transactions: transaction[]
    /** An aggregate relationship */
    transactions_aggregate: transaction_aggregate
    updated_at: (Scalars['timestamptz'] | null)
    /** An object relationship */
    user: (user | null)
    version: Scalars['generative_token_version']
    __typename: 'generative_token'
}


/** aggregated selection of "generative_token" */
export interface generative_token_aggregate {
    aggregate: (generative_token_aggregate_fields | null)
    nodes: generative_token[]
    __typename: 'generative_token_aggregate'
}


/** aggregate fields of "generative_token" */
export interface generative_token_aggregate_fields {
    avg: (generative_token_avg_fields | null)
    count: Scalars['Int']
    max: (generative_token_max_fields | null)
    min: (generative_token_min_fields | null)
    stddev: (generative_token_stddev_fields | null)
    stddev_pop: (generative_token_stddev_pop_fields | null)
    stddev_samp: (generative_token_stddev_samp_fields | null)
    sum: (generative_token_sum_fields | null)
    var_pop: (generative_token_var_pop_fields | null)
    var_samp: (generative_token_var_samp_fields | null)
    variance: (generative_token_variance_fields | null)
    __typename: 'generative_token_aggregate_fields'
}


/** aggregate avg on columns */
export interface generative_token_avg_fields {
    balance: (Scalars['Float'] | null)
    input_bytes_size: (Scalars['Float'] | null)
    iterations_count: (Scalars['Float'] | null)
    locked_seconds: (Scalars['Float'] | null)
    original_supply: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    supply: (Scalars['Float'] | null)
    __typename: 'generative_token_avg_fields'
}


/** unique or primary key constraints on table "generative_token" */
export type generative_token_constraint = 'IDX_d05e635a41301df6701d7be2d3' | 'PK_cb76f91024475ec70a1625b1b27'


/** aggregate max on columns */
export interface generative_token_max_fields {
    author_id: (Scalars['String'] | null)
    balance: (Scalars['numeric'] | null)
    captureMediaId: (Scalars['bpchar'] | null)
    codexId: (Scalars['String'] | null)
    codex_id: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    display_uri: (Scalars['String'] | null)
    flag: (Scalars['generative_token_flag_enum'] | null)
    generative_uri: (Scalars['String'] | null)
    id: (Scalars['String'] | null)
    input_bytes_size: (Scalars['Int'] | null)
    iterations_count: (Scalars['numeric'] | null)
    lock_end: (Scalars['timestamptz'] | null)
    locked_seconds: (Scalars['Int'] | null)
    metadata_uri: (Scalars['String'] | null)
    mint_opens_at: (Scalars['timestamptz'] | null)
    moderation_reason_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    open_editions_ends_at: (Scalars['timestamptz'] | null)
    original_supply: (Scalars['numeric'] | null)
    preview_input_bytes: (Scalars['String'] | null)
    royalties: (Scalars['Int'] | null)
    slug: (Scalars['String'] | null)
    supply: (Scalars['numeric'] | null)
    thumbnail_uri: (Scalars['String'] | null)
    updated_at: (Scalars['timestamptz'] | null)
    version: (Scalars['generative_token_version'] | null)
    __typename: 'generative_token_max_fields'
}


/** aggregate min on columns */
export interface generative_token_min_fields {
    author_id: (Scalars['String'] | null)
    balance: (Scalars['numeric'] | null)
    captureMediaId: (Scalars['bpchar'] | null)
    codexId: (Scalars['String'] | null)
    codex_id: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    display_uri: (Scalars['String'] | null)
    flag: (Scalars['generative_token_flag_enum'] | null)
    generative_uri: (Scalars['String'] | null)
    id: (Scalars['String'] | null)
    input_bytes_size: (Scalars['Int'] | null)
    iterations_count: (Scalars['numeric'] | null)
    lock_end: (Scalars['timestamptz'] | null)
    locked_seconds: (Scalars['Int'] | null)
    metadata_uri: (Scalars['String'] | null)
    mint_opens_at: (Scalars['timestamptz'] | null)
    moderation_reason_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    open_editions_ends_at: (Scalars['timestamptz'] | null)
    original_supply: (Scalars['numeric'] | null)
    preview_input_bytes: (Scalars['String'] | null)
    royalties: (Scalars['Int'] | null)
    slug: (Scalars['String'] | null)
    supply: (Scalars['numeric'] | null)
    thumbnail_uri: (Scalars['String'] | null)
    updated_at: (Scalars['timestamptz'] | null)
    version: (Scalars['generative_token_version'] | null)
    __typename: 'generative_token_min_fields'
}


/** response of any mutation on the table "generative_token" */
export interface generative_token_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: generative_token[]
    __typename: 'generative_token_mutation_response'
}


/** select columns of table "generative_token" */
export type generative_token_select_column = 'author_id' | 'balance' | 'captureMediaId' | 'codexId' | 'codex_id' | 'created_at' | 'display_uri' | 'enabled' | 'flag' | 'generative_uri' | 'id' | 'input_bytes_size' | 'iterations_count' | 'labels' | 'lock_end' | 'lock_price_for_reserves' | 'locked_seconds' | 'metadata' | 'metadata_uri' | 'mint_opens_at' | 'moderation_reason_id' | 'name' | 'open_editions' | 'open_editions_ends_at' | 'original_supply' | 'params_definition' | 'preview_input_bytes' | 'royalties' | 'slug' | 'supply' | 'tags' | 'thumbnail_uri' | 'updated_at' | 'version'


/** select "generative_token_aggregate_bool_exp_bool_and_arguments_columns" columns of table "generative_token" */
export type generative_token_select_column_generative_token_aggregate_bool_exp_bool_and_arguments_columns = 'enabled' | 'lock_price_for_reserves' | 'open_editions'


/** select "generative_token_aggregate_bool_exp_bool_or_arguments_columns" columns of table "generative_token" */
export type generative_token_select_column_generative_token_aggregate_bool_exp_bool_or_arguments_columns = 'enabled' | 'lock_price_for_reserves' | 'open_editions'


/** aggregate stddev on columns */
export interface generative_token_stddev_fields {
    balance: (Scalars['Float'] | null)
    input_bytes_size: (Scalars['Float'] | null)
    iterations_count: (Scalars['Float'] | null)
    locked_seconds: (Scalars['Float'] | null)
    original_supply: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    supply: (Scalars['Float'] | null)
    __typename: 'generative_token_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface generative_token_stddev_pop_fields {
    balance: (Scalars['Float'] | null)
    input_bytes_size: (Scalars['Float'] | null)
    iterations_count: (Scalars['Float'] | null)
    locked_seconds: (Scalars['Float'] | null)
    original_supply: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    supply: (Scalars['Float'] | null)
    __typename: 'generative_token_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface generative_token_stddev_samp_fields {
    balance: (Scalars['Float'] | null)
    input_bytes_size: (Scalars['Float'] | null)
    iterations_count: (Scalars['Float'] | null)
    locked_seconds: (Scalars['Float'] | null)
    original_supply: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    supply: (Scalars['Float'] | null)
    __typename: 'generative_token_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface generative_token_sum_fields {
    balance: (Scalars['numeric'] | null)
    input_bytes_size: (Scalars['Int'] | null)
    iterations_count: (Scalars['numeric'] | null)
    locked_seconds: (Scalars['Int'] | null)
    original_supply: (Scalars['numeric'] | null)
    royalties: (Scalars['Int'] | null)
    supply: (Scalars['numeric'] | null)
    __typename: 'generative_token_sum_fields'
}


/** update columns of table "generative_token" */
export type generative_token_update_column = 'author_id' | 'balance' | 'captureMediaId' | 'codexId' | 'codex_id' | 'created_at' | 'display_uri' | 'enabled' | 'flag' | 'generative_uri' | 'id' | 'input_bytes_size' | 'iterations_count' | 'labels' | 'lock_end' | 'lock_price_for_reserves' | 'locked_seconds' | 'metadata' | 'metadata_uri' | 'mint_opens_at' | 'moderation_reason_id' | 'name' | 'open_editions' | 'open_editions_ends_at' | 'original_supply' | 'params_definition' | 'preview_input_bytes' | 'royalties' | 'slug' | 'supply' | 'tags' | 'thumbnail_uri' | 'updated_at' | 'version'


/** aggregate var_pop on columns */
export interface generative_token_var_pop_fields {
    balance: (Scalars['Float'] | null)
    input_bytes_size: (Scalars['Float'] | null)
    iterations_count: (Scalars['Float'] | null)
    locked_seconds: (Scalars['Float'] | null)
    original_supply: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    supply: (Scalars['Float'] | null)
    __typename: 'generative_token_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface generative_token_var_samp_fields {
    balance: (Scalars['Float'] | null)
    input_bytes_size: (Scalars['Float'] | null)
    iterations_count: (Scalars['Float'] | null)
    locked_seconds: (Scalars['Float'] | null)
    original_supply: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    supply: (Scalars['Float'] | null)
    __typename: 'generative_token_var_samp_fields'
}


/** aggregate variance on columns */
export interface generative_token_variance_fields {
    balance: (Scalars['Float'] | null)
    input_bytes_size: (Scalars['Float'] | null)
    iterations_count: (Scalars['Float'] | null)
    locked_seconds: (Scalars['Float'] | null)
    original_supply: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    supply: (Scalars['Float'] | null)
    __typename: 'generative_token_variance_fields'
}


/** columns and relationships of "gentk_assign" */
export interface gentk_assign {
    assigned_at: (Scalars['timestamptz'] | null)
    attempts: Scalars['Int']
    created_at: Scalars['timestamptz']
    gentk_id: Scalars['String']
    gentk_issuer_version: Scalars['generative_token_version']
    /** An object relationship */
    objkt: (objkt | null)
    retries: Scalars['Int']
    state: Scalars['gentk_assign_state_enum']
    __typename: 'gentk_assign'
}


/** aggregated selection of "gentk_assign" */
export interface gentk_assign_aggregate {
    aggregate: (gentk_assign_aggregate_fields | null)
    nodes: gentk_assign[]
    __typename: 'gentk_assign_aggregate'
}


/** aggregate fields of "gentk_assign" */
export interface gentk_assign_aggregate_fields {
    avg: (gentk_assign_avg_fields | null)
    count: Scalars['Int']
    max: (gentk_assign_max_fields | null)
    min: (gentk_assign_min_fields | null)
    stddev: (gentk_assign_stddev_fields | null)
    stddev_pop: (gentk_assign_stddev_pop_fields | null)
    stddev_samp: (gentk_assign_stddev_samp_fields | null)
    sum: (gentk_assign_sum_fields | null)
    var_pop: (gentk_assign_var_pop_fields | null)
    var_samp: (gentk_assign_var_samp_fields | null)
    variance: (gentk_assign_variance_fields | null)
    __typename: 'gentk_assign_aggregate_fields'
}


/** aggregate avg on columns */
export interface gentk_assign_avg_fields {
    attempts: (Scalars['Float'] | null)
    retries: (Scalars['Float'] | null)
    __typename: 'gentk_assign_avg_fields'
}


/** unique or primary key constraints on table "gentk_assign" */
export type gentk_assign_constraint = 'PK_3d3ff4f388a5b98dda259df6ec2'


/** aggregate max on columns */
export interface gentk_assign_max_fields {
    assigned_at: (Scalars['timestamptz'] | null)
    attempts: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    gentk_id: (Scalars['String'] | null)
    gentk_issuer_version: (Scalars['generative_token_version'] | null)
    retries: (Scalars['Int'] | null)
    state: (Scalars['gentk_assign_state_enum'] | null)
    __typename: 'gentk_assign_max_fields'
}


/** aggregate min on columns */
export interface gentk_assign_min_fields {
    assigned_at: (Scalars['timestamptz'] | null)
    attempts: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    gentk_id: (Scalars['String'] | null)
    gentk_issuer_version: (Scalars['generative_token_version'] | null)
    retries: (Scalars['Int'] | null)
    state: (Scalars['gentk_assign_state_enum'] | null)
    __typename: 'gentk_assign_min_fields'
}


/** response of any mutation on the table "gentk_assign" */
export interface gentk_assign_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: gentk_assign[]
    __typename: 'gentk_assign_mutation_response'
}


/** select columns of table "gentk_assign" */
export type gentk_assign_select_column = 'assigned_at' | 'attempts' | 'created_at' | 'gentk_id' | 'gentk_issuer_version' | 'retries' | 'state'


/** aggregate stddev on columns */
export interface gentk_assign_stddev_fields {
    attempts: (Scalars['Float'] | null)
    retries: (Scalars['Float'] | null)
    __typename: 'gentk_assign_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface gentk_assign_stddev_pop_fields {
    attempts: (Scalars['Float'] | null)
    retries: (Scalars['Float'] | null)
    __typename: 'gentk_assign_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface gentk_assign_stddev_samp_fields {
    attempts: (Scalars['Float'] | null)
    retries: (Scalars['Float'] | null)
    __typename: 'gentk_assign_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface gentk_assign_sum_fields {
    attempts: (Scalars['Int'] | null)
    retries: (Scalars['Int'] | null)
    __typename: 'gentk_assign_sum_fields'
}


/** update columns of table "gentk_assign" */
export type gentk_assign_update_column = 'assigned_at' | 'attempts' | 'created_at' | 'gentk_id' | 'gentk_issuer_version' | 'retries' | 'state'


/** aggregate var_pop on columns */
export interface gentk_assign_var_pop_fields {
    attempts: (Scalars['Float'] | null)
    retries: (Scalars['Float'] | null)
    __typename: 'gentk_assign_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface gentk_assign_var_samp_fields {
    attempts: (Scalars['Float'] | null)
    retries: (Scalars['Float'] | null)
    __typename: 'gentk_assign_var_samp_fields'
}


/** aggregate variance on columns */
export interface gentk_assign_variance_fields {
    attempts: (Scalars['Float'] | null)
    retries: (Scalars['Float'] | null)
    __typename: 'gentk_assign_variance_fields'
}


/** columns and relationships of "ipfs_cid" */
export interface ipfs_cid {
    cid: Scalars['String']
    __typename: 'ipfs_cid'
}


/** aggregated selection of "ipfs_cid" */
export interface ipfs_cid_aggregate {
    aggregate: (ipfs_cid_aggregate_fields | null)
    nodes: ipfs_cid[]
    __typename: 'ipfs_cid_aggregate'
}


/** aggregate fields of "ipfs_cid" */
export interface ipfs_cid_aggregate_fields {
    count: Scalars['Int']
    max: (ipfs_cid_max_fields | null)
    min: (ipfs_cid_min_fields | null)
    __typename: 'ipfs_cid_aggregate_fields'
}


/** unique or primary key constraints on table "ipfs_cid" */
export type ipfs_cid_constraint = 'PK_9f69103babd8c233ccb8e6312b8'


/** aggregate max on columns */
export interface ipfs_cid_max_fields {
    cid: (Scalars['String'] | null)
    __typename: 'ipfs_cid_max_fields'
}


/** aggregate min on columns */
export interface ipfs_cid_min_fields {
    cid: (Scalars['String'] | null)
    __typename: 'ipfs_cid_min_fields'
}


/** response of any mutation on the table "ipfs_cid" */
export interface ipfs_cid_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: ipfs_cid[]
    __typename: 'ipfs_cid_mutation_response'
}


/** select columns of table "ipfs_cid" */
export type ipfs_cid_select_column = 'cid'


/** update columns of table "ipfs_cid" */
export type ipfs_cid_update_column = 'cid'


/** columns and relationships of "listing" */
export interface listing {
    accepted_at: (Scalars['timestamptz'] | null)
    accepted_by_id: (Scalars['String'] | null)
    amount: Scalars['numeric']
    /** An object relationship */
    article: (article | null)
    article_id: (Scalars['Int'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: Scalars['timestamptz']
    id: Scalars['String']
    issuer_id: (Scalars['String'] | null)
    /** An object relationship */
    marketStatByIdVersion: (market_stats | null)
    /** An object relationship */
    marketStatByVersionId: (market_stats | null)
    /** An array relationship */
    marketStatsHistoriesByFloorlistingversionFloorlistingid: market_stats_history[]
    /** An aggregate relationship */
    marketStatsHistoriesByFloorlistingversionFloorlistingid_aggregate: market_stats_history_aggregate
    /** An array relationship */
    marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid: market_stats_history[]
    /** An aggregate relationship */
    marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid_aggregate: market_stats_history_aggregate
    /** An object relationship */
    market_stat: (market_stats | null)
    /** An array relationship */
    market_stats_histories: market_stats_history[]
    /** An aggregate relationship */
    market_stats_histories_aggregate: market_stats_history_aggregate
    /** An object relationship */
    objkt: (objkt | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    price: Scalars['numeric']
    royalties: Scalars['Int']
    /** An object relationship */
    user: (user | null)
    /** An object relationship */
    userByAcceptedById: (user | null)
    version: Scalars['Int']
    __typename: 'listing'
}


/** aggregated selection of "listing" */
export interface listing_aggregate {
    aggregate: (listing_aggregate_fields | null)
    nodes: listing[]
    __typename: 'listing_aggregate'
}


/** aggregate fields of "listing" */
export interface listing_aggregate_fields {
    avg: (listing_avg_fields | null)
    count: Scalars['Int']
    max: (listing_max_fields | null)
    min: (listing_min_fields | null)
    stddev: (listing_stddev_fields | null)
    stddev_pop: (listing_stddev_pop_fields | null)
    stddev_samp: (listing_stddev_samp_fields | null)
    sum: (listing_sum_fields | null)
    var_pop: (listing_var_pop_fields | null)
    var_samp: (listing_var_samp_fields | null)
    variance: (listing_variance_fields | null)
    __typename: 'listing_aggregate_fields'
}


/** aggregate avg on columns */
export interface listing_avg_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'listing_avg_fields'
}


/** unique or primary key constraints on table "listing" */
export type listing_constraint = 'PK_de64402045da3d719189d60f30f'


/** aggregate max on columns */
export interface listing_max_fields {
    accepted_at: (Scalars['timestamptz'] | null)
    accepted_by_id: (Scalars['String'] | null)
    amount: (Scalars['numeric'] | null)
    article_id: (Scalars['Int'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    issuer_id: (Scalars['String'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    price: (Scalars['numeric'] | null)
    royalties: (Scalars['Int'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'listing_max_fields'
}


/** aggregate min on columns */
export interface listing_min_fields {
    accepted_at: (Scalars['timestamptz'] | null)
    accepted_by_id: (Scalars['String'] | null)
    amount: (Scalars['numeric'] | null)
    article_id: (Scalars['Int'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    issuer_id: (Scalars['String'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    price: (Scalars['numeric'] | null)
    royalties: (Scalars['Int'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'listing_min_fields'
}


/** response of any mutation on the table "listing" */
export interface listing_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: listing[]
    __typename: 'listing_mutation_response'
}


/** select columns of table "listing" */
export type listing_select_column = 'accepted_at' | 'accepted_by_id' | 'amount' | 'article_id' | 'cancelled_at' | 'created_at' | 'id' | 'issuer_id' | 'objkt_id' | 'objkt_issuer_version' | 'price' | 'royalties' | 'version'


/** aggregate stddev on columns */
export interface listing_stddev_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'listing_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface listing_stddev_pop_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'listing_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface listing_stddev_samp_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'listing_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface listing_sum_fields {
    amount: (Scalars['numeric'] | null)
    article_id: (Scalars['Int'] | null)
    price: (Scalars['numeric'] | null)
    royalties: (Scalars['Int'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'listing_sum_fields'
}


/** update columns of table "listing" */
export type listing_update_column = 'accepted_at' | 'accepted_by_id' | 'amount' | 'article_id' | 'cancelled_at' | 'created_at' | 'id' | 'issuer_id' | 'objkt_id' | 'objkt_issuer_version' | 'price' | 'royalties' | 'version'


/** aggregate var_pop on columns */
export interface listing_var_pop_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'listing_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface listing_var_samp_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'listing_var_samp_fields'
}


/** aggregate variance on columns */
export interface listing_variance_fields {
    amount: (Scalars['Float'] | null)
    article_id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'listing_variance_fields'
}


/** columns and relationships of "market_stats" */
export interface market_stats {
    average_sale_price: (Scalars['numeric'] | null)
    floor: (Scalars['numeric'] | null)
    floor24: (Scalars['numeric'] | null)
    floor30d: (Scalars['numeric'] | null)
    floor7d: (Scalars['numeric'] | null)
    floorListingId: (Scalars['String'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_id: (Scalars['String'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    from: (Scalars['timestamptz'] | null)
    /** An object relationship */
    generative_token: generative_token
    highestSoldListingId: (Scalars['String'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['numeric'] | null)
    highest_sold: (Scalars['numeric'] | null)
    highest_sold24: (Scalars['numeric'] | null)
    highest_sold30d: (Scalars['numeric'] | null)
    highest_sold7d: (Scalars['numeric'] | null)
    highest_sold_listing_id: (Scalars['String'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    listed: (Scalars['Int'] | null)
    /** An object relationship */
    listing: (listing | null)
    /** An object relationship */
    listingByFloorlistingversionFloorlistingid: (listing | null)
    /** An object relationship */
    listingByLowestsoldlistingidLowestsoldlistingversion: (listing | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingId: (Scalars['String'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['numeric'] | null)
    lowest_sold24: (Scalars['numeric'] | null)
    lowest_sold30d: (Scalars['numeric'] | null)
    lowest_sold7d: (Scalars['numeric'] | null)
    lowest_sold_listing_id: (Scalars['String'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['numeric'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['numeric'] | null)
    prim_volume_tz: (Scalars['numeric'] | null)
    sec_volume_nb: (Scalars['numeric'] | null)
    sec_volume_nb24: (Scalars['numeric'] | null)
    sec_volume_nb30d: (Scalars['numeric'] | null)
    sec_volume_nb7d: (Scalars['numeric'] | null)
    sec_volume_tz: (Scalars['numeric'] | null)
    sec_volume_tz24: (Scalars['numeric'] | null)
    sec_volume_tz30d: (Scalars['numeric'] | null)
    sec_volume_tz7d: (Scalars['numeric'] | null)
    to: (Scalars['timestamptz'] | null)
    token_id: Scalars['String']
    __typename: 'market_stats'
}


/** aggregated selection of "market_stats" */
export interface market_stats_aggregate {
    aggregate: (market_stats_aggregate_fields | null)
    nodes: market_stats[]
    __typename: 'market_stats_aggregate'
}


/** aggregate fields of "market_stats" */
export interface market_stats_aggregate_fields {
    avg: (market_stats_avg_fields | null)
    count: Scalars['Int']
    max: (market_stats_max_fields | null)
    min: (market_stats_min_fields | null)
    stddev: (market_stats_stddev_fields | null)
    stddev_pop: (market_stats_stddev_pop_fields | null)
    stddev_samp: (market_stats_stddev_samp_fields | null)
    sum: (market_stats_sum_fields | null)
    var_pop: (market_stats_var_pop_fields | null)
    var_samp: (market_stats_var_samp_fields | null)
    variance: (market_stats_variance_fields | null)
    __typename: 'market_stats_aggregate_fields'
}


/** aggregate avg on columns */
export interface market_stats_avg_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floor24: (Scalars['Float'] | null)
    floor30d: (Scalars['Float'] | null)
    floor7d: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold24: (Scalars['Float'] | null)
    highest_sold30d: (Scalars['Float'] | null)
    highest_sold7d: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold24: (Scalars['Float'] | null)
    lowest_sold30d: (Scalars['Float'] | null)
    lowest_sold7d: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'market_stats_avg_fields'
}


/** unique or primary key constraints on table "market_stats" */
export type market_stats_constraint = 'PK_2e35254ba977f93838b8ac9e9ab' | 'REL_281e5d025f8c10bbd96377a560' | 'REL_b47f2fd7c124043ee7765bef61' | 'REL_d1cbd8177ef70881960f87474d'


/** columns and relationships of "market_stats_history" */
export interface market_stats_history {
    average_sale_price: (Scalars['bigint'] | null)
    floor: (Scalars['bigint'] | null)
    floorListingId: (Scalars['String'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_id: (Scalars['String'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    from: Scalars['timestamptz']
    /** An object relationship */
    generative_token: generative_token
    highestSoldListingId: (Scalars['String'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['bigint'] | null)
    highest_sold: (Scalars['bigint'] | null)
    highest_sold_listing_id: (Scalars['String'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    id: Scalars['Int']
    listed: (Scalars['Int'] | null)
    /** An object relationship */
    listing: (listing | null)
    /** An object relationship */
    listingByFloorlistingversionFloorlistingid: (listing | null)
    /** An object relationship */
    listingByHighestsoldlistingversionHighestsoldlistingid: (listing | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingId: (Scalars['String'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['bigint'] | null)
    lowest_sold_listing_id: (Scalars['String'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['bigint'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    to: Scalars['timestamptz']
    token_id: Scalars['String']
    __typename: 'market_stats_history'
}


/** aggregated selection of "market_stats_history" */
export interface market_stats_history_aggregate {
    aggregate: (market_stats_history_aggregate_fields | null)
    nodes: market_stats_history[]
    __typename: 'market_stats_history_aggregate'
}


/** aggregate fields of "market_stats_history" */
export interface market_stats_history_aggregate_fields {
    avg: (market_stats_history_avg_fields | null)
    count: Scalars['Int']
    max: (market_stats_history_max_fields | null)
    min: (market_stats_history_min_fields | null)
    stddev: (market_stats_history_stddev_fields | null)
    stddev_pop: (market_stats_history_stddev_pop_fields | null)
    stddev_samp: (market_stats_history_stddev_samp_fields | null)
    sum: (market_stats_history_sum_fields | null)
    var_pop: (market_stats_history_var_pop_fields | null)
    var_samp: (market_stats_history_var_samp_fields | null)
    variance: (market_stats_history_variance_fields | null)
    __typename: 'market_stats_history_aggregate_fields'
}


/** aggregate avg on columns */
export interface market_stats_history_avg_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    __typename: 'market_stats_history_avg_fields'
}


/** unique or primary key constraints on table "market_stats_history" */
export type market_stats_history_constraint = 'PK_aa12f7e0ffa2992946087c870f9'


/** aggregate max on columns */
export interface market_stats_history_max_fields {
    average_sale_price: (Scalars['bigint'] | null)
    floor: (Scalars['bigint'] | null)
    floorListingId: (Scalars['String'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_id: (Scalars['String'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    from: (Scalars['timestamptz'] | null)
    highestSoldListingId: (Scalars['String'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['bigint'] | null)
    highest_sold: (Scalars['bigint'] | null)
    highest_sold_listing_id: (Scalars['String'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    id: (Scalars['Int'] | null)
    listed: (Scalars['Int'] | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingId: (Scalars['String'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['bigint'] | null)
    lowest_sold_listing_id: (Scalars['String'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['bigint'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    to: (Scalars['timestamptz'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'market_stats_history_max_fields'
}


/** aggregate min on columns */
export interface market_stats_history_min_fields {
    average_sale_price: (Scalars['bigint'] | null)
    floor: (Scalars['bigint'] | null)
    floorListingId: (Scalars['String'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_id: (Scalars['String'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    from: (Scalars['timestamptz'] | null)
    highestSoldListingId: (Scalars['String'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['bigint'] | null)
    highest_sold: (Scalars['bigint'] | null)
    highest_sold_listing_id: (Scalars['String'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    id: (Scalars['Int'] | null)
    listed: (Scalars['Int'] | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingId: (Scalars['String'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['bigint'] | null)
    lowest_sold_listing_id: (Scalars['String'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['bigint'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    to: (Scalars['timestamptz'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'market_stats_history_min_fields'
}


/** response of any mutation on the table "market_stats_history" */
export interface market_stats_history_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: market_stats_history[]
    __typename: 'market_stats_history_mutation_response'
}


/** select columns of table "market_stats_history" */
export type market_stats_history_select_column = 'average_sale_price' | 'floor' | 'floorListingId' | 'floorListingVersion' | 'floor_listing_id' | 'floor_listing_version' | 'from' | 'highestSoldListingId' | 'highestSoldListingVersion' | 'highest_collection_offer' | 'highest_sold' | 'highest_sold_listing_id' | 'highest_sold_listing_version' | 'id' | 'listed' | 'longest_average_held_in_seconds' | 'lowestSoldListingId' | 'lowestSoldListingVersion' | 'lowest_sold' | 'lowest_sold_listing_id' | 'lowest_sold_listing_version' | 'median' | 'percent_listed' | 'percent_never_listed' | 'prim_volume_nb' | 'prim_volume_tz' | 'sec_volume_nb' | 'sec_volume_tz' | 'to' | 'token_id'


/** aggregate stddev on columns */
export interface market_stats_history_stddev_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    __typename: 'market_stats_history_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface market_stats_history_stddev_pop_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    __typename: 'market_stats_history_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface market_stats_history_stddev_samp_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    __typename: 'market_stats_history_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface market_stats_history_sum_fields {
    average_sale_price: (Scalars['bigint'] | null)
    floor: (Scalars['bigint'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['bigint'] | null)
    highest_sold: (Scalars['bigint'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    id: (Scalars['Int'] | null)
    listed: (Scalars['Int'] | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['bigint'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['bigint'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    __typename: 'market_stats_history_sum_fields'
}


/** update columns of table "market_stats_history" */
export type market_stats_history_update_column = 'average_sale_price' | 'floor' | 'floorListingId' | 'floorListingVersion' | 'floor_listing_id' | 'floor_listing_version' | 'from' | 'highestSoldListingId' | 'highestSoldListingVersion' | 'highest_collection_offer' | 'highest_sold' | 'highest_sold_listing_id' | 'highest_sold_listing_version' | 'id' | 'listed' | 'longest_average_held_in_seconds' | 'lowestSoldListingId' | 'lowestSoldListingVersion' | 'lowest_sold' | 'lowest_sold_listing_id' | 'lowest_sold_listing_version' | 'median' | 'percent_listed' | 'percent_never_listed' | 'prim_volume_nb' | 'prim_volume_tz' | 'sec_volume_nb' | 'sec_volume_tz' | 'to' | 'token_id'


/** aggregate var_pop on columns */
export interface market_stats_history_var_pop_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    __typename: 'market_stats_history_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface market_stats_history_var_samp_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    __typename: 'market_stats_history_var_samp_fields'
}


/** aggregate variance on columns */
export interface market_stats_history_variance_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    __typename: 'market_stats_history_variance_fields'
}


/** aggregate max on columns */
export interface market_stats_max_fields {
    average_sale_price: (Scalars['numeric'] | null)
    floor: (Scalars['numeric'] | null)
    floor24: (Scalars['numeric'] | null)
    floor30d: (Scalars['numeric'] | null)
    floor7d: (Scalars['numeric'] | null)
    floorListingId: (Scalars['String'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_id: (Scalars['String'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    from: (Scalars['timestamptz'] | null)
    highestSoldListingId: (Scalars['String'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['numeric'] | null)
    highest_sold: (Scalars['numeric'] | null)
    highest_sold24: (Scalars['numeric'] | null)
    highest_sold30d: (Scalars['numeric'] | null)
    highest_sold7d: (Scalars['numeric'] | null)
    highest_sold_listing_id: (Scalars['String'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    listed: (Scalars['Int'] | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingId: (Scalars['String'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['numeric'] | null)
    lowest_sold24: (Scalars['numeric'] | null)
    lowest_sold30d: (Scalars['numeric'] | null)
    lowest_sold7d: (Scalars['numeric'] | null)
    lowest_sold_listing_id: (Scalars['String'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['numeric'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['numeric'] | null)
    prim_volume_tz: (Scalars['numeric'] | null)
    sec_volume_nb: (Scalars['numeric'] | null)
    sec_volume_nb24: (Scalars['numeric'] | null)
    sec_volume_nb30d: (Scalars['numeric'] | null)
    sec_volume_nb7d: (Scalars['numeric'] | null)
    sec_volume_tz: (Scalars['numeric'] | null)
    sec_volume_tz24: (Scalars['numeric'] | null)
    sec_volume_tz30d: (Scalars['numeric'] | null)
    sec_volume_tz7d: (Scalars['numeric'] | null)
    to: (Scalars['timestamptz'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'market_stats_max_fields'
}


/** aggregate min on columns */
export interface market_stats_min_fields {
    average_sale_price: (Scalars['numeric'] | null)
    floor: (Scalars['numeric'] | null)
    floor24: (Scalars['numeric'] | null)
    floor30d: (Scalars['numeric'] | null)
    floor7d: (Scalars['numeric'] | null)
    floorListingId: (Scalars['String'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_id: (Scalars['String'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    from: (Scalars['timestamptz'] | null)
    highestSoldListingId: (Scalars['String'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['numeric'] | null)
    highest_sold: (Scalars['numeric'] | null)
    highest_sold24: (Scalars['numeric'] | null)
    highest_sold30d: (Scalars['numeric'] | null)
    highest_sold7d: (Scalars['numeric'] | null)
    highest_sold_listing_id: (Scalars['String'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    listed: (Scalars['Int'] | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingId: (Scalars['String'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['numeric'] | null)
    lowest_sold24: (Scalars['numeric'] | null)
    lowest_sold30d: (Scalars['numeric'] | null)
    lowest_sold7d: (Scalars['numeric'] | null)
    lowest_sold_listing_id: (Scalars['String'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['numeric'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['numeric'] | null)
    prim_volume_tz: (Scalars['numeric'] | null)
    sec_volume_nb: (Scalars['numeric'] | null)
    sec_volume_nb24: (Scalars['numeric'] | null)
    sec_volume_nb30d: (Scalars['numeric'] | null)
    sec_volume_nb7d: (Scalars['numeric'] | null)
    sec_volume_tz: (Scalars['numeric'] | null)
    sec_volume_tz24: (Scalars['numeric'] | null)
    sec_volume_tz30d: (Scalars['numeric'] | null)
    sec_volume_tz7d: (Scalars['numeric'] | null)
    to: (Scalars['timestamptz'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'market_stats_min_fields'
}


/** response of any mutation on the table "market_stats" */
export interface market_stats_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: market_stats[]
    __typename: 'market_stats_mutation_response'
}


/** select columns of table "market_stats" */
export type market_stats_select_column = 'average_sale_price' | 'floor' | 'floor7d' | 'floor24' | 'floor30d' | 'floorListingId' | 'floorListingVersion' | 'floor_listing_id' | 'floor_listing_version' | 'from' | 'highestSoldListingId' | 'highestSoldListingVersion' | 'highest_collection_offer' | 'highest_sold' | 'highest_sold7d' | 'highest_sold24' | 'highest_sold30d' | 'highest_sold_listing_id' | 'highest_sold_listing_version' | 'listed' | 'longest_average_held_in_seconds' | 'lowestSoldListingId' | 'lowestSoldListingVersion' | 'lowest_sold' | 'lowest_sold7d' | 'lowest_sold24' | 'lowest_sold30d' | 'lowest_sold_listing_id' | 'lowest_sold_listing_version' | 'median' | 'percent_listed' | 'percent_never_listed' | 'prim_volume_nb' | 'prim_volume_tz' | 'sec_volume_nb' | 'sec_volume_nb7d' | 'sec_volume_nb24' | 'sec_volume_nb30d' | 'sec_volume_tz' | 'sec_volume_tz7d' | 'sec_volume_tz24' | 'sec_volume_tz30d' | 'to' | 'token_id'


/** aggregate stddev on columns */
export interface market_stats_stddev_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floor24: (Scalars['Float'] | null)
    floor30d: (Scalars['Float'] | null)
    floor7d: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold24: (Scalars['Float'] | null)
    highest_sold30d: (Scalars['Float'] | null)
    highest_sold7d: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold24: (Scalars['Float'] | null)
    lowest_sold30d: (Scalars['Float'] | null)
    lowest_sold7d: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'market_stats_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface market_stats_stddev_pop_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floor24: (Scalars['Float'] | null)
    floor30d: (Scalars['Float'] | null)
    floor7d: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold24: (Scalars['Float'] | null)
    highest_sold30d: (Scalars['Float'] | null)
    highest_sold7d: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold24: (Scalars['Float'] | null)
    lowest_sold30d: (Scalars['Float'] | null)
    lowest_sold7d: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'market_stats_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface market_stats_stddev_samp_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floor24: (Scalars['Float'] | null)
    floor30d: (Scalars['Float'] | null)
    floor7d: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold24: (Scalars['Float'] | null)
    highest_sold30d: (Scalars['Float'] | null)
    highest_sold7d: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold24: (Scalars['Float'] | null)
    lowest_sold30d: (Scalars['Float'] | null)
    lowest_sold7d: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'market_stats_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface market_stats_sum_fields {
    average_sale_price: (Scalars['numeric'] | null)
    floor: (Scalars['numeric'] | null)
    floor24: (Scalars['numeric'] | null)
    floor30d: (Scalars['numeric'] | null)
    floor7d: (Scalars['numeric'] | null)
    floorListingVersion: (Scalars['Int'] | null)
    floor_listing_version: (Scalars['Int'] | null)
    highestSoldListingVersion: (Scalars['Int'] | null)
    highest_collection_offer: (Scalars['numeric'] | null)
    highest_sold: (Scalars['numeric'] | null)
    highest_sold24: (Scalars['numeric'] | null)
    highest_sold30d: (Scalars['numeric'] | null)
    highest_sold7d: (Scalars['numeric'] | null)
    highest_sold_listing_version: (Scalars['Int'] | null)
    listed: (Scalars['Int'] | null)
    longest_average_held_in_seconds: (Scalars['bigint'] | null)
    lowestSoldListingVersion: (Scalars['Int'] | null)
    lowest_sold: (Scalars['numeric'] | null)
    lowest_sold24: (Scalars['numeric'] | null)
    lowest_sold30d: (Scalars['numeric'] | null)
    lowest_sold7d: (Scalars['numeric'] | null)
    lowest_sold_listing_version: (Scalars['Int'] | null)
    median: (Scalars['numeric'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['numeric'] | null)
    prim_volume_tz: (Scalars['numeric'] | null)
    sec_volume_nb: (Scalars['numeric'] | null)
    sec_volume_nb24: (Scalars['numeric'] | null)
    sec_volume_nb30d: (Scalars['numeric'] | null)
    sec_volume_nb7d: (Scalars['numeric'] | null)
    sec_volume_tz: (Scalars['numeric'] | null)
    sec_volume_tz24: (Scalars['numeric'] | null)
    sec_volume_tz30d: (Scalars['numeric'] | null)
    sec_volume_tz7d: (Scalars['numeric'] | null)
    __typename: 'market_stats_sum_fields'
}


/** update columns of table "market_stats" */
export type market_stats_update_column = 'average_sale_price' | 'floor' | 'floor7d' | 'floor24' | 'floor30d' | 'floorListingId' | 'floorListingVersion' | 'floor_listing_id' | 'floor_listing_version' | 'from' | 'highestSoldListingId' | 'highestSoldListingVersion' | 'highest_collection_offer' | 'highest_sold' | 'highest_sold7d' | 'highest_sold24' | 'highest_sold30d' | 'highest_sold_listing_id' | 'highest_sold_listing_version' | 'listed' | 'longest_average_held_in_seconds' | 'lowestSoldListingId' | 'lowestSoldListingVersion' | 'lowest_sold' | 'lowest_sold7d' | 'lowest_sold24' | 'lowest_sold30d' | 'lowest_sold_listing_id' | 'lowest_sold_listing_version' | 'median' | 'percent_listed' | 'percent_never_listed' | 'prim_volume_nb' | 'prim_volume_tz' | 'sec_volume_nb' | 'sec_volume_nb7d' | 'sec_volume_nb24' | 'sec_volume_nb30d' | 'sec_volume_tz' | 'sec_volume_tz7d' | 'sec_volume_tz24' | 'sec_volume_tz30d' | 'to' | 'token_id'


/** aggregate var_pop on columns */
export interface market_stats_var_pop_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floor24: (Scalars['Float'] | null)
    floor30d: (Scalars['Float'] | null)
    floor7d: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold24: (Scalars['Float'] | null)
    highest_sold30d: (Scalars['Float'] | null)
    highest_sold7d: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold24: (Scalars['Float'] | null)
    lowest_sold30d: (Scalars['Float'] | null)
    lowest_sold7d: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'market_stats_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface market_stats_var_samp_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floor24: (Scalars['Float'] | null)
    floor30d: (Scalars['Float'] | null)
    floor7d: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold24: (Scalars['Float'] | null)
    highest_sold30d: (Scalars['Float'] | null)
    highest_sold7d: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold24: (Scalars['Float'] | null)
    lowest_sold30d: (Scalars['Float'] | null)
    lowest_sold7d: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'market_stats_var_samp_fields'
}


/** aggregate variance on columns */
export interface market_stats_variance_fields {
    average_sale_price: (Scalars['Float'] | null)
    floor: (Scalars['Float'] | null)
    floor24: (Scalars['Float'] | null)
    floor30d: (Scalars['Float'] | null)
    floor7d: (Scalars['Float'] | null)
    floorListingVersion: (Scalars['Float'] | null)
    floor_listing_version: (Scalars['Float'] | null)
    highestSoldListingVersion: (Scalars['Float'] | null)
    highest_collection_offer: (Scalars['Float'] | null)
    highest_sold: (Scalars['Float'] | null)
    highest_sold24: (Scalars['Float'] | null)
    highest_sold30d: (Scalars['Float'] | null)
    highest_sold7d: (Scalars['Float'] | null)
    highest_sold_listing_version: (Scalars['Float'] | null)
    listed: (Scalars['Float'] | null)
    longest_average_held_in_seconds: (Scalars['Float'] | null)
    lowestSoldListingVersion: (Scalars['Float'] | null)
    lowest_sold: (Scalars['Float'] | null)
    lowest_sold24: (Scalars['Float'] | null)
    lowest_sold30d: (Scalars['Float'] | null)
    lowest_sold7d: (Scalars['Float'] | null)
    lowest_sold_listing_version: (Scalars['Float'] | null)
    median: (Scalars['Float'] | null)
    percent_listed: (Scalars['Float'] | null)
    percent_never_listed: (Scalars['Float'] | null)
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'market_stats_variance_fields'
}


/** columns and relationships of "media_image" */
export interface media_image {
    /** An array relationship */
    articles: article[]
    /** An aggregate relationship */
    articles_aggregate: article_aggregate
    cid: Scalars['bpchar']
    /** An array relationship */
    generative_tokens: generative_token[]
    /** An aggregate relationship */
    generative_tokens_aggregate: generative_token_aggregate
    height: (Scalars['Int'] | null)
    metadata: (Scalars['json'] | null)
    mime_type: (Scalars['String'] | null)
    /** An array relationship */
    mint_ticket_settings: mint_ticket_settings[]
    /** An aggregate relationship */
    mint_ticket_settings_aggregate: mint_ticket_settings_aggregate
    /** An array relationship */
    objkts: objkt[]
    /** An aggregate relationship */
    objkts_aggregate: objkt_aggregate
    placeholder: (Scalars['String'] | null)
    process_counters: Scalars['smallint']
    processed: Scalars['Boolean']
    /** An array relationship */
    users: user[]
    /** An aggregate relationship */
    users_aggregate: user_aggregate
    width: (Scalars['Int'] | null)
    __typename: 'media_image'
}


/** aggregated selection of "media_image" */
export interface media_image_aggregate {
    aggregate: (media_image_aggregate_fields | null)
    nodes: media_image[]
    __typename: 'media_image_aggregate'
}


/** aggregate fields of "media_image" */
export interface media_image_aggregate_fields {
    avg: (media_image_avg_fields | null)
    count: Scalars['Int']
    max: (media_image_max_fields | null)
    min: (media_image_min_fields | null)
    stddev: (media_image_stddev_fields | null)
    stddev_pop: (media_image_stddev_pop_fields | null)
    stddev_samp: (media_image_stddev_samp_fields | null)
    sum: (media_image_sum_fields | null)
    var_pop: (media_image_var_pop_fields | null)
    var_samp: (media_image_var_samp_fields | null)
    variance: (media_image_variance_fields | null)
    __typename: 'media_image_aggregate_fields'
}


/** aggregate avg on columns */
export interface media_image_avg_fields {
    height: (Scalars['Float'] | null)
    process_counters: (Scalars['Float'] | null)
    width: (Scalars['Float'] | null)
    __typename: 'media_image_avg_fields'
}


/** unique or primary key constraints on table "media_image" */
export type media_image_constraint = 'PK_6b20376a151c97894a44a572715'


/** aggregate max on columns */
export interface media_image_max_fields {
    cid: (Scalars['bpchar'] | null)
    height: (Scalars['Int'] | null)
    mime_type: (Scalars['String'] | null)
    placeholder: (Scalars['String'] | null)
    process_counters: (Scalars['smallint'] | null)
    width: (Scalars['Int'] | null)
    __typename: 'media_image_max_fields'
}


/** aggregate min on columns */
export interface media_image_min_fields {
    cid: (Scalars['bpchar'] | null)
    height: (Scalars['Int'] | null)
    mime_type: (Scalars['String'] | null)
    placeholder: (Scalars['String'] | null)
    process_counters: (Scalars['smallint'] | null)
    width: (Scalars['Int'] | null)
    __typename: 'media_image_min_fields'
}


/** response of any mutation on the table "media_image" */
export interface media_image_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: media_image[]
    __typename: 'media_image_mutation_response'
}


/** select columns of table "media_image" */
export type media_image_select_column = 'cid' | 'height' | 'metadata' | 'mime_type' | 'placeholder' | 'process_counters' | 'processed' | 'width'


/** aggregate stddev on columns */
export interface media_image_stddev_fields {
    height: (Scalars['Float'] | null)
    process_counters: (Scalars['Float'] | null)
    width: (Scalars['Float'] | null)
    __typename: 'media_image_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface media_image_stddev_pop_fields {
    height: (Scalars['Float'] | null)
    process_counters: (Scalars['Float'] | null)
    width: (Scalars['Float'] | null)
    __typename: 'media_image_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface media_image_stddev_samp_fields {
    height: (Scalars['Float'] | null)
    process_counters: (Scalars['Float'] | null)
    width: (Scalars['Float'] | null)
    __typename: 'media_image_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface media_image_sum_fields {
    height: (Scalars['Int'] | null)
    process_counters: (Scalars['smallint'] | null)
    width: (Scalars['Int'] | null)
    __typename: 'media_image_sum_fields'
}


/** update columns of table "media_image" */
export type media_image_update_column = 'cid' | 'height' | 'metadata' | 'mime_type' | 'placeholder' | 'process_counters' | 'processed' | 'width'


/** aggregate var_pop on columns */
export interface media_image_var_pop_fields {
    height: (Scalars['Float'] | null)
    process_counters: (Scalars['Float'] | null)
    width: (Scalars['Float'] | null)
    __typename: 'media_image_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface media_image_var_samp_fields {
    height: (Scalars['Float'] | null)
    process_counters: (Scalars['Float'] | null)
    width: (Scalars['Float'] | null)
    __typename: 'media_image_var_samp_fields'
}


/** aggregate variance on columns */
export interface media_image_variance_fields {
    height: (Scalars['Float'] | null)
    process_counters: (Scalars['Float'] | null)
    width: (Scalars['Float'] | null)
    __typename: 'media_image_variance_fields'
}


/** columns and relationships of "mint_ticket" */
export interface mint_ticket {
    created_at: Scalars['timestamptz']
    /** An object relationship */
    generative_token: (generative_token | null)
    id: Scalars['String']
    owner_id: Scalars['String']
    price: Scalars['numeric']
    taxation_locked: Scalars['numeric']
    taxation_paid_until: Scalars['timestamptz']
    taxation_start: Scalars['timestamptz']
    token_id: (Scalars['String'] | null)
    /** An object relationship */
    user: user
    __typename: 'mint_ticket'
}


/** aggregated selection of "mint_ticket" */
export interface mint_ticket_aggregate {
    aggregate: (mint_ticket_aggregate_fields | null)
    nodes: mint_ticket[]
    __typename: 'mint_ticket_aggregate'
}


/** aggregate fields of "mint_ticket" */
export interface mint_ticket_aggregate_fields {
    avg: (mint_ticket_avg_fields | null)
    count: Scalars['Int']
    max: (mint_ticket_max_fields | null)
    min: (mint_ticket_min_fields | null)
    stddev: (mint_ticket_stddev_fields | null)
    stddev_pop: (mint_ticket_stddev_pop_fields | null)
    stddev_samp: (mint_ticket_stddev_samp_fields | null)
    sum: (mint_ticket_sum_fields | null)
    var_pop: (mint_ticket_var_pop_fields | null)
    var_samp: (mint_ticket_var_samp_fields | null)
    variance: (mint_ticket_variance_fields | null)
    __typename: 'mint_ticket_aggregate_fields'
}


/** aggregate avg on columns */
export interface mint_ticket_avg_fields {
    price: (Scalars['Float'] | null)
    taxation_locked: (Scalars['Float'] | null)
    __typename: 'mint_ticket_avg_fields'
}


/** unique or primary key constraints on table "mint_ticket" */
export type mint_ticket_constraint = 'PK_703bfcfef7f2257bf4815fb59d1'


/** aggregate max on columns */
export interface mint_ticket_max_fields {
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    owner_id: (Scalars['String'] | null)
    price: (Scalars['numeric'] | null)
    taxation_locked: (Scalars['numeric'] | null)
    taxation_paid_until: (Scalars['timestamptz'] | null)
    taxation_start: (Scalars['timestamptz'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'mint_ticket_max_fields'
}


/** aggregate min on columns */
export interface mint_ticket_min_fields {
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    owner_id: (Scalars['String'] | null)
    price: (Scalars['numeric'] | null)
    taxation_locked: (Scalars['numeric'] | null)
    taxation_paid_until: (Scalars['timestamptz'] | null)
    taxation_start: (Scalars['timestamptz'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'mint_ticket_min_fields'
}


/** response of any mutation on the table "mint_ticket" */
export interface mint_ticket_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: mint_ticket[]
    __typename: 'mint_ticket_mutation_response'
}


/** select columns of table "mint_ticket" */
export type mint_ticket_select_column = 'created_at' | 'id' | 'owner_id' | 'price' | 'taxation_locked' | 'taxation_paid_until' | 'taxation_start' | 'token_id'


/** columns and relationships of "mint_ticket_settings" */
export interface mint_ticket_settings {
    captureMediaId: (Scalars['bpchar'] | null)
    /** An object relationship */
    generative_token: (generative_token | null)
    gracing_period: Scalars['Int']
    id: Scalars['String']
    /** An object relationship */
    media_image: (media_image | null)
    metadata: Scalars['json']
    metadata_uri: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'mint_ticket_settings'
}


/** aggregated selection of "mint_ticket_settings" */
export interface mint_ticket_settings_aggregate {
    aggregate: (mint_ticket_settings_aggregate_fields | null)
    nodes: mint_ticket_settings[]
    __typename: 'mint_ticket_settings_aggregate'
}


/** aggregate fields of "mint_ticket_settings" */
export interface mint_ticket_settings_aggregate_fields {
    avg: (mint_ticket_settings_avg_fields | null)
    count: Scalars['Int']
    max: (mint_ticket_settings_max_fields | null)
    min: (mint_ticket_settings_min_fields | null)
    stddev: (mint_ticket_settings_stddev_fields | null)
    stddev_pop: (mint_ticket_settings_stddev_pop_fields | null)
    stddev_samp: (mint_ticket_settings_stddev_samp_fields | null)
    sum: (mint_ticket_settings_sum_fields | null)
    var_pop: (mint_ticket_settings_var_pop_fields | null)
    var_samp: (mint_ticket_settings_var_samp_fields | null)
    variance: (mint_ticket_settings_variance_fields | null)
    __typename: 'mint_ticket_settings_aggregate_fields'
}


/** aggregate avg on columns */
export interface mint_ticket_settings_avg_fields {
    gracing_period: (Scalars['Float'] | null)
    __typename: 'mint_ticket_settings_avg_fields'
}


/** unique or primary key constraints on table "mint_ticket_settings" */
export type mint_ticket_settings_constraint = 'PK_3d9d47cf1717a7d63bdd4d0c6ab'


/** aggregate max on columns */
export interface mint_ticket_settings_max_fields {
    captureMediaId: (Scalars['bpchar'] | null)
    gracing_period: (Scalars['Int'] | null)
    id: (Scalars['String'] | null)
    metadata_uri: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'mint_ticket_settings_max_fields'
}


/** aggregate min on columns */
export interface mint_ticket_settings_min_fields {
    captureMediaId: (Scalars['bpchar'] | null)
    gracing_period: (Scalars['Int'] | null)
    id: (Scalars['String'] | null)
    metadata_uri: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'mint_ticket_settings_min_fields'
}


/** response of any mutation on the table "mint_ticket_settings" */
export interface mint_ticket_settings_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: mint_ticket_settings[]
    __typename: 'mint_ticket_settings_mutation_response'
}


/** select columns of table "mint_ticket_settings" */
export type mint_ticket_settings_select_column = 'captureMediaId' | 'gracing_period' | 'id' | 'metadata' | 'metadata_uri' | 'token_id'


/** aggregate stddev on columns */
export interface mint_ticket_settings_stddev_fields {
    gracing_period: (Scalars['Float'] | null)
    __typename: 'mint_ticket_settings_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface mint_ticket_settings_stddev_pop_fields {
    gracing_period: (Scalars['Float'] | null)
    __typename: 'mint_ticket_settings_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface mint_ticket_settings_stddev_samp_fields {
    gracing_period: (Scalars['Float'] | null)
    __typename: 'mint_ticket_settings_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface mint_ticket_settings_sum_fields {
    gracing_period: (Scalars['Int'] | null)
    __typename: 'mint_ticket_settings_sum_fields'
}


/** update columns of table "mint_ticket_settings" */
export type mint_ticket_settings_update_column = 'captureMediaId' | 'gracing_period' | 'id' | 'metadata' | 'metadata_uri' | 'token_id'


/** aggregate var_pop on columns */
export interface mint_ticket_settings_var_pop_fields {
    gracing_period: (Scalars['Float'] | null)
    __typename: 'mint_ticket_settings_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface mint_ticket_settings_var_samp_fields {
    gracing_period: (Scalars['Float'] | null)
    __typename: 'mint_ticket_settings_var_samp_fields'
}


/** aggregate variance on columns */
export interface mint_ticket_settings_variance_fields {
    gracing_period: (Scalars['Float'] | null)
    __typename: 'mint_ticket_settings_variance_fields'
}


/** aggregate stddev on columns */
export interface mint_ticket_stddev_fields {
    price: (Scalars['Float'] | null)
    taxation_locked: (Scalars['Float'] | null)
    __typename: 'mint_ticket_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface mint_ticket_stddev_pop_fields {
    price: (Scalars['Float'] | null)
    taxation_locked: (Scalars['Float'] | null)
    __typename: 'mint_ticket_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface mint_ticket_stddev_samp_fields {
    price: (Scalars['Float'] | null)
    taxation_locked: (Scalars['Float'] | null)
    __typename: 'mint_ticket_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface mint_ticket_sum_fields {
    price: (Scalars['numeric'] | null)
    taxation_locked: (Scalars['numeric'] | null)
    __typename: 'mint_ticket_sum_fields'
}


/** update columns of table "mint_ticket" */
export type mint_ticket_update_column = 'created_at' | 'id' | 'owner_id' | 'price' | 'taxation_locked' | 'taxation_paid_until' | 'taxation_start' | 'token_id'


/** aggregate var_pop on columns */
export interface mint_ticket_var_pop_fields {
    price: (Scalars['Float'] | null)
    taxation_locked: (Scalars['Float'] | null)
    __typename: 'mint_ticket_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface mint_ticket_var_samp_fields {
    price: (Scalars['Float'] | null)
    taxation_locked: (Scalars['Float'] | null)
    __typename: 'mint_ticket_var_samp_fields'
}


/** aggregate variance on columns */
export interface mint_ticket_variance_fields {
    price: (Scalars['Float'] | null)
    taxation_locked: (Scalars['Float'] | null)
    __typename: 'mint_ticket_variance_fields'
}


/** columns and relationships of "moderation_reason" */
export interface moderation_reason {
    /** An array relationship */
    articles: article[]
    /** An aggregate relationship */
    articles_aggregate: article_aggregate
    /** An array relationship */
    generative_tokens: generative_token[]
    /** An aggregate relationship */
    generative_tokens_aggregate: generative_token_aggregate
    id: Scalars['String']
    reason: Scalars['String']
    /** An array relationship */
    reports: report[]
    /** An aggregate relationship */
    reports_aggregate: report_aggregate
    /** An array relationship */
    users: user[]
    /** An aggregate relationship */
    users_aggregate: user_aggregate
    __typename: 'moderation_reason'
}


/** aggregated selection of "moderation_reason" */
export interface moderation_reason_aggregate {
    aggregate: (moderation_reason_aggregate_fields | null)
    nodes: moderation_reason[]
    __typename: 'moderation_reason_aggregate'
}


/** aggregate fields of "moderation_reason" */
export interface moderation_reason_aggregate_fields {
    count: Scalars['Int']
    max: (moderation_reason_max_fields | null)
    min: (moderation_reason_min_fields | null)
    __typename: 'moderation_reason_aggregate_fields'
}


/** unique or primary key constraints on table "moderation_reason" */
export type moderation_reason_constraint = 'PK_fdcfcb2db6d8f8d793f0a26a87b'


/** aggregate max on columns */
export interface moderation_reason_max_fields {
    id: (Scalars['String'] | null)
    reason: (Scalars['String'] | null)
    __typename: 'moderation_reason_max_fields'
}


/** aggregate min on columns */
export interface moderation_reason_min_fields {
    id: (Scalars['String'] | null)
    reason: (Scalars['String'] | null)
    __typename: 'moderation_reason_min_fields'
}


/** response of any mutation on the table "moderation_reason" */
export interface moderation_reason_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: moderation_reason[]
    __typename: 'moderation_reason_mutation_response'
}


/** select columns of table "moderation_reason" */
export type moderation_reason_select_column = 'id' | 'reason'


/** update columns of table "moderation_reason" */
export type moderation_reason_update_column = 'id' | 'reason'


/** mutation root */
export interface mutation_root {
    /** delete data from the table: "Account" */
    delete_Account: (Account_mutation_response | null)
    /** delete single row from the table: "Account" */
    delete_Account_by_pk: (Account | null)
    /** delete data from the table: "Profile" */
    delete_Profile: (Profile_mutation_response | null)
    /** delete single row from the table: "Profile" */
    delete_Profile_by_pk: (Profile | null)
    /** delete data from the table: "Wallet" */
    delete_Wallet: (Wallet_mutation_response | null)
    /** delete single row from the table: "Wallet" */
    delete_Wallet_by_pk: (Wallet | null)
    /** delete data from the table: "Whitelist" */
    delete_Whitelist: (Whitelist_mutation_response | null)
    /** delete data from the table: "WhitelistEntries" */
    delete_WhitelistEntries: (WhitelistEntries_mutation_response | null)
    /** delete single row from the table: "WhitelistEntries" */
    delete_WhitelistEntries_by_pk: (WhitelistEntries | null)
    /** delete single row from the table: "Whitelist" */
    delete_Whitelist_by_pk: (Whitelist | null)
    /** delete data from the table: "action" */
    delete_action: (action_mutation_response | null)
    /** delete single row from the table: "action" */
    delete_action_by_pk: (action | null)
    /** delete data from the table: "article" */
    delete_article: (article_mutation_response | null)
    /** delete single row from the table: "article" */
    delete_article_by_pk: (article | null)
    /** delete data from the table: "article_generative_token" */
    delete_article_generative_token: (article_generative_token_mutation_response | null)
    /** delete single row from the table: "article_generative_token" */
    delete_article_generative_token_by_pk: (article_generative_token | null)
    /** delete data from the table: "article_ledger" */
    delete_article_ledger: (article_ledger_mutation_response | null)
    /** delete single row from the table: "article_ledger" */
    delete_article_ledger_by_pk: (article_ledger | null)
    /** delete data from the table: "article_revision" */
    delete_article_revision: (article_revision_mutation_response | null)
    /** delete single row from the table: "article_revision" */
    delete_article_revision_by_pk: (article_revision | null)
    /** delete data from the table: "auction" */
    delete_auction: (auction_mutation_response | null)
    /** delete data from the table: "auction_bid" */
    delete_auction_bid: (auction_bid_mutation_response | null)
    /** delete single row from the table: "auction_bid" */
    delete_auction_bid_by_pk: (auction_bid | null)
    /** delete data from the table: "auction_bid_table" */
    delete_auction_bid_table: (auction_bid_table_mutation_response | null)
    /** delete single row from the table: "auction_bid_table" */
    delete_auction_bid_table_by_pk: (auction_bid_table | null)
    /** delete single row from the table: "auction" */
    delete_auction_by_pk: (auction | null)
    /** delete data from the table: "codex" */
    delete_codex: (codex_mutation_response | null)
    /** delete single row from the table: "codex" */
    delete_codex_by_pk: (codex | null)
    /** delete data from the table: "codex_update_request" */
    delete_codex_update_request: (codex_update_request_mutation_response | null)
    /** delete single row from the table: "codex_update_request" */
    delete_codex_update_request_by_pk: (codex_update_request | null)
    /** delete data from the table: "collaboration" */
    delete_collaboration: (collaboration_mutation_response | null)
    /** delete single row from the table: "collaboration" */
    delete_collaboration_by_pk: (collaboration | null)
    /** delete data from the table: "collection_offer" */
    delete_collection_offer: (collection_offer_mutation_response | null)
    /** delete single row from the table: "collection_offer" */
    delete_collection_offer_by_pk: (collection_offer | null)
    /** delete data from the table: "generative_token" */
    delete_generative_token: (generative_token_mutation_response | null)
    /** delete single row from the table: "generative_token" */
    delete_generative_token_by_pk: (generative_token | null)
    /** delete data from the table: "gentk_assign" */
    delete_gentk_assign: (gentk_assign_mutation_response | null)
    /** delete single row from the table: "gentk_assign" */
    delete_gentk_assign_by_pk: (gentk_assign | null)
    /** delete data from the table: "ipfs_cid" */
    delete_ipfs_cid: (ipfs_cid_mutation_response | null)
    /** delete single row from the table: "ipfs_cid" */
    delete_ipfs_cid_by_pk: (ipfs_cid | null)
    /** delete data from the table: "listing" */
    delete_listing: (listing_mutation_response | null)
    /** delete single row from the table: "listing" */
    delete_listing_by_pk: (listing | null)
    /** delete data from the table: "market_stats" */
    delete_market_stats: (market_stats_mutation_response | null)
    /** delete single row from the table: "market_stats" */
    delete_market_stats_by_pk: (market_stats | null)
    /** delete data from the table: "market_stats_history" */
    delete_market_stats_history: (market_stats_history_mutation_response | null)
    /** delete single row from the table: "market_stats_history" */
    delete_market_stats_history_by_pk: (market_stats_history | null)
    /** delete data from the table: "media_image" */
    delete_media_image: (media_image_mutation_response | null)
    /** delete single row from the table: "media_image" */
    delete_media_image_by_pk: (media_image | null)
    /** delete data from the table: "mint_ticket" */
    delete_mint_ticket: (mint_ticket_mutation_response | null)
    /** delete single row from the table: "mint_ticket" */
    delete_mint_ticket_by_pk: (mint_ticket | null)
    /** delete data from the table: "mint_ticket_settings" */
    delete_mint_ticket_settings: (mint_ticket_settings_mutation_response | null)
    /** delete single row from the table: "mint_ticket_settings" */
    delete_mint_ticket_settings_by_pk: (mint_ticket_settings | null)
    /** delete data from the table: "moderation_reason" */
    delete_moderation_reason: (moderation_reason_mutation_response | null)
    /** delete single row from the table: "moderation_reason" */
    delete_moderation_reason_by_pk: (moderation_reason | null)
    /** delete data from the table: "objkt" */
    delete_objkt: (objkt_mutation_response | null)
    /** delete single row from the table: "objkt" */
    delete_objkt_by_pk: (objkt | null)
    /** delete data from the table: "offer" */
    delete_offer: (offer_mutation_response | null)
    /** delete single row from the table: "offer" */
    delete_offer_by_pk: (offer | null)
    /** delete data from the table: "pricing_dutch_auction" */
    delete_pricing_dutch_auction: (pricing_dutch_auction_mutation_response | null)
    /** delete single row from the table: "pricing_dutch_auction" */
    delete_pricing_dutch_auction_by_pk: (pricing_dutch_auction | null)
    /** delete data from the table: "pricing_fixed" */
    delete_pricing_fixed: (pricing_fixed_mutation_response | null)
    /** delete single row from the table: "pricing_fixed" */
    delete_pricing_fixed_by_pk: (pricing_fixed | null)
    /** delete data from the table: "redeemable" */
    delete_redeemable: (redeemable_mutation_response | null)
    /** delete single row from the table: "redeemable" */
    delete_redeemable_by_pk: (redeemable | null)
    /** delete data from the table: "redemption" */
    delete_redemption: (redemption_mutation_response | null)
    /** delete single row from the table: "redemption" */
    delete_redemption_by_pk: (redemption | null)
    /** delete data from the table: "report" */
    delete_report: (report_mutation_response | null)
    /** delete single row from the table: "report" */
    delete_report_by_pk: (report | null)
    /** delete data from the table: "reserve" */
    delete_reserve: (reserve_mutation_response | null)
    /** delete single row from the table: "reserve" */
    delete_reserve_by_pk: (reserve | null)
    /** delete data from the table: "split" */
    delete_split: (split_mutation_response | null)
    /** delete single row from the table: "split" */
    delete_split_by_pk: (split | null)
    /** delete data from the table: "transaction" */
    delete_transaction: (transaction_mutation_response | null)
    /** delete single row from the table: "transaction" */
    delete_transaction_by_pk: (transaction | null)
    /** delete data from the table: "user" */
    delete_user: (user_mutation_response | null)
    /** delete single row from the table: "user" */
    delete_user_by_pk: (user | null)
    /** delete data from the table: "user_stats" */
    delete_user_stats: (user_stats_mutation_response | null)
    /** delete single row from the table: "user_stats" */
    delete_user_stats_by_pk: (user_stats | null)
    /** insert data into the table: "Account" */
    insert_Account: (Account_mutation_response | null)
    /** insert a single row into the table: "Account" */
    insert_Account_one: (Account | null)
    /** insert data into the table: "Profile" */
    insert_Profile: (Profile_mutation_response | null)
    /** insert a single row into the table: "Profile" */
    insert_Profile_one: (Profile | null)
    /** insert data into the table: "Wallet" */
    insert_Wallet: (Wallet_mutation_response | null)
    /** insert a single row into the table: "Wallet" */
    insert_Wallet_one: (Wallet | null)
    /** insert data into the table: "Whitelist" */
    insert_Whitelist: (Whitelist_mutation_response | null)
    /** insert data into the table: "WhitelistEntries" */
    insert_WhitelistEntries: (WhitelistEntries_mutation_response | null)
    /** insert a single row into the table: "WhitelistEntries" */
    insert_WhitelistEntries_one: (WhitelistEntries | null)
    /** insert a single row into the table: "Whitelist" */
    insert_Whitelist_one: (Whitelist | null)
    /** insert data into the table: "action" */
    insert_action: (action_mutation_response | null)
    /** insert a single row into the table: "action" */
    insert_action_one: (action | null)
    /** insert data into the table: "article" */
    insert_article: (article_mutation_response | null)
    /** insert data into the table: "article_generative_token" */
    insert_article_generative_token: (article_generative_token_mutation_response | null)
    /** insert a single row into the table: "article_generative_token" */
    insert_article_generative_token_one: (article_generative_token | null)
    /** insert data into the table: "article_ledger" */
    insert_article_ledger: (article_ledger_mutation_response | null)
    /** insert a single row into the table: "article_ledger" */
    insert_article_ledger_one: (article_ledger | null)
    /** insert a single row into the table: "article" */
    insert_article_one: (article | null)
    /** insert data into the table: "article_revision" */
    insert_article_revision: (article_revision_mutation_response | null)
    /** insert a single row into the table: "article_revision" */
    insert_article_revision_one: (article_revision | null)
    /** insert data into the table: "auction" */
    insert_auction: (auction_mutation_response | null)
    /** insert data into the table: "auction_bid" */
    insert_auction_bid: (auction_bid_mutation_response | null)
    /** insert a single row into the table: "auction_bid" */
    insert_auction_bid_one: (auction_bid | null)
    /** insert data into the table: "auction_bid_table" */
    insert_auction_bid_table: (auction_bid_table_mutation_response | null)
    /** insert a single row into the table: "auction_bid_table" */
    insert_auction_bid_table_one: (auction_bid_table | null)
    /** insert a single row into the table: "auction" */
    insert_auction_one: (auction | null)
    /** insert data into the table: "codex" */
    insert_codex: (codex_mutation_response | null)
    /** insert a single row into the table: "codex" */
    insert_codex_one: (codex | null)
    /** insert data into the table: "codex_update_request" */
    insert_codex_update_request: (codex_update_request_mutation_response | null)
    /** insert a single row into the table: "codex_update_request" */
    insert_codex_update_request_one: (codex_update_request | null)
    /** insert data into the table: "collaboration" */
    insert_collaboration: (collaboration_mutation_response | null)
    /** insert a single row into the table: "collaboration" */
    insert_collaboration_one: (collaboration | null)
    /** insert data into the table: "collection_offer" */
    insert_collection_offer: (collection_offer_mutation_response | null)
    /** insert a single row into the table: "collection_offer" */
    insert_collection_offer_one: (collection_offer | null)
    /** insert data into the table: "generative_token" */
    insert_generative_token: (generative_token_mutation_response | null)
    /** insert a single row into the table: "generative_token" */
    insert_generative_token_one: (generative_token | null)
    /** insert data into the table: "gentk_assign" */
    insert_gentk_assign: (gentk_assign_mutation_response | null)
    /** insert a single row into the table: "gentk_assign" */
    insert_gentk_assign_one: (gentk_assign | null)
    /** insert data into the table: "ipfs_cid" */
    insert_ipfs_cid: (ipfs_cid_mutation_response | null)
    /** insert a single row into the table: "ipfs_cid" */
    insert_ipfs_cid_one: (ipfs_cid | null)
    /** insert data into the table: "listing" */
    insert_listing: (listing_mutation_response | null)
    /** insert a single row into the table: "listing" */
    insert_listing_one: (listing | null)
    /** insert data into the table: "market_stats" */
    insert_market_stats: (market_stats_mutation_response | null)
    /** insert data into the table: "market_stats_history" */
    insert_market_stats_history: (market_stats_history_mutation_response | null)
    /** insert a single row into the table: "market_stats_history" */
    insert_market_stats_history_one: (market_stats_history | null)
    /** insert a single row into the table: "market_stats" */
    insert_market_stats_one: (market_stats | null)
    /** insert data into the table: "media_image" */
    insert_media_image: (media_image_mutation_response | null)
    /** insert a single row into the table: "media_image" */
    insert_media_image_one: (media_image | null)
    /** insert data into the table: "mint_ticket" */
    insert_mint_ticket: (mint_ticket_mutation_response | null)
    /** insert a single row into the table: "mint_ticket" */
    insert_mint_ticket_one: (mint_ticket | null)
    /** insert data into the table: "mint_ticket_settings" */
    insert_mint_ticket_settings: (mint_ticket_settings_mutation_response | null)
    /** insert a single row into the table: "mint_ticket_settings" */
    insert_mint_ticket_settings_one: (mint_ticket_settings | null)
    /** insert data into the table: "moderation_reason" */
    insert_moderation_reason: (moderation_reason_mutation_response | null)
    /** insert a single row into the table: "moderation_reason" */
    insert_moderation_reason_one: (moderation_reason | null)
    /** insert data into the table: "objkt" */
    insert_objkt: (objkt_mutation_response | null)
    /** insert a single row into the table: "objkt" */
    insert_objkt_one: (objkt | null)
    /** insert data into the table: "offer" */
    insert_offer: (offer_mutation_response | null)
    /** insert a single row into the table: "offer" */
    insert_offer_one: (offer | null)
    /** insert data into the table: "pricing_dutch_auction" */
    insert_pricing_dutch_auction: (pricing_dutch_auction_mutation_response | null)
    /** insert a single row into the table: "pricing_dutch_auction" */
    insert_pricing_dutch_auction_one: (pricing_dutch_auction | null)
    /** insert data into the table: "pricing_fixed" */
    insert_pricing_fixed: (pricing_fixed_mutation_response | null)
    /** insert a single row into the table: "pricing_fixed" */
    insert_pricing_fixed_one: (pricing_fixed | null)
    /** insert data into the table: "redeemable" */
    insert_redeemable: (redeemable_mutation_response | null)
    /** insert a single row into the table: "redeemable" */
    insert_redeemable_one: (redeemable | null)
    /** insert data into the table: "redemption" */
    insert_redemption: (redemption_mutation_response | null)
    /** insert a single row into the table: "redemption" */
    insert_redemption_one: (redemption | null)
    /** insert data into the table: "report" */
    insert_report: (report_mutation_response | null)
    /** insert a single row into the table: "report" */
    insert_report_one: (report | null)
    /** insert data into the table: "reserve" */
    insert_reserve: (reserve_mutation_response | null)
    /** insert a single row into the table: "reserve" */
    insert_reserve_one: (reserve | null)
    /** insert data into the table: "split" */
    insert_split: (split_mutation_response | null)
    /** insert a single row into the table: "split" */
    insert_split_one: (split | null)
    /** insert data into the table: "transaction" */
    insert_transaction: (transaction_mutation_response | null)
    /** insert a single row into the table: "transaction" */
    insert_transaction_one: (transaction | null)
    /** insert data into the table: "user" */
    insert_user: (user_mutation_response | null)
    /** insert a single row into the table: "user" */
    insert_user_one: (user | null)
    /** insert data into the table: "user_stats" */
    insert_user_stats: (user_stats_mutation_response | null)
    /** insert a single row into the table: "user_stats" */
    insert_user_stats_one: (user_stats | null)
    set_whitelist: (SetWhitelistOutput | null)
    /** update data of the table: "Account" */
    update_Account: (Account_mutation_response | null)
    /** update single row of the table: "Account" */
    update_Account_by_pk: (Account | null)
    /** update multiples rows of table: "Account" */
    update_Account_many: ((Account_mutation_response | null)[] | null)
    /** update data of the table: "Profile" */
    update_Profile: (Profile_mutation_response | null)
    /** update single row of the table: "Profile" */
    update_Profile_by_pk: (Profile | null)
    /** update multiples rows of table: "Profile" */
    update_Profile_many: ((Profile_mutation_response | null)[] | null)
    /** update data of the table: "Wallet" */
    update_Wallet: (Wallet_mutation_response | null)
    /** update single row of the table: "Wallet" */
    update_Wallet_by_pk: (Wallet | null)
    /** update multiples rows of table: "Wallet" */
    update_Wallet_many: ((Wallet_mutation_response | null)[] | null)
    /** update data of the table: "Whitelist" */
    update_Whitelist: (Whitelist_mutation_response | null)
    /** update data of the table: "WhitelistEntries" */
    update_WhitelistEntries: (WhitelistEntries_mutation_response | null)
    /** update single row of the table: "WhitelistEntries" */
    update_WhitelistEntries_by_pk: (WhitelistEntries | null)
    /** update multiples rows of table: "WhitelistEntries" */
    update_WhitelistEntries_many: ((WhitelistEntries_mutation_response | null)[] | null)
    /** update single row of the table: "Whitelist" */
    update_Whitelist_by_pk: (Whitelist | null)
    /** update multiples rows of table: "Whitelist" */
    update_Whitelist_many: ((Whitelist_mutation_response | null)[] | null)
    /** update data of the table: "action" */
    update_action: (action_mutation_response | null)
    /** update single row of the table: "action" */
    update_action_by_pk: (action | null)
    /** update multiples rows of table: "action" */
    update_action_many: ((action_mutation_response | null)[] | null)
    /** update data of the table: "article" */
    update_article: (article_mutation_response | null)
    /** update single row of the table: "article" */
    update_article_by_pk: (article | null)
    /** update data of the table: "article_generative_token" */
    update_article_generative_token: (article_generative_token_mutation_response | null)
    /** update single row of the table: "article_generative_token" */
    update_article_generative_token_by_pk: (article_generative_token | null)
    /** update multiples rows of table: "article_generative_token" */
    update_article_generative_token_many: ((article_generative_token_mutation_response | null)[] | null)
    /** update data of the table: "article_ledger" */
    update_article_ledger: (article_ledger_mutation_response | null)
    /** update single row of the table: "article_ledger" */
    update_article_ledger_by_pk: (article_ledger | null)
    /** update multiples rows of table: "article_ledger" */
    update_article_ledger_many: ((article_ledger_mutation_response | null)[] | null)
    /** update multiples rows of table: "article" */
    update_article_many: ((article_mutation_response | null)[] | null)
    /** update data of the table: "article_revision" */
    update_article_revision: (article_revision_mutation_response | null)
    /** update single row of the table: "article_revision" */
    update_article_revision_by_pk: (article_revision | null)
    /** update multiples rows of table: "article_revision" */
    update_article_revision_many: ((article_revision_mutation_response | null)[] | null)
    /** update data of the table: "auction" */
    update_auction: (auction_mutation_response | null)
    /** update data of the table: "auction_bid" */
    update_auction_bid: (auction_bid_mutation_response | null)
    /** update single row of the table: "auction_bid" */
    update_auction_bid_by_pk: (auction_bid | null)
    /** update multiples rows of table: "auction_bid" */
    update_auction_bid_many: ((auction_bid_mutation_response | null)[] | null)
    /** update data of the table: "auction_bid_table" */
    update_auction_bid_table: (auction_bid_table_mutation_response | null)
    /** update single row of the table: "auction_bid_table" */
    update_auction_bid_table_by_pk: (auction_bid_table | null)
    /** update multiples rows of table: "auction_bid_table" */
    update_auction_bid_table_many: ((auction_bid_table_mutation_response | null)[] | null)
    /** update single row of the table: "auction" */
    update_auction_by_pk: (auction | null)
    /** update multiples rows of table: "auction" */
    update_auction_many: ((auction_mutation_response | null)[] | null)
    /** update data of the table: "codex" */
    update_codex: (codex_mutation_response | null)
    /** update single row of the table: "codex" */
    update_codex_by_pk: (codex | null)
    /** update multiples rows of table: "codex" */
    update_codex_many: ((codex_mutation_response | null)[] | null)
    /** update data of the table: "codex_update_request" */
    update_codex_update_request: (codex_update_request_mutation_response | null)
    /** update single row of the table: "codex_update_request" */
    update_codex_update_request_by_pk: (codex_update_request | null)
    /** update multiples rows of table: "codex_update_request" */
    update_codex_update_request_many: ((codex_update_request_mutation_response | null)[] | null)
    /** update data of the table: "collaboration" */
    update_collaboration: (collaboration_mutation_response | null)
    /** update single row of the table: "collaboration" */
    update_collaboration_by_pk: (collaboration | null)
    /** update multiples rows of table: "collaboration" */
    update_collaboration_many: ((collaboration_mutation_response | null)[] | null)
    /** update data of the table: "collection_offer" */
    update_collection_offer: (collection_offer_mutation_response | null)
    /** update single row of the table: "collection_offer" */
    update_collection_offer_by_pk: (collection_offer | null)
    /** update multiples rows of table: "collection_offer" */
    update_collection_offer_many: ((collection_offer_mutation_response | null)[] | null)
    /** update data of the table: "generative_token" */
    update_generative_token: (generative_token_mutation_response | null)
    /** update single row of the table: "generative_token" */
    update_generative_token_by_pk: (generative_token | null)
    /** update multiples rows of table: "generative_token" */
    update_generative_token_many: ((generative_token_mutation_response | null)[] | null)
    /** update data of the table: "gentk_assign" */
    update_gentk_assign: (gentk_assign_mutation_response | null)
    /** update single row of the table: "gentk_assign" */
    update_gentk_assign_by_pk: (gentk_assign | null)
    /** update multiples rows of table: "gentk_assign" */
    update_gentk_assign_many: ((gentk_assign_mutation_response | null)[] | null)
    /** update data of the table: "ipfs_cid" */
    update_ipfs_cid: (ipfs_cid_mutation_response | null)
    /** update single row of the table: "ipfs_cid" */
    update_ipfs_cid_by_pk: (ipfs_cid | null)
    /** update multiples rows of table: "ipfs_cid" */
    update_ipfs_cid_many: ((ipfs_cid_mutation_response | null)[] | null)
    /** update data of the table: "listing" */
    update_listing: (listing_mutation_response | null)
    /** update single row of the table: "listing" */
    update_listing_by_pk: (listing | null)
    /** update multiples rows of table: "listing" */
    update_listing_many: ((listing_mutation_response | null)[] | null)
    /** update data of the table: "market_stats" */
    update_market_stats: (market_stats_mutation_response | null)
    /** update single row of the table: "market_stats" */
    update_market_stats_by_pk: (market_stats | null)
    /** update data of the table: "market_stats_history" */
    update_market_stats_history: (market_stats_history_mutation_response | null)
    /** update single row of the table: "market_stats_history" */
    update_market_stats_history_by_pk: (market_stats_history | null)
    /** update multiples rows of table: "market_stats_history" */
    update_market_stats_history_many: ((market_stats_history_mutation_response | null)[] | null)
    /** update multiples rows of table: "market_stats" */
    update_market_stats_many: ((market_stats_mutation_response | null)[] | null)
    /** update data of the table: "media_image" */
    update_media_image: (media_image_mutation_response | null)
    /** update single row of the table: "media_image" */
    update_media_image_by_pk: (media_image | null)
    /** update multiples rows of table: "media_image" */
    update_media_image_many: ((media_image_mutation_response | null)[] | null)
    /** update data of the table: "mint_ticket" */
    update_mint_ticket: (mint_ticket_mutation_response | null)
    /** update single row of the table: "mint_ticket" */
    update_mint_ticket_by_pk: (mint_ticket | null)
    /** update multiples rows of table: "mint_ticket" */
    update_mint_ticket_many: ((mint_ticket_mutation_response | null)[] | null)
    /** update data of the table: "mint_ticket_settings" */
    update_mint_ticket_settings: (mint_ticket_settings_mutation_response | null)
    /** update single row of the table: "mint_ticket_settings" */
    update_mint_ticket_settings_by_pk: (mint_ticket_settings | null)
    /** update multiples rows of table: "mint_ticket_settings" */
    update_mint_ticket_settings_many: ((mint_ticket_settings_mutation_response | null)[] | null)
    /** update data of the table: "moderation_reason" */
    update_moderation_reason: (moderation_reason_mutation_response | null)
    /** update single row of the table: "moderation_reason" */
    update_moderation_reason_by_pk: (moderation_reason | null)
    /** update multiples rows of table: "moderation_reason" */
    update_moderation_reason_many: ((moderation_reason_mutation_response | null)[] | null)
    /** update data of the table: "objkt" */
    update_objkt: (objkt_mutation_response | null)
    /** update single row of the table: "objkt" */
    update_objkt_by_pk: (objkt | null)
    /** update multiples rows of table: "objkt" */
    update_objkt_many: ((objkt_mutation_response | null)[] | null)
    /** update data of the table: "offer" */
    update_offer: (offer_mutation_response | null)
    /** update single row of the table: "offer" */
    update_offer_by_pk: (offer | null)
    /** update multiples rows of table: "offer" */
    update_offer_many: ((offer_mutation_response | null)[] | null)
    /** update data of the table: "pricing_dutch_auction" */
    update_pricing_dutch_auction: (pricing_dutch_auction_mutation_response | null)
    /** update single row of the table: "pricing_dutch_auction" */
    update_pricing_dutch_auction_by_pk: (pricing_dutch_auction | null)
    /** update multiples rows of table: "pricing_dutch_auction" */
    update_pricing_dutch_auction_many: ((pricing_dutch_auction_mutation_response | null)[] | null)
    /** update data of the table: "pricing_fixed" */
    update_pricing_fixed: (pricing_fixed_mutation_response | null)
    /** update single row of the table: "pricing_fixed" */
    update_pricing_fixed_by_pk: (pricing_fixed | null)
    /** update multiples rows of table: "pricing_fixed" */
    update_pricing_fixed_many: ((pricing_fixed_mutation_response | null)[] | null)
    /** update data of the table: "redeemable" */
    update_redeemable: (redeemable_mutation_response | null)
    /** update single row of the table: "redeemable" */
    update_redeemable_by_pk: (redeemable | null)
    /** update multiples rows of table: "redeemable" */
    update_redeemable_many: ((redeemable_mutation_response | null)[] | null)
    /** update data of the table: "redemption" */
    update_redemption: (redemption_mutation_response | null)
    /** update single row of the table: "redemption" */
    update_redemption_by_pk: (redemption | null)
    /** update multiples rows of table: "redemption" */
    update_redemption_many: ((redemption_mutation_response | null)[] | null)
    /** update data of the table: "report" */
    update_report: (report_mutation_response | null)
    /** update single row of the table: "report" */
    update_report_by_pk: (report | null)
    /** update multiples rows of table: "report" */
    update_report_many: ((report_mutation_response | null)[] | null)
    /** update data of the table: "reserve" */
    update_reserve: (reserve_mutation_response | null)
    /** update single row of the table: "reserve" */
    update_reserve_by_pk: (reserve | null)
    /** update multiples rows of table: "reserve" */
    update_reserve_many: ((reserve_mutation_response | null)[] | null)
    /** update data of the table: "split" */
    update_split: (split_mutation_response | null)
    /** update single row of the table: "split" */
    update_split_by_pk: (split | null)
    /** update multiples rows of table: "split" */
    update_split_many: ((split_mutation_response | null)[] | null)
    /** update data of the table: "transaction" */
    update_transaction: (transaction_mutation_response | null)
    /** update single row of the table: "transaction" */
    update_transaction_by_pk: (transaction | null)
    /** update multiples rows of table: "transaction" */
    update_transaction_many: ((transaction_mutation_response | null)[] | null)
    /** update data of the table: "user" */
    update_user: (user_mutation_response | null)
    /** update single row of the table: "user" */
    update_user_by_pk: (user | null)
    /** update multiples rows of table: "user" */
    update_user_many: ((user_mutation_response | null)[] | null)
    /** update data of the table: "user_stats" */
    update_user_stats: (user_stats_mutation_response | null)
    /** update single row of the table: "user_stats" */
    update_user_stats_by_pk: (user_stats | null)
    /** update multiples rows of table: "user_stats" */
    update_user_stats_many: ((user_stats_mutation_response | null)[] | null)
    __typename: 'mutation_root'
}


/** columns and relationships of "objkt" */
export interface objkt {
    /** An array relationship */
    actions: action[]
    /** An aggregate relationship */
    actions_aggregate: action_aggregate
    assigned: (Scalars['Boolean'] | null)
    assigned_at: (Scalars['timestamptz'] | null)
    /** An array relationship */
    auctions: auction[]
    /** An aggregate relationship */
    auctions_aggregate: auction_aggregate
    captureMediaId: (Scalars['bpchar'] | null)
    created_at: Scalars['timestamptz']
    display_uri: (Scalars['bpchar'] | null)
    duplicate: (Scalars['Boolean'] | null)
    features: (Scalars['json'] | null)
    generation_hash: (Scalars['String'] | null)
    /** An object relationship */
    generative_token: generative_token
    /** An object relationship */
    gentk_assign: (gentk_assign | null)
    id: Scalars['String']
    input_bytes: (Scalars['String'] | null)
    issuer_id: Scalars['String']
    issuer_version: Scalars['generative_token_version']
    iteration: (Scalars['numeric'] | null)
    /** An array relationship */
    listings: listing[]
    /** An aggregate relationship */
    listings_aggregate: listing_aggregate
    /** An object relationship */
    media_image: (media_image | null)
    metadata: (Scalars['json'] | null)
    metadata_uri: (Scalars['String'] | null)
    minter_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    /** An array relationship */
    offers: offer[]
    /** An aggregate relationship */
    offers_aggregate: offer_aggregate
    owner_id: (Scalars['String'] | null)
    rarity: (Scalars['float8'] | null)
    /** An array relationship */
    redemptions: redemption[]
    /** An aggregate relationship */
    redemptions_aggregate: redemption_aggregate
    royalties: Scalars['Int']
    slug: (Scalars['String'] | null)
    /** An array relationship */
    splits: split[]
    /** An aggregate relationship */
    splits_aggregate: split_aggregate
    tags: (Scalars['_text'] | null)
    thumbnail_uri: (Scalars['bpchar'] | null)
    /** An array relationship */
    transactions: transaction[]
    /** An aggregate relationship */
    transactions_aggregate: transaction_aggregate
    updated_at: (Scalars['timestamptz'] | null)
    /** An object relationship */
    user: (user | null)
    /** An object relationship */
    userByOwnerId: (user | null)
    version: Scalars['Int']
    __typename: 'objkt'
}


/** aggregated selection of "objkt" */
export interface objkt_aggregate {
    aggregate: (objkt_aggregate_fields | null)
    nodes: objkt[]
    __typename: 'objkt_aggregate'
}


/** aggregate fields of "objkt" */
export interface objkt_aggregate_fields {
    avg: (objkt_avg_fields | null)
    count: Scalars['Int']
    max: (objkt_max_fields | null)
    min: (objkt_min_fields | null)
    stddev: (objkt_stddev_fields | null)
    stddev_pop: (objkt_stddev_pop_fields | null)
    stddev_samp: (objkt_stddev_samp_fields | null)
    sum: (objkt_sum_fields | null)
    var_pop: (objkt_var_pop_fields | null)
    var_samp: (objkt_var_samp_fields | null)
    variance: (objkt_variance_fields | null)
    __typename: 'objkt_aggregate_fields'
}


/** aggregate avg on columns */
export interface objkt_avg_fields {
    iteration: (Scalars['Float'] | null)
    rarity: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'objkt_avg_fields'
}


/** unique or primary key constraints on table "objkt" */
export type objkt_constraint = 'IDX_75a2e34e67529e5d0c2758d4d2' | 'PK_21ce4aa2c6889add2f734e70372'


/** aggregate max on columns */
export interface objkt_max_fields {
    assigned_at: (Scalars['timestamptz'] | null)
    captureMediaId: (Scalars['bpchar'] | null)
    created_at: (Scalars['timestamptz'] | null)
    display_uri: (Scalars['bpchar'] | null)
    generation_hash: (Scalars['String'] | null)
    id: (Scalars['String'] | null)
    input_bytes: (Scalars['String'] | null)
    issuer_id: (Scalars['String'] | null)
    issuer_version: (Scalars['generative_token_version'] | null)
    iteration: (Scalars['numeric'] | null)
    metadata_uri: (Scalars['String'] | null)
    minter_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    owner_id: (Scalars['String'] | null)
    rarity: (Scalars['float8'] | null)
    royalties: (Scalars['Int'] | null)
    slug: (Scalars['String'] | null)
    thumbnail_uri: (Scalars['bpchar'] | null)
    updated_at: (Scalars['timestamptz'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'objkt_max_fields'
}


/** aggregate min on columns */
export interface objkt_min_fields {
    assigned_at: (Scalars['timestamptz'] | null)
    captureMediaId: (Scalars['bpchar'] | null)
    created_at: (Scalars['timestamptz'] | null)
    display_uri: (Scalars['bpchar'] | null)
    generation_hash: (Scalars['String'] | null)
    id: (Scalars['String'] | null)
    input_bytes: (Scalars['String'] | null)
    issuer_id: (Scalars['String'] | null)
    issuer_version: (Scalars['generative_token_version'] | null)
    iteration: (Scalars['numeric'] | null)
    metadata_uri: (Scalars['String'] | null)
    minter_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    owner_id: (Scalars['String'] | null)
    rarity: (Scalars['float8'] | null)
    royalties: (Scalars['Int'] | null)
    slug: (Scalars['String'] | null)
    thumbnail_uri: (Scalars['bpchar'] | null)
    updated_at: (Scalars['timestamptz'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'objkt_min_fields'
}


/** response of any mutation on the table "objkt" */
export interface objkt_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: objkt[]
    __typename: 'objkt_mutation_response'
}


/** select columns of table "objkt" */
export type objkt_select_column = 'assigned' | 'assigned_at' | 'captureMediaId' | 'created_at' | 'display_uri' | 'duplicate' | 'features' | 'generation_hash' | 'id' | 'input_bytes' | 'issuer_id' | 'issuer_version' | 'iteration' | 'metadata' | 'metadata_uri' | 'minter_id' | 'name' | 'owner_id' | 'rarity' | 'royalties' | 'slug' | 'tags' | 'thumbnail_uri' | 'updated_at' | 'version'


/** select "objkt_aggregate_bool_exp_avg_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_avg_arguments_columns = 'rarity'


/** select "objkt_aggregate_bool_exp_bool_and_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_bool_and_arguments_columns = 'assigned' | 'duplicate'


/** select "objkt_aggregate_bool_exp_bool_or_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_bool_or_arguments_columns = 'assigned' | 'duplicate'


/** select "objkt_aggregate_bool_exp_corr_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns = 'rarity'


/** select "objkt_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns = 'rarity'


/** select "objkt_aggregate_bool_exp_max_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_max_arguments_columns = 'rarity'


/** select "objkt_aggregate_bool_exp_min_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_min_arguments_columns = 'rarity'


/** select "objkt_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_stddev_samp_arguments_columns = 'rarity'


/** select "objkt_aggregate_bool_exp_sum_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_sum_arguments_columns = 'rarity'


/** select "objkt_aggregate_bool_exp_var_samp_arguments_columns" columns of table "objkt" */
export type objkt_select_column_objkt_aggregate_bool_exp_var_samp_arguments_columns = 'rarity'


/** aggregate stddev on columns */
export interface objkt_stddev_fields {
    iteration: (Scalars['Float'] | null)
    rarity: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'objkt_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface objkt_stddev_pop_fields {
    iteration: (Scalars['Float'] | null)
    rarity: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'objkt_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface objkt_stddev_samp_fields {
    iteration: (Scalars['Float'] | null)
    rarity: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'objkt_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface objkt_sum_fields {
    iteration: (Scalars['numeric'] | null)
    rarity: (Scalars['float8'] | null)
    royalties: (Scalars['Int'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'objkt_sum_fields'
}


/** update columns of table "objkt" */
export type objkt_update_column = 'assigned' | 'assigned_at' | 'captureMediaId' | 'created_at' | 'display_uri' | 'duplicate' | 'features' | 'generation_hash' | 'id' | 'input_bytes' | 'issuer_id' | 'issuer_version' | 'iteration' | 'metadata' | 'metadata_uri' | 'minter_id' | 'name' | 'owner_id' | 'rarity' | 'royalties' | 'slug' | 'tags' | 'thumbnail_uri' | 'updated_at' | 'version'


/** aggregate var_pop on columns */
export interface objkt_var_pop_fields {
    iteration: (Scalars['Float'] | null)
    rarity: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'objkt_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface objkt_var_samp_fields {
    iteration: (Scalars['Float'] | null)
    rarity: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'objkt_var_samp_fields'
}


/** aggregate variance on columns */
export interface objkt_variance_fields {
    iteration: (Scalars['Float'] | null)
    rarity: (Scalars['Float'] | null)
    royalties: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'objkt_variance_fields'
}


/** columns and relationships of "offer" */
export interface offer {
    accepted_at: (Scalars['timestamptz'] | null)
    buyer_id: (Scalars['String'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: Scalars['timestamptz']
    id: Scalars['String']
    /** An object relationship */
    objkt: (objkt | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    price: Scalars['numeric']
    /** An object relationship */
    user: (user | null)
    version: Scalars['Int']
    __typename: 'offer'
}


/** aggregated selection of "offer" */
export interface offer_aggregate {
    aggregate: (offer_aggregate_fields | null)
    nodes: offer[]
    __typename: 'offer_aggregate'
}


/** aggregate fields of "offer" */
export interface offer_aggregate_fields {
    avg: (offer_avg_fields | null)
    count: Scalars['Int']
    max: (offer_max_fields | null)
    min: (offer_min_fields | null)
    stddev: (offer_stddev_fields | null)
    stddev_pop: (offer_stddev_pop_fields | null)
    stddev_samp: (offer_stddev_samp_fields | null)
    sum: (offer_sum_fields | null)
    var_pop: (offer_var_pop_fields | null)
    var_samp: (offer_var_samp_fields | null)
    variance: (offer_variance_fields | null)
    __typename: 'offer_aggregate_fields'
}


/** aggregate avg on columns */
export interface offer_avg_fields {
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'offer_avg_fields'
}


/** unique or primary key constraints on table "offer" */
export type offer_constraint = 'PK_128207054b197333b6f58dd3581'


/** aggregate max on columns */
export interface offer_max_fields {
    accepted_at: (Scalars['timestamptz'] | null)
    buyer_id: (Scalars['String'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    price: (Scalars['numeric'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'offer_max_fields'
}


/** aggregate min on columns */
export interface offer_min_fields {
    accepted_at: (Scalars['timestamptz'] | null)
    buyer_id: (Scalars['String'] | null)
    cancelled_at: (Scalars['timestamptz'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['String'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    price: (Scalars['numeric'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'offer_min_fields'
}


/** response of any mutation on the table "offer" */
export interface offer_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: offer[]
    __typename: 'offer_mutation_response'
}


/** select columns of table "offer" */
export type offer_select_column = 'accepted_at' | 'buyer_id' | 'cancelled_at' | 'created_at' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'price' | 'version'


/** aggregate stddev on columns */
export interface offer_stddev_fields {
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'offer_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface offer_stddev_pop_fields {
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'offer_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface offer_stddev_samp_fields {
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'offer_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface offer_sum_fields {
    price: (Scalars['numeric'] | null)
    version: (Scalars['Int'] | null)
    __typename: 'offer_sum_fields'
}


/** update columns of table "offer" */
export type offer_update_column = 'accepted_at' | 'buyer_id' | 'cancelled_at' | 'created_at' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'price' | 'version'


/** aggregate var_pop on columns */
export interface offer_var_pop_fields {
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'offer_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface offer_var_samp_fields {
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'offer_var_samp_fields'
}


/** aggregate variance on columns */
export interface offer_variance_fields {
    price: (Scalars['Float'] | null)
    version: (Scalars['Float'] | null)
    __typename: 'offer_variance_fields'
}


/** column ordering options */
export type order_by = 'asc' | 'asc_nulls_first' | 'asc_nulls_last' | 'desc' | 'desc_nulls_first' | 'desc_nulls_last'


/** columns and relationships of "pricing_dutch_auction" */
export interface pricing_dutch_auction {
    decrement_duration: Scalars['bigint']
    final_price: (Scalars['bigint'] | null)
    /** An object relationship */
    generative_token: (generative_token | null)
    id: Scalars['String']
    levels: Scalars['_int8']
    opens_at: (Scalars['timestamptz'] | null)
    resting_price: Scalars['String']
    token_id: (Scalars['String'] | null)
    __typename: 'pricing_dutch_auction'
}


/** aggregated selection of "pricing_dutch_auction" */
export interface pricing_dutch_auction_aggregate {
    aggregate: (pricing_dutch_auction_aggregate_fields | null)
    nodes: pricing_dutch_auction[]
    __typename: 'pricing_dutch_auction_aggregate'
}


/** aggregate fields of "pricing_dutch_auction" */
export interface pricing_dutch_auction_aggregate_fields {
    avg: (pricing_dutch_auction_avg_fields | null)
    count: Scalars['Int']
    max: (pricing_dutch_auction_max_fields | null)
    min: (pricing_dutch_auction_min_fields | null)
    stddev: (pricing_dutch_auction_stddev_fields | null)
    stddev_pop: (pricing_dutch_auction_stddev_pop_fields | null)
    stddev_samp: (pricing_dutch_auction_stddev_samp_fields | null)
    sum: (pricing_dutch_auction_sum_fields | null)
    var_pop: (pricing_dutch_auction_var_pop_fields | null)
    var_samp: (pricing_dutch_auction_var_samp_fields | null)
    variance: (pricing_dutch_auction_variance_fields | null)
    __typename: 'pricing_dutch_auction_aggregate_fields'
}


/** aggregate avg on columns */
export interface pricing_dutch_auction_avg_fields {
    decrement_duration: (Scalars['Float'] | null)
    final_price: (Scalars['Float'] | null)
    __typename: 'pricing_dutch_auction_avg_fields'
}


/** unique or primary key constraints on table "pricing_dutch_auction" */
export type pricing_dutch_auction_constraint = 'PK_6c70e76261e8fb00a02d0628d12'


/** aggregate max on columns */
export interface pricing_dutch_auction_max_fields {
    decrement_duration: (Scalars['bigint'] | null)
    final_price: (Scalars['bigint'] | null)
    id: (Scalars['String'] | null)
    opens_at: (Scalars['timestamptz'] | null)
    resting_price: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'pricing_dutch_auction_max_fields'
}


/** aggregate min on columns */
export interface pricing_dutch_auction_min_fields {
    decrement_duration: (Scalars['bigint'] | null)
    final_price: (Scalars['bigint'] | null)
    id: (Scalars['String'] | null)
    opens_at: (Scalars['timestamptz'] | null)
    resting_price: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'pricing_dutch_auction_min_fields'
}


/** response of any mutation on the table "pricing_dutch_auction" */
export interface pricing_dutch_auction_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: pricing_dutch_auction[]
    __typename: 'pricing_dutch_auction_mutation_response'
}


/** select columns of table "pricing_dutch_auction" */
export type pricing_dutch_auction_select_column = 'decrement_duration' | 'final_price' | 'id' | 'levels' | 'opens_at' | 'resting_price' | 'token_id'


/** aggregate stddev on columns */
export interface pricing_dutch_auction_stddev_fields {
    decrement_duration: (Scalars['Float'] | null)
    final_price: (Scalars['Float'] | null)
    __typename: 'pricing_dutch_auction_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface pricing_dutch_auction_stddev_pop_fields {
    decrement_duration: (Scalars['Float'] | null)
    final_price: (Scalars['Float'] | null)
    __typename: 'pricing_dutch_auction_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface pricing_dutch_auction_stddev_samp_fields {
    decrement_duration: (Scalars['Float'] | null)
    final_price: (Scalars['Float'] | null)
    __typename: 'pricing_dutch_auction_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface pricing_dutch_auction_sum_fields {
    decrement_duration: (Scalars['bigint'] | null)
    final_price: (Scalars['bigint'] | null)
    __typename: 'pricing_dutch_auction_sum_fields'
}


/** update columns of table "pricing_dutch_auction" */
export type pricing_dutch_auction_update_column = 'decrement_duration' | 'final_price' | 'id' | 'levels' | 'opens_at' | 'resting_price' | 'token_id'


/** aggregate var_pop on columns */
export interface pricing_dutch_auction_var_pop_fields {
    decrement_duration: (Scalars['Float'] | null)
    final_price: (Scalars['Float'] | null)
    __typename: 'pricing_dutch_auction_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface pricing_dutch_auction_var_samp_fields {
    decrement_duration: (Scalars['Float'] | null)
    final_price: (Scalars['Float'] | null)
    __typename: 'pricing_dutch_auction_var_samp_fields'
}


/** aggregate variance on columns */
export interface pricing_dutch_auction_variance_fields {
    decrement_duration: (Scalars['Float'] | null)
    final_price: (Scalars['Float'] | null)
    __typename: 'pricing_dutch_auction_variance_fields'
}


/** columns and relationships of "pricing_fixed" */
export interface pricing_fixed {
    /** An object relationship */
    generative_token: (generative_token | null)
    id: Scalars['String']
    opens_at: (Scalars['timestamptz'] | null)
    price: Scalars['numeric']
    token_id: (Scalars['String'] | null)
    __typename: 'pricing_fixed'
}


/** aggregated selection of "pricing_fixed" */
export interface pricing_fixed_aggregate {
    aggregate: (pricing_fixed_aggregate_fields | null)
    nodes: pricing_fixed[]
    __typename: 'pricing_fixed_aggregate'
}


/** aggregate fields of "pricing_fixed" */
export interface pricing_fixed_aggregate_fields {
    avg: (pricing_fixed_avg_fields | null)
    count: Scalars['Int']
    max: (pricing_fixed_max_fields | null)
    min: (pricing_fixed_min_fields | null)
    stddev: (pricing_fixed_stddev_fields | null)
    stddev_pop: (pricing_fixed_stddev_pop_fields | null)
    stddev_samp: (pricing_fixed_stddev_samp_fields | null)
    sum: (pricing_fixed_sum_fields | null)
    var_pop: (pricing_fixed_var_pop_fields | null)
    var_samp: (pricing_fixed_var_samp_fields | null)
    variance: (pricing_fixed_variance_fields | null)
    __typename: 'pricing_fixed_aggregate_fields'
}


/** aggregate avg on columns */
export interface pricing_fixed_avg_fields {
    price: (Scalars['Float'] | null)
    __typename: 'pricing_fixed_avg_fields'
}


/** unique or primary key constraints on table "pricing_fixed" */
export type pricing_fixed_constraint = 'PK_ae46385ad088e6c1de1850c3d80'


/** aggregate max on columns */
export interface pricing_fixed_max_fields {
    id: (Scalars['String'] | null)
    opens_at: (Scalars['timestamptz'] | null)
    price: (Scalars['numeric'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'pricing_fixed_max_fields'
}


/** aggregate min on columns */
export interface pricing_fixed_min_fields {
    id: (Scalars['String'] | null)
    opens_at: (Scalars['timestamptz'] | null)
    price: (Scalars['numeric'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'pricing_fixed_min_fields'
}


/** response of any mutation on the table "pricing_fixed" */
export interface pricing_fixed_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: pricing_fixed[]
    __typename: 'pricing_fixed_mutation_response'
}


/** select columns of table "pricing_fixed" */
export type pricing_fixed_select_column = 'id' | 'opens_at' | 'price' | 'token_id'


/** aggregate stddev on columns */
export interface pricing_fixed_stddev_fields {
    price: (Scalars['Float'] | null)
    __typename: 'pricing_fixed_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface pricing_fixed_stddev_pop_fields {
    price: (Scalars['Float'] | null)
    __typename: 'pricing_fixed_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface pricing_fixed_stddev_samp_fields {
    price: (Scalars['Float'] | null)
    __typename: 'pricing_fixed_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface pricing_fixed_sum_fields {
    price: (Scalars['numeric'] | null)
    __typename: 'pricing_fixed_sum_fields'
}


/** update columns of table "pricing_fixed" */
export type pricing_fixed_update_column = 'id' | 'opens_at' | 'price' | 'token_id'


/** aggregate var_pop on columns */
export interface pricing_fixed_var_pop_fields {
    price: (Scalars['Float'] | null)
    __typename: 'pricing_fixed_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface pricing_fixed_var_samp_fields {
    price: (Scalars['Float'] | null)
    __typename: 'pricing_fixed_var_samp_fields'
}


/** aggregate variance on columns */
export interface pricing_fixed_variance_fields {
    price: (Scalars['Float'] | null)
    __typename: 'pricing_fixed_variance_fields'
}

export interface query_root {
    /** fetch data from the table: "Account" */
    Account: Account[]
    /** fetch aggregated fields from the table: "Account" */
    Account_aggregate: Account_aggregate
    /** fetch data from the table: "Account" using primary key columns */
    Account_by_pk: (Account | null)
    /** fetch data from the table: "Profile" */
    Profile: Profile[]
    /** fetch aggregated fields from the table: "Profile" */
    Profile_aggregate: Profile_aggregate
    /** fetch data from the table: "Profile" using primary key columns */
    Profile_by_pk: (Profile | null)
    /** fetch data from the table: "Wallet" */
    Wallet: Wallet[]
    /** fetch aggregated fields from the table: "Wallet" */
    Wallet_aggregate: Wallet_aggregate
    /** fetch data from the table: "Wallet" using primary key columns */
    Wallet_by_pk: (Wallet | null)
    /** fetch data from the table: "Whitelist" */
    Whitelist: Whitelist[]
    /** fetch data from the table: "WhitelistEntries" */
    WhitelistEntries: WhitelistEntries[]
    /** fetch aggregated fields from the table: "WhitelistEntries" */
    WhitelistEntries_aggregate: WhitelistEntries_aggregate
    /** fetch data from the table: "WhitelistEntries" using primary key columns */
    WhitelistEntries_by_pk: (WhitelistEntries | null)
    /** fetch aggregated fields from the table: "Whitelist" */
    Whitelist_aggregate: Whitelist_aggregate
    /** fetch data from the table: "Whitelist" using primary key columns */
    Whitelist_by_pk: (Whitelist | null)
    /** fetch data from the table: "action" */
    action: action[]
    /** fetch aggregated fields from the table: "action" */
    action_aggregate: action_aggregate
    /** fetch data from the table: "action" using primary key columns */
    action_by_pk: (action | null)
    /** fetch data from the table: "article" */
    article: article[]
    /** fetch aggregated fields from the table: "article" */
    article_aggregate: article_aggregate
    /** fetch data from the table: "article" using primary key columns */
    article_by_pk: (article | null)
    /** fetch data from the table: "article_generative_token" */
    article_generative_token: article_generative_token[]
    /** fetch aggregated fields from the table: "article_generative_token" */
    article_generative_token_aggregate: article_generative_token_aggregate
    /** fetch data from the table: "article_generative_token" using primary key columns */
    article_generative_token_by_pk: (article_generative_token | null)
    /** fetch data from the table: "article_ledger" */
    article_ledger: article_ledger[]
    /** fetch aggregated fields from the table: "article_ledger" */
    article_ledger_aggregate: article_ledger_aggregate
    /** fetch data from the table: "article_ledger" using primary key columns */
    article_ledger_by_pk: (article_ledger | null)
    /** fetch data from the table: "article_revision" */
    article_revision: article_revision[]
    /** fetch aggregated fields from the table: "article_revision" */
    article_revision_aggregate: article_revision_aggregate
    /** fetch data from the table: "article_revision" using primary key columns */
    article_revision_by_pk: (article_revision | null)
    /** fetch data from the table: "auction" */
    auction: auction[]
    /** fetch aggregated fields from the table: "auction" */
    auction_aggregate: auction_aggregate
    /** fetch data from the table: "auction_bid" */
    auction_bid: auction_bid[]
    /** fetch aggregated fields from the table: "auction_bid" */
    auction_bid_aggregate: auction_bid_aggregate
    /** fetch data from the table: "auction_bid" using primary key columns */
    auction_bid_by_pk: (auction_bid | null)
    /** fetch data from the table: "auction_bid_table" */
    auction_bid_table: auction_bid_table[]
    /** fetch aggregated fields from the table: "auction_bid_table" */
    auction_bid_table_aggregate: auction_bid_table_aggregate
    /** fetch data from the table: "auction_bid_table" using primary key columns */
    auction_bid_table_by_pk: (auction_bid_table | null)
    /** fetch data from the table: "auction" using primary key columns */
    auction_by_pk: (auction | null)
    /** fetch data from the table: "codex" */
    codex: codex[]
    /** fetch aggregated fields from the table: "codex" */
    codex_aggregate: codex_aggregate
    /** fetch data from the table: "codex" using primary key columns */
    codex_by_pk: (codex | null)
    /** fetch data from the table: "codex_update_request" */
    codex_update_request: codex_update_request[]
    /** fetch aggregated fields from the table: "codex_update_request" */
    codex_update_request_aggregate: codex_update_request_aggregate
    /** fetch data from the table: "codex_update_request" using primary key columns */
    codex_update_request_by_pk: (codex_update_request | null)
    /** fetch data from the table: "collaboration" */
    collaboration: collaboration[]
    /** fetch aggregated fields from the table: "collaboration" */
    collaboration_aggregate: collaboration_aggregate
    /** fetch data from the table: "collaboration" using primary key columns */
    collaboration_by_pk: (collaboration | null)
    /** fetch data from the table: "collection_offer" */
    collection_offer: collection_offer[]
    /** fetch aggregated fields from the table: "collection_offer" */
    collection_offer_aggregate: collection_offer_aggregate
    /** fetch data from the table: "collection_offer" using primary key columns */
    collection_offer_by_pk: (collection_offer | null)
    /** fetch data from the table: "generative_token" */
    generative_token: generative_token[]
    /** fetch aggregated fields from the table: "generative_token" */
    generative_token_aggregate: generative_token_aggregate
    /** fetch data from the table: "generative_token" using primary key columns */
    generative_token_by_pk: (generative_token | null)
    /** fetch data from the table: "gentk_assign" */
    gentk_assign: gentk_assign[]
    /** fetch aggregated fields from the table: "gentk_assign" */
    gentk_assign_aggregate: gentk_assign_aggregate
    /** fetch data from the table: "gentk_assign" using primary key columns */
    gentk_assign_by_pk: (gentk_assign | null)
    /** fetch data from the table: "ipfs_cid" */
    ipfs_cid: ipfs_cid[]
    /** fetch aggregated fields from the table: "ipfs_cid" */
    ipfs_cid_aggregate: ipfs_cid_aggregate
    /** fetch data from the table: "ipfs_cid" using primary key columns */
    ipfs_cid_by_pk: (ipfs_cid | null)
    /** fetch data from the table: "listing" */
    listing: listing[]
    /** fetch aggregated fields from the table: "listing" */
    listing_aggregate: listing_aggregate
    /** fetch data from the table: "listing" using primary key columns */
    listing_by_pk: (listing | null)
    /** fetch data from the table: "market_stats" */
    market_stats: market_stats[]
    /** fetch aggregated fields from the table: "market_stats" */
    market_stats_aggregate: market_stats_aggregate
    /** fetch data from the table: "market_stats" using primary key columns */
    market_stats_by_pk: (market_stats | null)
    /** fetch data from the table: "market_stats_history" */
    market_stats_history: market_stats_history[]
    /** fetch aggregated fields from the table: "market_stats_history" */
    market_stats_history_aggregate: market_stats_history_aggregate
    /** fetch data from the table: "market_stats_history" using primary key columns */
    market_stats_history_by_pk: (market_stats_history | null)
    /** fetch data from the table: "media_image" */
    media_image: media_image[]
    /** fetch aggregated fields from the table: "media_image" */
    media_image_aggregate: media_image_aggregate
    /** fetch data from the table: "media_image" using primary key columns */
    media_image_by_pk: (media_image | null)
    /** fetch data from the table: "mint_ticket" */
    mint_ticket: mint_ticket[]
    /** fetch aggregated fields from the table: "mint_ticket" */
    mint_ticket_aggregate: mint_ticket_aggregate
    /** fetch data from the table: "mint_ticket" using primary key columns */
    mint_ticket_by_pk: (mint_ticket | null)
    /** An array relationship */
    mint_ticket_settings: mint_ticket_settings[]
    /** An aggregate relationship */
    mint_ticket_settings_aggregate: mint_ticket_settings_aggregate
    /** fetch data from the table: "mint_ticket_settings" using primary key columns */
    mint_ticket_settings_by_pk: (mint_ticket_settings | null)
    /** fetch data from the table: "moderation_reason" */
    moderation_reason: moderation_reason[]
    /** fetch aggregated fields from the table: "moderation_reason" */
    moderation_reason_aggregate: moderation_reason_aggregate
    /** fetch data from the table: "moderation_reason" using primary key columns */
    moderation_reason_by_pk: (moderation_reason | null)
    /** fetch data from the table: "objkt" */
    objkt: objkt[]
    /** fetch aggregated fields from the table: "objkt" */
    objkt_aggregate: objkt_aggregate
    /** fetch data from the table: "objkt" using primary key columns */
    objkt_by_pk: (objkt | null)
    /** fetch data from the table: "offer" */
    offer: offer[]
    /** fetch aggregated fields from the table: "offer" */
    offer_aggregate: offer_aggregate
    /** fetch data from the table: "offer" using primary key columns */
    offer_by_pk: (offer | null)
    /** fetch data from the table: "pricing_dutch_auction" */
    pricing_dutch_auction: pricing_dutch_auction[]
    /** fetch aggregated fields from the table: "pricing_dutch_auction" */
    pricing_dutch_auction_aggregate: pricing_dutch_auction_aggregate
    /** fetch data from the table: "pricing_dutch_auction" using primary key columns */
    pricing_dutch_auction_by_pk: (pricing_dutch_auction | null)
    /** fetch data from the table: "pricing_fixed" */
    pricing_fixed: pricing_fixed[]
    /** fetch aggregated fields from the table: "pricing_fixed" */
    pricing_fixed_aggregate: pricing_fixed_aggregate
    /** fetch data from the table: "pricing_fixed" using primary key columns */
    pricing_fixed_by_pk: (pricing_fixed | null)
    /** fetch data from the table: "redeemable" */
    redeemable: redeemable[]
    /** fetch aggregated fields from the table: "redeemable" */
    redeemable_aggregate: redeemable_aggregate
    /** fetch data from the table: "redeemable" using primary key columns */
    redeemable_by_pk: (redeemable | null)
    /** fetch data from the table: "redemption" */
    redemption: redemption[]
    /** fetch aggregated fields from the table: "redemption" */
    redemption_aggregate: redemption_aggregate
    /** fetch data from the table: "redemption" using primary key columns */
    redemption_by_pk: (redemption | null)
    /** fetch data from the table: "report" */
    report: report[]
    /** fetch aggregated fields from the table: "report" */
    report_aggregate: report_aggregate
    /** fetch data from the table: "report" using primary key columns */
    report_by_pk: (report | null)
    /** fetch data from the table: "reserve" */
    reserve: reserve[]
    /** fetch aggregated fields from the table: "reserve" */
    reserve_aggregate: reserve_aggregate
    /** fetch data from the table: "reserve" using primary key columns */
    reserve_by_pk: (reserve | null)
    /** fetch data from the table: "split" */
    split: split[]
    /** fetch aggregated fields from the table: "split" */
    split_aggregate: split_aggregate
    /** fetch data from the table: "split" using primary key columns */
    split_by_pk: (split | null)
    /** fetch data from the table: "transaction" */
    transaction: transaction[]
    /** fetch aggregated fields from the table: "transaction" */
    transaction_aggregate: transaction_aggregate
    /** fetch data from the table: "transaction" using primary key columns */
    transaction_by_pk: (transaction | null)
    /** fetch data from the table: "user" */
    user: user[]
    /** fetch aggregated fields from the table: "user" */
    user_aggregate: user_aggregate
    /** fetch data from the table: "user" using primary key columns */
    user_by_pk: (user | null)
    /** fetch data from the table: "user_stats" */
    user_stats: user_stats[]
    /** fetch aggregated fields from the table: "user_stats" */
    user_stats_aggregate: user_stats_aggregate
    /** fetch data from the table: "user_stats" using primary key columns */
    user_stats_by_pk: (user_stats | null)
    __typename: 'query_root'
}


/** columns and relationships of "redeemable" */
export interface redeemable {
    /** An array relationship */
    actions: action[]
    /** An aggregate relationship */
    actions_aggregate: action_aggregate
    address: Scalars['String']
    base_amount: Scalars['numeric']
    created_at: Scalars['timestamptz']
    fa2: Scalars['String']
    /** An object relationship */
    generative_token: generative_token
    max_consumptions_per_token: Scalars['Int']
    /** An array relationship */
    redemptions: redemption[]
    /** An aggregate relationship */
    redemptions_aggregate: redemption_aggregate
    /** An array relationship */
    splits: split[]
    /** An aggregate relationship */
    splits_aggregate: split_aggregate
    token_id: Scalars['String']
    __typename: 'redeemable'
}


/** aggregated selection of "redeemable" */
export interface redeemable_aggregate {
    aggregate: (redeemable_aggregate_fields | null)
    nodes: redeemable[]
    __typename: 'redeemable_aggregate'
}


/** aggregate fields of "redeemable" */
export interface redeemable_aggregate_fields {
    avg: (redeemable_avg_fields | null)
    count: Scalars['Int']
    max: (redeemable_max_fields | null)
    min: (redeemable_min_fields | null)
    stddev: (redeemable_stddev_fields | null)
    stddev_pop: (redeemable_stddev_pop_fields | null)
    stddev_samp: (redeemable_stddev_samp_fields | null)
    sum: (redeemable_sum_fields | null)
    var_pop: (redeemable_var_pop_fields | null)
    var_samp: (redeemable_var_samp_fields | null)
    variance: (redeemable_variance_fields | null)
    __typename: 'redeemable_aggregate_fields'
}


/** aggregate avg on columns */
export interface redeemable_avg_fields {
    base_amount: (Scalars['Float'] | null)
    max_consumptions_per_token: (Scalars['Float'] | null)
    __typename: 'redeemable_avg_fields'
}


/** unique or primary key constraints on table "redeemable" */
export type redeemable_constraint = 'PK_9cdc4a659b978ba30e26444f6ff'


/** aggregate max on columns */
export interface redeemable_max_fields {
    address: (Scalars['String'] | null)
    base_amount: (Scalars['numeric'] | null)
    created_at: (Scalars['timestamptz'] | null)
    fa2: (Scalars['String'] | null)
    max_consumptions_per_token: (Scalars['Int'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'redeemable_max_fields'
}


/** aggregate min on columns */
export interface redeemable_min_fields {
    address: (Scalars['String'] | null)
    base_amount: (Scalars['numeric'] | null)
    created_at: (Scalars['timestamptz'] | null)
    fa2: (Scalars['String'] | null)
    max_consumptions_per_token: (Scalars['Int'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'redeemable_min_fields'
}


/** response of any mutation on the table "redeemable" */
export interface redeemable_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: redeemable[]
    __typename: 'redeemable_mutation_response'
}


/** select columns of table "redeemable" */
export type redeemable_select_column = 'address' | 'base_amount' | 'created_at' | 'fa2' | 'max_consumptions_per_token' | 'token_id'


/** aggregate stddev on columns */
export interface redeemable_stddev_fields {
    base_amount: (Scalars['Float'] | null)
    max_consumptions_per_token: (Scalars['Float'] | null)
    __typename: 'redeemable_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface redeemable_stddev_pop_fields {
    base_amount: (Scalars['Float'] | null)
    max_consumptions_per_token: (Scalars['Float'] | null)
    __typename: 'redeemable_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface redeemable_stddev_samp_fields {
    base_amount: (Scalars['Float'] | null)
    max_consumptions_per_token: (Scalars['Float'] | null)
    __typename: 'redeemable_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface redeemable_sum_fields {
    base_amount: (Scalars['numeric'] | null)
    max_consumptions_per_token: (Scalars['Int'] | null)
    __typename: 'redeemable_sum_fields'
}


/** update columns of table "redeemable" */
export type redeemable_update_column = 'address' | 'base_amount' | 'created_at' | 'fa2' | 'max_consumptions_per_token' | 'token_id'


/** aggregate var_pop on columns */
export interface redeemable_var_pop_fields {
    base_amount: (Scalars['Float'] | null)
    max_consumptions_per_token: (Scalars['Float'] | null)
    __typename: 'redeemable_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface redeemable_var_samp_fields {
    base_amount: (Scalars['Float'] | null)
    max_consumptions_per_token: (Scalars['Float'] | null)
    __typename: 'redeemable_var_samp_fields'
}


/** aggregate variance on columns */
export interface redeemable_variance_fields {
    base_amount: (Scalars['Float'] | null)
    max_consumptions_per_token: (Scalars['Float'] | null)
    __typename: 'redeemable_variance_fields'
}


/** columns and relationships of "redemption" */
export interface redemption {
    amount: Scalars['numeric']
    created_at: Scalars['timestamptz']
    id: Scalars['Int']
    /** An object relationship */
    objkt: (objkt | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    /** An object relationship */
    redeemable: (redeemable | null)
    redeemable_address: (Scalars['String'] | null)
    redeemer_id: (Scalars['String'] | null)
    /** An object relationship */
    user: (user | null)
    __typename: 'redemption'
}


/** aggregated selection of "redemption" */
export interface redemption_aggregate {
    aggregate: (redemption_aggregate_fields | null)
    nodes: redemption[]
    __typename: 'redemption_aggregate'
}


/** aggregate fields of "redemption" */
export interface redemption_aggregate_fields {
    avg: (redemption_avg_fields | null)
    count: Scalars['Int']
    max: (redemption_max_fields | null)
    min: (redemption_min_fields | null)
    stddev: (redemption_stddev_fields | null)
    stddev_pop: (redemption_stddev_pop_fields | null)
    stddev_samp: (redemption_stddev_samp_fields | null)
    sum: (redemption_sum_fields | null)
    var_pop: (redemption_var_pop_fields | null)
    var_samp: (redemption_var_samp_fields | null)
    variance: (redemption_variance_fields | null)
    __typename: 'redemption_aggregate_fields'
}


/** aggregate avg on columns */
export interface redemption_avg_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    __typename: 'redemption_avg_fields'
}


/** unique or primary key constraints on table "redemption" */
export type redemption_constraint = 'PK_e96b16cd3061a61305951bc95a3'


/** aggregate max on columns */
export interface redemption_max_fields {
    amount: (Scalars['numeric'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    redeemable_address: (Scalars['String'] | null)
    redeemer_id: (Scalars['String'] | null)
    __typename: 'redemption_max_fields'
}


/** aggregate min on columns */
export interface redemption_min_fields {
    amount: (Scalars['numeric'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    redeemable_address: (Scalars['String'] | null)
    redeemer_id: (Scalars['String'] | null)
    __typename: 'redemption_min_fields'
}


/** response of any mutation on the table "redemption" */
export interface redemption_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: redemption[]
    __typename: 'redemption_mutation_response'
}


/** select columns of table "redemption" */
export type redemption_select_column = 'amount' | 'created_at' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'redeemable_address' | 'redeemer_id'


/** aggregate stddev on columns */
export interface redemption_stddev_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    __typename: 'redemption_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface redemption_stddev_pop_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    __typename: 'redemption_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface redemption_stddev_samp_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    __typename: 'redemption_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface redemption_sum_fields {
    amount: (Scalars['numeric'] | null)
    id: (Scalars['Int'] | null)
    __typename: 'redemption_sum_fields'
}


/** update columns of table "redemption" */
export type redemption_update_column = 'amount' | 'created_at' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'redeemable_address' | 'redeemer_id'


/** aggregate var_pop on columns */
export interface redemption_var_pop_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    __typename: 'redemption_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface redemption_var_samp_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    __typename: 'redemption_var_samp_fields'
}


/** aggregate variance on columns */
export interface redemption_variance_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    __typename: 'redemption_variance_fields'
}


/** columns and relationships of "report" */
export interface report {
    created_at: Scalars['timestamptz']
    /** An object relationship */
    generative_token: (generative_token | null)
    id: Scalars['uuid']
    /** An object relationship */
    moderation_reason: (moderation_reason | null)
    reason_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    /** An object relationship */
    user: (user | null)
    user_id: (Scalars['String'] | null)
    __typename: 'report'
}


/** aggregated selection of "report" */
export interface report_aggregate {
    aggregate: (report_aggregate_fields | null)
    nodes: report[]
    __typename: 'report_aggregate'
}


/** aggregate fields of "report" */
export interface report_aggregate_fields {
    count: Scalars['Int']
    max: (report_max_fields | null)
    min: (report_min_fields | null)
    __typename: 'report_aggregate_fields'
}


/** unique or primary key constraints on table "report" */
export type report_constraint = 'PK_99e4d0bea58cba73c57f935a546'


/** aggregate max on columns */
export interface report_max_fields {
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['uuid'] | null)
    reason_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    user_id: (Scalars['String'] | null)
    __typename: 'report_max_fields'
}


/** aggregate min on columns */
export interface report_min_fields {
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['uuid'] | null)
    reason_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    user_id: (Scalars['String'] | null)
    __typename: 'report_min_fields'
}


/** response of any mutation on the table "report" */
export interface report_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: report[]
    __typename: 'report_mutation_response'
}


/** select columns of table "report" */
export type report_select_column = 'created_at' | 'id' | 'reason_id' | 'token_id' | 'user_id'


/** update columns of table "report" */
export type report_update_column = 'created_at' | 'id' | 'reason_id' | 'token_id' | 'user_id'


/** columns and relationships of "reserve" */
export interface reserve {
    amount: Scalars['numeric']
    data: (Scalars['jsonb'] | null)
    /** An object relationship */
    generative_token: (generative_token | null)
    id: Scalars['Int']
    method: Scalars['Int']
    token_id: (Scalars['String'] | null)
    __typename: 'reserve'
}


/** aggregated selection of "reserve" */
export interface reserve_aggregate {
    aggregate: (reserve_aggregate_fields | null)
    nodes: reserve[]
    __typename: 'reserve_aggregate'
}


/** aggregate fields of "reserve" */
export interface reserve_aggregate_fields {
    avg: (reserve_avg_fields | null)
    count: Scalars['Int']
    max: (reserve_max_fields | null)
    min: (reserve_min_fields | null)
    stddev: (reserve_stddev_fields | null)
    stddev_pop: (reserve_stddev_pop_fields | null)
    stddev_samp: (reserve_stddev_samp_fields | null)
    sum: (reserve_sum_fields | null)
    var_pop: (reserve_var_pop_fields | null)
    var_samp: (reserve_var_samp_fields | null)
    variance: (reserve_variance_fields | null)
    __typename: 'reserve_aggregate_fields'
}


/** aggregate avg on columns */
export interface reserve_avg_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    method: (Scalars['Float'] | null)
    __typename: 'reserve_avg_fields'
}


/** unique or primary key constraints on table "reserve" */
export type reserve_constraint = 'PK_619d1e12dbedbe126620cac8240'


/** aggregate max on columns */
export interface reserve_max_fields {
    amount: (Scalars['numeric'] | null)
    id: (Scalars['Int'] | null)
    method: (Scalars['Int'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'reserve_max_fields'
}


/** aggregate min on columns */
export interface reserve_min_fields {
    amount: (Scalars['numeric'] | null)
    id: (Scalars['Int'] | null)
    method: (Scalars['Int'] | null)
    token_id: (Scalars['String'] | null)
    __typename: 'reserve_min_fields'
}


/** response of any mutation on the table "reserve" */
export interface reserve_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: reserve[]
    __typename: 'reserve_mutation_response'
}


/** select columns of table "reserve" */
export type reserve_select_column = 'amount' | 'data' | 'id' | 'method' | 'token_id'


/** aggregate stddev on columns */
export interface reserve_stddev_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    method: (Scalars['Float'] | null)
    __typename: 'reserve_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface reserve_stddev_pop_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    method: (Scalars['Float'] | null)
    __typename: 'reserve_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface reserve_stddev_samp_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    method: (Scalars['Float'] | null)
    __typename: 'reserve_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface reserve_sum_fields {
    amount: (Scalars['numeric'] | null)
    id: (Scalars['Int'] | null)
    method: (Scalars['Int'] | null)
    __typename: 'reserve_sum_fields'
}


/** update columns of table "reserve" */
export type reserve_update_column = 'amount' | 'data' | 'id' | 'method' | 'token_id'


/** aggregate var_pop on columns */
export interface reserve_var_pop_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    method: (Scalars['Float'] | null)
    __typename: 'reserve_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface reserve_var_samp_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    method: (Scalars['Float'] | null)
    __typename: 'reserve_var_samp_fields'
}


/** aggregate variance on columns */
export interface reserve_variance_fields {
    amount: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    method: (Scalars['Float'] | null)
    __typename: 'reserve_variance_fields'
}


/** columns and relationships of "split" */
export interface split {
    /** An object relationship */
    article: (article | null)
    article_id: (Scalars['Int'] | null)
    /** An object relationship */
    generativeTokenByGenerativeTokenPrimaryId: (generative_token | null)
    /** An object relationship */
    generative_token: (generative_token | null)
    generative_token_primary_id: (Scalars['String'] | null)
    generative_token_secondary_id: (Scalars['String'] | null)
    id: Scalars['Int']
    /** An object relationship */
    objkt: (objkt | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    pct: Scalars['Int']
    /** An object relationship */
    redeemable: (redeemable | null)
    redeemable_address: (Scalars['String'] | null)
    /** An object relationship */
    user: (user | null)
    user_id: (Scalars['String'] | null)
    __typename: 'split'
}


/** aggregated selection of "split" */
export interface split_aggregate {
    aggregate: (split_aggregate_fields | null)
    nodes: split[]
    __typename: 'split_aggregate'
}


/** aggregate fields of "split" */
export interface split_aggregate_fields {
    avg: (split_avg_fields | null)
    count: Scalars['Int']
    max: (split_max_fields | null)
    min: (split_min_fields | null)
    stddev: (split_stddev_fields | null)
    stddev_pop: (split_stddev_pop_fields | null)
    stddev_samp: (split_stddev_samp_fields | null)
    sum: (split_sum_fields | null)
    var_pop: (split_var_pop_fields | null)
    var_samp: (split_var_samp_fields | null)
    variance: (split_variance_fields | null)
    __typename: 'split_aggregate_fields'
}


/** aggregate avg on columns */
export interface split_avg_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    pct: (Scalars['Float'] | null)
    __typename: 'split_avg_fields'
}


/** unique or primary key constraints on table "split" */
export type split_constraint = 'PK_a656ea46749d1567ca7e7d5923a'


/** aggregate max on columns */
export interface split_max_fields {
    article_id: (Scalars['Int'] | null)
    generative_token_primary_id: (Scalars['String'] | null)
    generative_token_secondary_id: (Scalars['String'] | null)
    id: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    pct: (Scalars['Int'] | null)
    redeemable_address: (Scalars['String'] | null)
    user_id: (Scalars['String'] | null)
    __typename: 'split_max_fields'
}


/** aggregate min on columns */
export interface split_min_fields {
    article_id: (Scalars['Int'] | null)
    generative_token_primary_id: (Scalars['String'] | null)
    generative_token_secondary_id: (Scalars['String'] | null)
    id: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    pct: (Scalars['Int'] | null)
    redeemable_address: (Scalars['String'] | null)
    user_id: (Scalars['String'] | null)
    __typename: 'split_min_fields'
}


/** response of any mutation on the table "split" */
export interface split_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: split[]
    __typename: 'split_mutation_response'
}


/** select columns of table "split" */
export type split_select_column = 'article_id' | 'generative_token_primary_id' | 'generative_token_secondary_id' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'pct' | 'redeemable_address' | 'user_id'


/** aggregate stddev on columns */
export interface split_stddev_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    pct: (Scalars['Float'] | null)
    __typename: 'split_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface split_stddev_pop_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    pct: (Scalars['Float'] | null)
    __typename: 'split_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface split_stddev_samp_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    pct: (Scalars['Float'] | null)
    __typename: 'split_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface split_sum_fields {
    article_id: (Scalars['Int'] | null)
    id: (Scalars['Int'] | null)
    pct: (Scalars['Int'] | null)
    __typename: 'split_sum_fields'
}


/** update columns of table "split" */
export type split_update_column = 'article_id' | 'generative_token_primary_id' | 'generative_token_secondary_id' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'pct' | 'redeemable_address' | 'user_id'


/** aggregate var_pop on columns */
export interface split_var_pop_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    pct: (Scalars['Float'] | null)
    __typename: 'split_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface split_var_samp_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    pct: (Scalars['Float'] | null)
    __typename: 'split_var_samp_fields'
}


/** aggregate variance on columns */
export interface split_variance_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    pct: (Scalars['Float'] | null)
    __typename: 'split_variance_fields'
}

export interface subscription_root {
    /** fetch data from the table: "Account" */
    Account: Account[]
    /** fetch aggregated fields from the table: "Account" */
    Account_aggregate: Account_aggregate
    /** fetch data from the table: "Account" using primary key columns */
    Account_by_pk: (Account | null)
    /** fetch data from the table in a streaming manner: "Account" */
    Account_stream: Account[]
    /** fetch data from the table: "Profile" */
    Profile: Profile[]
    /** fetch aggregated fields from the table: "Profile" */
    Profile_aggregate: Profile_aggregate
    /** fetch data from the table: "Profile" using primary key columns */
    Profile_by_pk: (Profile | null)
    /** fetch data from the table in a streaming manner: "Profile" */
    Profile_stream: Profile[]
    /** fetch data from the table: "Wallet" */
    Wallet: Wallet[]
    /** fetch aggregated fields from the table: "Wallet" */
    Wallet_aggregate: Wallet_aggregate
    /** fetch data from the table: "Wallet" using primary key columns */
    Wallet_by_pk: (Wallet | null)
    /** fetch data from the table in a streaming manner: "Wallet" */
    Wallet_stream: Wallet[]
    /** fetch data from the table: "Whitelist" */
    Whitelist: Whitelist[]
    /** fetch data from the table: "WhitelistEntries" */
    WhitelistEntries: WhitelistEntries[]
    /** fetch aggregated fields from the table: "WhitelistEntries" */
    WhitelistEntries_aggregate: WhitelistEntries_aggregate
    /** fetch data from the table: "WhitelistEntries" using primary key columns */
    WhitelistEntries_by_pk: (WhitelistEntries | null)
    /** fetch data from the table in a streaming manner: "WhitelistEntries" */
    WhitelistEntries_stream: WhitelistEntries[]
    /** fetch aggregated fields from the table: "Whitelist" */
    Whitelist_aggregate: Whitelist_aggregate
    /** fetch data from the table: "Whitelist" using primary key columns */
    Whitelist_by_pk: (Whitelist | null)
    /** fetch data from the table in a streaming manner: "Whitelist" */
    Whitelist_stream: Whitelist[]
    /** fetch data from the table: "action" */
    action: action[]
    /** fetch aggregated fields from the table: "action" */
    action_aggregate: action_aggregate
    /** fetch data from the table: "action" using primary key columns */
    action_by_pk: (action | null)
    /** fetch data from the table in a streaming manner: "action" */
    action_stream: action[]
    /** fetch data from the table: "article" */
    article: article[]
    /** fetch aggregated fields from the table: "article" */
    article_aggregate: article_aggregate
    /** fetch data from the table: "article" using primary key columns */
    article_by_pk: (article | null)
    /** fetch data from the table: "article_generative_token" */
    article_generative_token: article_generative_token[]
    /** fetch aggregated fields from the table: "article_generative_token" */
    article_generative_token_aggregate: article_generative_token_aggregate
    /** fetch data from the table: "article_generative_token" using primary key columns */
    article_generative_token_by_pk: (article_generative_token | null)
    /** fetch data from the table in a streaming manner: "article_generative_token" */
    article_generative_token_stream: article_generative_token[]
    /** fetch data from the table: "article_ledger" */
    article_ledger: article_ledger[]
    /** fetch aggregated fields from the table: "article_ledger" */
    article_ledger_aggregate: article_ledger_aggregate
    /** fetch data from the table: "article_ledger" using primary key columns */
    article_ledger_by_pk: (article_ledger | null)
    /** fetch data from the table in a streaming manner: "article_ledger" */
    article_ledger_stream: article_ledger[]
    /** fetch data from the table: "article_revision" */
    article_revision: article_revision[]
    /** fetch aggregated fields from the table: "article_revision" */
    article_revision_aggregate: article_revision_aggregate
    /** fetch data from the table: "article_revision" using primary key columns */
    article_revision_by_pk: (article_revision | null)
    /** fetch data from the table in a streaming manner: "article_revision" */
    article_revision_stream: article_revision[]
    /** fetch data from the table in a streaming manner: "article" */
    article_stream: article[]
    /** fetch data from the table: "auction" */
    auction: auction[]
    /** fetch aggregated fields from the table: "auction" */
    auction_aggregate: auction_aggregate
    /** fetch data from the table: "auction_bid" */
    auction_bid: auction_bid[]
    /** fetch aggregated fields from the table: "auction_bid" */
    auction_bid_aggregate: auction_bid_aggregate
    /** fetch data from the table: "auction_bid" using primary key columns */
    auction_bid_by_pk: (auction_bid | null)
    /** fetch data from the table in a streaming manner: "auction_bid" */
    auction_bid_stream: auction_bid[]
    /** fetch data from the table: "auction_bid_table" */
    auction_bid_table: auction_bid_table[]
    /** fetch aggregated fields from the table: "auction_bid_table" */
    auction_bid_table_aggregate: auction_bid_table_aggregate
    /** fetch data from the table: "auction_bid_table" using primary key columns */
    auction_bid_table_by_pk: (auction_bid_table | null)
    /** fetch data from the table in a streaming manner: "auction_bid_table" */
    auction_bid_table_stream: auction_bid_table[]
    /** fetch data from the table: "auction" using primary key columns */
    auction_by_pk: (auction | null)
    /** fetch data from the table in a streaming manner: "auction" */
    auction_stream: auction[]
    /** fetch data from the table: "codex" */
    codex: codex[]
    /** fetch aggregated fields from the table: "codex" */
    codex_aggregate: codex_aggregate
    /** fetch data from the table: "codex" using primary key columns */
    codex_by_pk: (codex | null)
    /** fetch data from the table in a streaming manner: "codex" */
    codex_stream: codex[]
    /** fetch data from the table: "codex_update_request" */
    codex_update_request: codex_update_request[]
    /** fetch aggregated fields from the table: "codex_update_request" */
    codex_update_request_aggregate: codex_update_request_aggregate
    /** fetch data from the table: "codex_update_request" using primary key columns */
    codex_update_request_by_pk: (codex_update_request | null)
    /** fetch data from the table in a streaming manner: "codex_update_request" */
    codex_update_request_stream: codex_update_request[]
    /** fetch data from the table: "collaboration" */
    collaboration: collaboration[]
    /** fetch aggregated fields from the table: "collaboration" */
    collaboration_aggregate: collaboration_aggregate
    /** fetch data from the table: "collaboration" using primary key columns */
    collaboration_by_pk: (collaboration | null)
    /** fetch data from the table in a streaming manner: "collaboration" */
    collaboration_stream: collaboration[]
    /** fetch data from the table: "collection_offer" */
    collection_offer: collection_offer[]
    /** fetch aggregated fields from the table: "collection_offer" */
    collection_offer_aggregate: collection_offer_aggregate
    /** fetch data from the table: "collection_offer" using primary key columns */
    collection_offer_by_pk: (collection_offer | null)
    /** fetch data from the table in a streaming manner: "collection_offer" */
    collection_offer_stream: collection_offer[]
    /** fetch data from the table: "generative_token" */
    generative_token: generative_token[]
    /** fetch aggregated fields from the table: "generative_token" */
    generative_token_aggregate: generative_token_aggregate
    /** fetch data from the table: "generative_token" using primary key columns */
    generative_token_by_pk: (generative_token | null)
    /** fetch data from the table in a streaming manner: "generative_token" */
    generative_token_stream: generative_token[]
    /** fetch data from the table: "gentk_assign" */
    gentk_assign: gentk_assign[]
    /** fetch aggregated fields from the table: "gentk_assign" */
    gentk_assign_aggregate: gentk_assign_aggregate
    /** fetch data from the table: "gentk_assign" using primary key columns */
    gentk_assign_by_pk: (gentk_assign | null)
    /** fetch data from the table in a streaming manner: "gentk_assign" */
    gentk_assign_stream: gentk_assign[]
    /** fetch data from the table: "ipfs_cid" */
    ipfs_cid: ipfs_cid[]
    /** fetch aggregated fields from the table: "ipfs_cid" */
    ipfs_cid_aggregate: ipfs_cid_aggregate
    /** fetch data from the table: "ipfs_cid" using primary key columns */
    ipfs_cid_by_pk: (ipfs_cid | null)
    /** fetch data from the table in a streaming manner: "ipfs_cid" */
    ipfs_cid_stream: ipfs_cid[]
    /** fetch data from the table: "listing" */
    listing: listing[]
    /** fetch aggregated fields from the table: "listing" */
    listing_aggregate: listing_aggregate
    /** fetch data from the table: "listing" using primary key columns */
    listing_by_pk: (listing | null)
    /** fetch data from the table in a streaming manner: "listing" */
    listing_stream: listing[]
    /** fetch data from the table: "market_stats" */
    market_stats: market_stats[]
    /** fetch aggregated fields from the table: "market_stats" */
    market_stats_aggregate: market_stats_aggregate
    /** fetch data from the table: "market_stats" using primary key columns */
    market_stats_by_pk: (market_stats | null)
    /** fetch data from the table: "market_stats_history" */
    market_stats_history: market_stats_history[]
    /** fetch aggregated fields from the table: "market_stats_history" */
    market_stats_history_aggregate: market_stats_history_aggregate
    /** fetch data from the table: "market_stats_history" using primary key columns */
    market_stats_history_by_pk: (market_stats_history | null)
    /** fetch data from the table in a streaming manner: "market_stats_history" */
    market_stats_history_stream: market_stats_history[]
    /** fetch data from the table in a streaming manner: "market_stats" */
    market_stats_stream: market_stats[]
    /** fetch data from the table: "media_image" */
    media_image: media_image[]
    /** fetch aggregated fields from the table: "media_image" */
    media_image_aggregate: media_image_aggregate
    /** fetch data from the table: "media_image" using primary key columns */
    media_image_by_pk: (media_image | null)
    /** fetch data from the table in a streaming manner: "media_image" */
    media_image_stream: media_image[]
    /** fetch data from the table: "mint_ticket" */
    mint_ticket: mint_ticket[]
    /** fetch aggregated fields from the table: "mint_ticket" */
    mint_ticket_aggregate: mint_ticket_aggregate
    /** fetch data from the table: "mint_ticket" using primary key columns */
    mint_ticket_by_pk: (mint_ticket | null)
    /** An array relationship */
    mint_ticket_settings: mint_ticket_settings[]
    /** An aggregate relationship */
    mint_ticket_settings_aggregate: mint_ticket_settings_aggregate
    /** fetch data from the table: "mint_ticket_settings" using primary key columns */
    mint_ticket_settings_by_pk: (mint_ticket_settings | null)
    /** fetch data from the table in a streaming manner: "mint_ticket_settings" */
    mint_ticket_settings_stream: mint_ticket_settings[]
    /** fetch data from the table in a streaming manner: "mint_ticket" */
    mint_ticket_stream: mint_ticket[]
    /** fetch data from the table: "moderation_reason" */
    moderation_reason: moderation_reason[]
    /** fetch aggregated fields from the table: "moderation_reason" */
    moderation_reason_aggregate: moderation_reason_aggregate
    /** fetch data from the table: "moderation_reason" using primary key columns */
    moderation_reason_by_pk: (moderation_reason | null)
    /** fetch data from the table in a streaming manner: "moderation_reason" */
    moderation_reason_stream: moderation_reason[]
    /** fetch data from the table: "objkt" */
    objkt: objkt[]
    /** fetch aggregated fields from the table: "objkt" */
    objkt_aggregate: objkt_aggregate
    /** fetch data from the table: "objkt" using primary key columns */
    objkt_by_pk: (objkt | null)
    /** fetch data from the table in a streaming manner: "objkt" */
    objkt_stream: objkt[]
    /** fetch data from the table: "offer" */
    offer: offer[]
    /** fetch aggregated fields from the table: "offer" */
    offer_aggregate: offer_aggregate
    /** fetch data from the table: "offer" using primary key columns */
    offer_by_pk: (offer | null)
    /** fetch data from the table in a streaming manner: "offer" */
    offer_stream: offer[]
    /** fetch data from the table: "pricing_dutch_auction" */
    pricing_dutch_auction: pricing_dutch_auction[]
    /** fetch aggregated fields from the table: "pricing_dutch_auction" */
    pricing_dutch_auction_aggregate: pricing_dutch_auction_aggregate
    /** fetch data from the table: "pricing_dutch_auction" using primary key columns */
    pricing_dutch_auction_by_pk: (pricing_dutch_auction | null)
    /** fetch data from the table in a streaming manner: "pricing_dutch_auction" */
    pricing_dutch_auction_stream: pricing_dutch_auction[]
    /** fetch data from the table: "pricing_fixed" */
    pricing_fixed: pricing_fixed[]
    /** fetch aggregated fields from the table: "pricing_fixed" */
    pricing_fixed_aggregate: pricing_fixed_aggregate
    /** fetch data from the table: "pricing_fixed" using primary key columns */
    pricing_fixed_by_pk: (pricing_fixed | null)
    /** fetch data from the table in a streaming manner: "pricing_fixed" */
    pricing_fixed_stream: pricing_fixed[]
    /** fetch data from the table: "redeemable" */
    redeemable: redeemable[]
    /** fetch aggregated fields from the table: "redeemable" */
    redeemable_aggregate: redeemable_aggregate
    /** fetch data from the table: "redeemable" using primary key columns */
    redeemable_by_pk: (redeemable | null)
    /** fetch data from the table in a streaming manner: "redeemable" */
    redeemable_stream: redeemable[]
    /** fetch data from the table: "redemption" */
    redemption: redemption[]
    /** fetch aggregated fields from the table: "redemption" */
    redemption_aggregate: redemption_aggregate
    /** fetch data from the table: "redemption" using primary key columns */
    redemption_by_pk: (redemption | null)
    /** fetch data from the table in a streaming manner: "redemption" */
    redemption_stream: redemption[]
    /** fetch data from the table: "report" */
    report: report[]
    /** fetch aggregated fields from the table: "report" */
    report_aggregate: report_aggregate
    /** fetch data from the table: "report" using primary key columns */
    report_by_pk: (report | null)
    /** fetch data from the table in a streaming manner: "report" */
    report_stream: report[]
    /** fetch data from the table: "reserve" */
    reserve: reserve[]
    /** fetch aggregated fields from the table: "reserve" */
    reserve_aggregate: reserve_aggregate
    /** fetch data from the table: "reserve" using primary key columns */
    reserve_by_pk: (reserve | null)
    /** fetch data from the table in a streaming manner: "reserve" */
    reserve_stream: reserve[]
    /** fetch data from the table: "split" */
    split: split[]
    /** fetch aggregated fields from the table: "split" */
    split_aggregate: split_aggregate
    /** fetch data from the table: "split" using primary key columns */
    split_by_pk: (split | null)
    /** fetch data from the table in a streaming manner: "split" */
    split_stream: split[]
    /** fetch data from the table: "transaction" */
    transaction: transaction[]
    /** fetch aggregated fields from the table: "transaction" */
    transaction_aggregate: transaction_aggregate
    /** fetch data from the table: "transaction" using primary key columns */
    transaction_by_pk: (transaction | null)
    /** fetch data from the table in a streaming manner: "transaction" */
    transaction_stream: transaction[]
    /** fetch data from the table: "user" */
    user: user[]
    /** fetch aggregated fields from the table: "user" */
    user_aggregate: user_aggregate
    /** fetch data from the table: "user" using primary key columns */
    user_by_pk: (user | null)
    /** fetch data from the table: "user_stats" */
    user_stats: user_stats[]
    /** fetch aggregated fields from the table: "user_stats" */
    user_stats_aggregate: user_stats_aggregate
    /** fetch data from the table: "user_stats" using primary key columns */
    user_stats_by_pk: (user_stats | null)
    /** fetch data from the table in a streaming manner: "user_stats" */
    user_stats_stream: user_stats[]
    /** fetch data from the table in a streaming manner: "user" */
    user_stream: user[]
    __typename: 'subscription_root'
}


/** columns and relationships of "transaction" */
export interface transaction {
    /** An object relationship */
    article: (article | null)
    article_id: (Scalars['Int'] | null)
    created_at: Scalars['timestamptz']
    /** An object relationship */
    generative_token: (generative_token | null)
    id: Scalars['Int']
    /** An object relationship */
    objkt: (objkt | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    op_hash: Scalars['String']
    price: Scalars['numeric']
    ticket_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    type: Scalars['transaction_type_enum']
    __typename: 'transaction'
}


/** aggregated selection of "transaction" */
export interface transaction_aggregate {
    aggregate: (transaction_aggregate_fields | null)
    nodes: transaction[]
    __typename: 'transaction_aggregate'
}


/** aggregate fields of "transaction" */
export interface transaction_aggregate_fields {
    avg: (transaction_avg_fields | null)
    count: Scalars['Int']
    max: (transaction_max_fields | null)
    min: (transaction_min_fields | null)
    stddev: (transaction_stddev_fields | null)
    stddev_pop: (transaction_stddev_pop_fields | null)
    stddev_samp: (transaction_stddev_samp_fields | null)
    sum: (transaction_sum_fields | null)
    var_pop: (transaction_var_pop_fields | null)
    var_samp: (transaction_var_samp_fields | null)
    variance: (transaction_variance_fields | null)
    __typename: 'transaction_aggregate_fields'
}


/** aggregate avg on columns */
export interface transaction_avg_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'transaction_avg_fields'
}


/** unique or primary key constraints on table "transaction" */
export type transaction_constraint = 'PK_89eadb93a89810556e1cbcd6ab9'


/** aggregate max on columns */
export interface transaction_max_fields {
    article_id: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    op_hash: (Scalars['String'] | null)
    price: (Scalars['numeric'] | null)
    ticket_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    type: (Scalars['transaction_type_enum'] | null)
    __typename: 'transaction_max_fields'
}


/** aggregate min on columns */
export interface transaction_min_fields {
    article_id: (Scalars['Int'] | null)
    created_at: (Scalars['timestamptz'] | null)
    id: (Scalars['Int'] | null)
    objkt_id: (Scalars['String'] | null)
    objkt_issuer_version: (Scalars['generative_token_version'] | null)
    op_hash: (Scalars['String'] | null)
    price: (Scalars['numeric'] | null)
    ticket_id: (Scalars['String'] | null)
    token_id: (Scalars['String'] | null)
    type: (Scalars['transaction_type_enum'] | null)
    __typename: 'transaction_min_fields'
}


/** response of any mutation on the table "transaction" */
export interface transaction_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: transaction[]
    __typename: 'transaction_mutation_response'
}


/** select columns of table "transaction" */
export type transaction_select_column = 'article_id' | 'created_at' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'op_hash' | 'price' | 'ticket_id' | 'token_id' | 'type'


/** aggregate stddev on columns */
export interface transaction_stddev_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'transaction_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface transaction_stddev_pop_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'transaction_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface transaction_stddev_samp_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'transaction_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface transaction_sum_fields {
    article_id: (Scalars['Int'] | null)
    id: (Scalars['Int'] | null)
    price: (Scalars['numeric'] | null)
    __typename: 'transaction_sum_fields'
}


/** update columns of table "transaction" */
export type transaction_update_column = 'article_id' | 'created_at' | 'id' | 'objkt_id' | 'objkt_issuer_version' | 'op_hash' | 'price' | 'ticket_id' | 'token_id' | 'type'


/** aggregate var_pop on columns */
export interface transaction_var_pop_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'transaction_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface transaction_var_samp_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'transaction_var_samp_fields'
}


/** aggregate variance on columns */
export interface transaction_variance_fields {
    article_id: (Scalars['Float'] | null)
    id: (Scalars['Float'] | null)
    price: (Scalars['Float'] | null)
    __typename: 'transaction_variance_fields'
}


/** columns and relationships of "user" */
export interface user {
    /** An array relationship */
    actions: action[]
    /** An array relationship */
    actionsByIssuerId: action[]
    /** An aggregate relationship */
    actionsByIssuerId_aggregate: action_aggregate
    /** An aggregate relationship */
    actions_aggregate: action_aggregate
    /** An array relationship */
    article_ledgers: article_ledger[]
    /** An aggregate relationship */
    article_ledgers_aggregate: article_ledger_aggregate
    /** An array relationship */
    articles: article[]
    /** An aggregate relationship */
    articles_aggregate: article_aggregate
    /** An array relationship */
    auction_bids: auction_bid[]
    /** An aggregate relationship */
    auction_bids_aggregate: auction_bid_aggregate
    /** An array relationship */
    auctions: auction[]
    /** An aggregate relationship */
    auctions_aggregate: auction_aggregate
    authorizations: Scalars['_int2']
    avatarMediaId: (Scalars['bpchar'] | null)
    avatar_uri: (Scalars['String'] | null)
    /** An array relationship */
    codexes: codex[]
    /** An aggregate relationship */
    codexes_aggregate: codex_aggregate
    /** An array relationship */
    collaborations: collaboration[]
    /** An array relationship */
    collaborationsByCollaboratorId: collaboration[]
    /** An aggregate relationship */
    collaborationsByCollaboratorId_aggregate: collaboration_aggregate
    /** An aggregate relationship */
    collaborations_aggregate: collaboration_aggregate
    /** An array relationship */
    collection_offers: collection_offer[]
    /** An aggregate relationship */
    collection_offers_aggregate: collection_offer_aggregate
    created_at: Scalars['timestamptz']
    description: (Scalars['String'] | null)
    flag: Scalars['user_flag_enum']
    /** An array relationship */
    generative_tokens: generative_token[]
    /** An aggregate relationship */
    generative_tokens_aggregate: generative_token_aggregate
    id: Scalars['String']
    /** An array relationship */
    listings: listing[]
    /** An array relationship */
    listingsByAcceptedById: listing[]
    /** An aggregate relationship */
    listingsByAcceptedById_aggregate: listing_aggregate
    /** An aggregate relationship */
    listings_aggregate: listing_aggregate
    /** An object relationship */
    media_image: (media_image | null)
    metadata: (Scalars['jsonb'] | null)
    metadata_uri: (Scalars['String'] | null)
    /** An array relationship */
    mint_tickets: mint_ticket[]
    /** An aggregate relationship */
    mint_tickets_aggregate: mint_ticket_aggregate
    /** An object relationship */
    moderation_reason: (moderation_reason | null)
    moderation_reason_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    /** An array relationship */
    objkts: objkt[]
    /** An array relationship */
    objktsByOwnerId: objkt[]
    /** An aggregate relationship */
    objktsByOwnerId_aggregate: objkt_aggregate
    /** An aggregate relationship */
    objkts_aggregate: objkt_aggregate
    /** An array relationship */
    offers: offer[]
    /** An aggregate relationship */
    offers_aggregate: offer_aggregate
    /** An array relationship */
    redemptions: redemption[]
    /** An aggregate relationship */
    redemptions_aggregate: redemption_aggregate
    /** An array relationship */
    reports: report[]
    /** An aggregate relationship */
    reports_aggregate: report_aggregate
    /** An array relationship */
    splits: split[]
    /** An aggregate relationship */
    splits_aggregate: split_aggregate
    type: Scalars['user_type_enum']
    updated_at: Scalars['timestamptz']
    /** An object relationship */
    user_stat: (user_stats | null)
    __typename: 'user'
}


/** aggregated selection of "user" */
export interface user_aggregate {
    aggregate: (user_aggregate_fields | null)
    nodes: user[]
    __typename: 'user_aggregate'
}


/** aggregate fields of "user" */
export interface user_aggregate_fields {
    count: Scalars['Int']
    max: (user_max_fields | null)
    min: (user_min_fields | null)
    __typename: 'user_aggregate_fields'
}


/** unique or primary key constraints on table "user" */
export type user_constraint = 'PK_cace4a159ff9f2512dd42373760'


/** aggregate max on columns */
export interface user_max_fields {
    avatarMediaId: (Scalars['bpchar'] | null)
    avatar_uri: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    description: (Scalars['String'] | null)
    flag: (Scalars['user_flag_enum'] | null)
    id: (Scalars['String'] | null)
    metadata_uri: (Scalars['String'] | null)
    moderation_reason_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    type: (Scalars['user_type_enum'] | null)
    updated_at: (Scalars['timestamptz'] | null)
    __typename: 'user_max_fields'
}


/** aggregate min on columns */
export interface user_min_fields {
    avatarMediaId: (Scalars['bpchar'] | null)
    avatar_uri: (Scalars['String'] | null)
    created_at: (Scalars['timestamptz'] | null)
    description: (Scalars['String'] | null)
    flag: (Scalars['user_flag_enum'] | null)
    id: (Scalars['String'] | null)
    metadata_uri: (Scalars['String'] | null)
    moderation_reason_id: (Scalars['String'] | null)
    name: (Scalars['String'] | null)
    type: (Scalars['user_type_enum'] | null)
    updated_at: (Scalars['timestamptz'] | null)
    __typename: 'user_min_fields'
}


/** response of any mutation on the table "user" */
export interface user_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: user[]
    __typename: 'user_mutation_response'
}


/** select columns of table "user" */
export type user_select_column = 'authorizations' | 'avatarMediaId' | 'avatar_uri' | 'created_at' | 'description' | 'flag' | 'id' | 'metadata' | 'metadata_uri' | 'moderation_reason_id' | 'name' | 'type' | 'updated_at'


/** columns and relationships of "user_stats" */
export interface user_stats {
    from: (Scalars['timestamptz'] | null)
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_nb24: (Scalars['bigint'] | null)
    prim_volume_nb30d: (Scalars['bigint'] | null)
    prim_volume_nb7d: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    prim_volume_tz24: (Scalars['bigint'] | null)
    prim_volume_tz30d: (Scalars['bigint'] | null)
    prim_volume_tz7d: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_nb24: (Scalars['bigint'] | null)
    sec_volume_nb30d: (Scalars['bigint'] | null)
    sec_volume_nb7d: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    sec_volume_tz24: (Scalars['bigint'] | null)
    sec_volume_tz30d: (Scalars['bigint'] | null)
    sec_volume_tz7d: (Scalars['bigint'] | null)
    to: (Scalars['timestamptz'] | null)
    /** An object relationship */
    user: user
    user_id: Scalars['String']
    __typename: 'user_stats'
}


/** aggregated selection of "user_stats" */
export interface user_stats_aggregate {
    aggregate: (user_stats_aggregate_fields | null)
    nodes: user_stats[]
    __typename: 'user_stats_aggregate'
}


/** aggregate fields of "user_stats" */
export interface user_stats_aggregate_fields {
    avg: (user_stats_avg_fields | null)
    count: Scalars['Int']
    max: (user_stats_max_fields | null)
    min: (user_stats_min_fields | null)
    stddev: (user_stats_stddev_fields | null)
    stddev_pop: (user_stats_stddev_pop_fields | null)
    stddev_samp: (user_stats_stddev_samp_fields | null)
    sum: (user_stats_sum_fields | null)
    var_pop: (user_stats_var_pop_fields | null)
    var_samp: (user_stats_var_samp_fields | null)
    variance: (user_stats_variance_fields | null)
    __typename: 'user_stats_aggregate_fields'
}


/** aggregate avg on columns */
export interface user_stats_avg_fields {
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_nb24: (Scalars['Float'] | null)
    prim_volume_nb30d: (Scalars['Float'] | null)
    prim_volume_nb7d: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    prim_volume_tz24: (Scalars['Float'] | null)
    prim_volume_tz30d: (Scalars['Float'] | null)
    prim_volume_tz7d: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'user_stats_avg_fields'
}


/** unique or primary key constraints on table "user_stats" */
export type user_stats_constraint = 'PK_0e0da843088caf61925ded4434e'


/** aggregate max on columns */
export interface user_stats_max_fields {
    from: (Scalars['timestamptz'] | null)
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_nb24: (Scalars['bigint'] | null)
    prim_volume_nb30d: (Scalars['bigint'] | null)
    prim_volume_nb7d: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    prim_volume_tz24: (Scalars['bigint'] | null)
    prim_volume_tz30d: (Scalars['bigint'] | null)
    prim_volume_tz7d: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_nb24: (Scalars['bigint'] | null)
    sec_volume_nb30d: (Scalars['bigint'] | null)
    sec_volume_nb7d: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    sec_volume_tz24: (Scalars['bigint'] | null)
    sec_volume_tz30d: (Scalars['bigint'] | null)
    sec_volume_tz7d: (Scalars['bigint'] | null)
    to: (Scalars['timestamptz'] | null)
    user_id: (Scalars['String'] | null)
    __typename: 'user_stats_max_fields'
}


/** aggregate min on columns */
export interface user_stats_min_fields {
    from: (Scalars['timestamptz'] | null)
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_nb24: (Scalars['bigint'] | null)
    prim_volume_nb30d: (Scalars['bigint'] | null)
    prim_volume_nb7d: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    prim_volume_tz24: (Scalars['bigint'] | null)
    prim_volume_tz30d: (Scalars['bigint'] | null)
    prim_volume_tz7d: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_nb24: (Scalars['bigint'] | null)
    sec_volume_nb30d: (Scalars['bigint'] | null)
    sec_volume_nb7d: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    sec_volume_tz24: (Scalars['bigint'] | null)
    sec_volume_tz30d: (Scalars['bigint'] | null)
    sec_volume_tz7d: (Scalars['bigint'] | null)
    to: (Scalars['timestamptz'] | null)
    user_id: (Scalars['String'] | null)
    __typename: 'user_stats_min_fields'
}


/** response of any mutation on the table "user_stats" */
export interface user_stats_mutation_response {
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int']
    /** data from the rows affected by the mutation */
    returning: user_stats[]
    __typename: 'user_stats_mutation_response'
}


/** select columns of table "user_stats" */
export type user_stats_select_column = 'from' | 'prim_volume_nb' | 'prim_volume_nb7d' | 'prim_volume_nb24' | 'prim_volume_nb30d' | 'prim_volume_tz' | 'prim_volume_tz7d' | 'prim_volume_tz24' | 'prim_volume_tz30d' | 'sec_volume_nb' | 'sec_volume_nb7d' | 'sec_volume_nb24' | 'sec_volume_nb30d' | 'sec_volume_tz' | 'sec_volume_tz7d' | 'sec_volume_tz24' | 'sec_volume_tz30d' | 'to' | 'user_id'


/** aggregate stddev on columns */
export interface user_stats_stddev_fields {
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_nb24: (Scalars['Float'] | null)
    prim_volume_nb30d: (Scalars['Float'] | null)
    prim_volume_nb7d: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    prim_volume_tz24: (Scalars['Float'] | null)
    prim_volume_tz30d: (Scalars['Float'] | null)
    prim_volume_tz7d: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'user_stats_stddev_fields'
}


/** aggregate stddev_pop on columns */
export interface user_stats_stddev_pop_fields {
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_nb24: (Scalars['Float'] | null)
    prim_volume_nb30d: (Scalars['Float'] | null)
    prim_volume_nb7d: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    prim_volume_tz24: (Scalars['Float'] | null)
    prim_volume_tz30d: (Scalars['Float'] | null)
    prim_volume_tz7d: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'user_stats_stddev_pop_fields'
}


/** aggregate stddev_samp on columns */
export interface user_stats_stddev_samp_fields {
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_nb24: (Scalars['Float'] | null)
    prim_volume_nb30d: (Scalars['Float'] | null)
    prim_volume_nb7d: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    prim_volume_tz24: (Scalars['Float'] | null)
    prim_volume_tz30d: (Scalars['Float'] | null)
    prim_volume_tz7d: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'user_stats_stddev_samp_fields'
}


/** aggregate sum on columns */
export interface user_stats_sum_fields {
    prim_volume_nb: (Scalars['bigint'] | null)
    prim_volume_nb24: (Scalars['bigint'] | null)
    prim_volume_nb30d: (Scalars['bigint'] | null)
    prim_volume_nb7d: (Scalars['bigint'] | null)
    prim_volume_tz: (Scalars['bigint'] | null)
    prim_volume_tz24: (Scalars['bigint'] | null)
    prim_volume_tz30d: (Scalars['bigint'] | null)
    prim_volume_tz7d: (Scalars['bigint'] | null)
    sec_volume_nb: (Scalars['bigint'] | null)
    sec_volume_nb24: (Scalars['bigint'] | null)
    sec_volume_nb30d: (Scalars['bigint'] | null)
    sec_volume_nb7d: (Scalars['bigint'] | null)
    sec_volume_tz: (Scalars['bigint'] | null)
    sec_volume_tz24: (Scalars['bigint'] | null)
    sec_volume_tz30d: (Scalars['bigint'] | null)
    sec_volume_tz7d: (Scalars['bigint'] | null)
    __typename: 'user_stats_sum_fields'
}


/** update columns of table "user_stats" */
export type user_stats_update_column = 'from' | 'prim_volume_nb' | 'prim_volume_nb7d' | 'prim_volume_nb24' | 'prim_volume_nb30d' | 'prim_volume_tz' | 'prim_volume_tz7d' | 'prim_volume_tz24' | 'prim_volume_tz30d' | 'sec_volume_nb' | 'sec_volume_nb7d' | 'sec_volume_nb24' | 'sec_volume_nb30d' | 'sec_volume_tz' | 'sec_volume_tz7d' | 'sec_volume_tz24' | 'sec_volume_tz30d' | 'to' | 'user_id'


/** aggregate var_pop on columns */
export interface user_stats_var_pop_fields {
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_nb24: (Scalars['Float'] | null)
    prim_volume_nb30d: (Scalars['Float'] | null)
    prim_volume_nb7d: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    prim_volume_tz24: (Scalars['Float'] | null)
    prim_volume_tz30d: (Scalars['Float'] | null)
    prim_volume_tz7d: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'user_stats_var_pop_fields'
}


/** aggregate var_samp on columns */
export interface user_stats_var_samp_fields {
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_nb24: (Scalars['Float'] | null)
    prim_volume_nb30d: (Scalars['Float'] | null)
    prim_volume_nb7d: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    prim_volume_tz24: (Scalars['Float'] | null)
    prim_volume_tz30d: (Scalars['Float'] | null)
    prim_volume_tz7d: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'user_stats_var_samp_fields'
}


/** aggregate variance on columns */
export interface user_stats_variance_fields {
    prim_volume_nb: (Scalars['Float'] | null)
    prim_volume_nb24: (Scalars['Float'] | null)
    prim_volume_nb30d: (Scalars['Float'] | null)
    prim_volume_nb7d: (Scalars['Float'] | null)
    prim_volume_tz: (Scalars['Float'] | null)
    prim_volume_tz24: (Scalars['Float'] | null)
    prim_volume_tz30d: (Scalars['Float'] | null)
    prim_volume_tz7d: (Scalars['Float'] | null)
    sec_volume_nb: (Scalars['Float'] | null)
    sec_volume_nb24: (Scalars['Float'] | null)
    sec_volume_nb30d: (Scalars['Float'] | null)
    sec_volume_nb7d: (Scalars['Float'] | null)
    sec_volume_tz: (Scalars['Float'] | null)
    sec_volume_tz24: (Scalars['Float'] | null)
    sec_volume_tz30d: (Scalars['Float'] | null)
    sec_volume_tz7d: (Scalars['Float'] | null)
    __typename: 'user_stats_variance_fields'
}


/** update columns of table "user" */
export type user_update_column = 'authorizations' | 'avatarMediaId' | 'avatar_uri' | 'created_at' | 'description' | 'flag' | 'id' | 'metadata' | 'metadata_uri' | 'moderation_reason_id' | 'name' | 'type' | 'updated_at'

export type Query = query_root
export type Mutation = mutation_root
export type Subscription = subscription_root


/** columns and relationships of "Account" */
export interface AccountGenqlSelection{
    /** An object relationship */
    Profile?: ProfileGenqlSelection
    /** An array relationship */
    Wallets?: (WalletGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Wallet_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Wallet_order_by[] | null), 
    /** filter the rows returned */
    where?: (Wallet_bool_exp | null)} })
    /** An aggregate relationship */
    Wallets_aggregate?: (Wallet_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Wallet_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Wallet_order_by[] | null), 
    /** filter the rows returned */
    where?: (Wallet_bool_exp | null)} })
    id?: boolean | number
    status?: boolean | number
    username?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to compare columns of type "AccountStatus". All fields are combined with logical 'AND'. */
export interface AccountStatus_comparison_exp {_eq?: (Scalars['AccountStatus'] | null),_gt?: (Scalars['AccountStatus'] | null),_gte?: (Scalars['AccountStatus'] | null),_in?: (Scalars['AccountStatus'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['AccountStatus'] | null),_lte?: (Scalars['AccountStatus'] | null),_neq?: (Scalars['AccountStatus'] | null),_nin?: (Scalars['AccountStatus'][] | null)}


/** aggregated selection of "Account" */
export interface Account_aggregateGenqlSelection{
    aggregate?: Account_aggregate_fieldsGenqlSelection
    nodes?: AccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "Account" */
export interface Account_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (Account_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: Account_max_fieldsGenqlSelection
    min?: Account_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "Account". All fields are combined with a logical 'AND'. */
export interface Account_bool_exp {Profile?: (Profile_bool_exp | null),Wallets?: (Wallet_bool_exp | null),Wallets_aggregate?: (Wallet_aggregate_bool_exp | null),_and?: (Account_bool_exp[] | null),_not?: (Account_bool_exp | null),_or?: (Account_bool_exp[] | null),id?: (uuid_comparison_exp | null),status?: (AccountStatus_comparison_exp | null),username?: (String_comparison_exp | null)}


/** input type for inserting data into table "Account" */
export interface Account_insert_input {Profile?: (Profile_obj_rel_insert_input | null),Wallets?: (Wallet_arr_rel_insert_input | null),id?: (Scalars['uuid'] | null),status?: (Scalars['AccountStatus'] | null),username?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface Account_max_fieldsGenqlSelection{
    id?: boolean | number
    status?: boolean | number
    username?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface Account_min_fieldsGenqlSelection{
    id?: boolean | number
    status?: boolean | number
    username?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "Account" */
export interface Account_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: AccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "Account" */
export interface Account_obj_rel_insert_input {data: Account_insert_input,
/** upsert condition */
on_conflict?: (Account_on_conflict | null)}


/** on_conflict condition type for table "Account" */
export interface Account_on_conflict {constraint: Account_constraint,update_columns?: Account_update_column[],where?: (Account_bool_exp | null)}


/** Ordering options when selecting data from "Account". */
export interface Account_order_by {Profile?: (Profile_order_by | null),Wallets_aggregate?: (Wallet_aggregate_order_by | null),id?: (order_by | null),status?: (order_by | null),username?: (order_by | null)}


/** primary key columns input for table: Account */
export interface Account_pk_columns_input {id: Scalars['uuid']}


/** input type for updating data in table "Account" */
export interface Account_set_input {id?: (Scalars['uuid'] | null),status?: (Scalars['AccountStatus'] | null),username?: (Scalars['String'] | null)}


/** Streaming cursor of the table "Account" */
export interface Account_stream_cursor_input {
/** Stream column input with initial value */
initial_value: Account_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface Account_stream_cursor_value_input {id?: (Scalars['uuid'] | null),status?: (Scalars['AccountStatus'] | null),username?: (Scalars['String'] | null)}

export interface Account_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (Account_set_input | null),
/** filter the rows which have to be updated */
where: Account_bool_exp}


/** Boolean expression to compare columns of type "BlockchainNetwork". All fields are combined with logical 'AND'. */
export interface BlockchainNetwork_comparison_exp {_eq?: (Scalars['BlockchainNetwork'] | null),_gt?: (Scalars['BlockchainNetwork'] | null),_gte?: (Scalars['BlockchainNetwork'] | null),_in?: (Scalars['BlockchainNetwork'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['BlockchainNetwork'] | null),_lte?: (Scalars['BlockchainNetwork'] | null),_neq?: (Scalars['BlockchainNetwork'] | null),_nin?: (Scalars['BlockchainNetwork'][] | null)}


/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export interface Boolean_comparison_exp {_eq?: (Scalars['Boolean'] | null),_gt?: (Scalars['Boolean'] | null),_gte?: (Scalars['Boolean'] | null),_in?: (Scalars['Boolean'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['Boolean'] | null),_lte?: (Scalars['Boolean'] | null),_neq?: (Scalars['Boolean'] | null),_nin?: (Scalars['Boolean'][] | null)}


/** Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'. */
export interface Float_comparison_exp {_eq?: (Scalars['Float'] | null),_gt?: (Scalars['Float'] | null),_gte?: (Scalars['Float'] | null),_in?: (Scalars['Float'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['Float'] | null),_lte?: (Scalars['Float'] | null),_neq?: (Scalars['Float'] | null),_nin?: (Scalars['Float'][] | null)}


/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export interface Int_comparison_exp {_eq?: (Scalars['Int'] | null),_gt?: (Scalars['Int'] | null),_gte?: (Scalars['Int'] | null),_in?: (Scalars['Int'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['Int'] | null),_lte?: (Scalars['Int'] | null),_neq?: (Scalars['Int'] | null),_nin?: (Scalars['Int'][] | null)}


/** columns and relationships of "Profile" */
export interface ProfileGenqlSelection{
    /** An object relationship */
    Account?: AccountGenqlSelection
    accountId?: boolean | number
    description?: boolean | number
    instagram?: boolean | number
    picture?: boolean | number
    twitter?: boolean | number
    website?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "Profile" */
export interface Profile_aggregateGenqlSelection{
    aggregate?: Profile_aggregate_fieldsGenqlSelection
    nodes?: ProfileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "Profile" */
export interface Profile_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (Profile_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: Profile_max_fieldsGenqlSelection
    min?: Profile_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "Profile". All fields are combined with a logical 'AND'. */
export interface Profile_bool_exp {Account?: (Account_bool_exp | null),_and?: (Profile_bool_exp[] | null),_not?: (Profile_bool_exp | null),_or?: (Profile_bool_exp[] | null),accountId?: (uuid_comparison_exp | null),description?: (String_comparison_exp | null),instagram?: (String_comparison_exp | null),picture?: (String_comparison_exp | null),twitter?: (String_comparison_exp | null),website?: (String_comparison_exp | null)}


/** input type for inserting data into table "Profile" */
export interface Profile_insert_input {Account?: (Account_obj_rel_insert_input | null),accountId?: (Scalars['uuid'] | null),description?: (Scalars['String'] | null),instagram?: (Scalars['String'] | null),picture?: (Scalars['String'] | null),twitter?: (Scalars['String'] | null),website?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface Profile_max_fieldsGenqlSelection{
    accountId?: boolean | number
    description?: boolean | number
    instagram?: boolean | number
    picture?: boolean | number
    twitter?: boolean | number
    website?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface Profile_min_fieldsGenqlSelection{
    accountId?: boolean | number
    description?: boolean | number
    instagram?: boolean | number
    picture?: boolean | number
    twitter?: boolean | number
    website?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "Profile" */
export interface Profile_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: ProfileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "Profile" */
export interface Profile_obj_rel_insert_input {data: Profile_insert_input,
/** upsert condition */
on_conflict?: (Profile_on_conflict | null)}


/** on_conflict condition type for table "Profile" */
export interface Profile_on_conflict {constraint: Profile_constraint,update_columns?: Profile_update_column[],where?: (Profile_bool_exp | null)}


/** Ordering options when selecting data from "Profile". */
export interface Profile_order_by {Account?: (Account_order_by | null),accountId?: (order_by | null),description?: (order_by | null),instagram?: (order_by | null),picture?: (order_by | null),twitter?: (order_by | null),website?: (order_by | null)}


/** primary key columns input for table: Profile */
export interface Profile_pk_columns_input {accountId: Scalars['uuid']}


/** input type for updating data in table "Profile" */
export interface Profile_set_input {accountId?: (Scalars['uuid'] | null),description?: (Scalars['String'] | null),instagram?: (Scalars['String'] | null),picture?: (Scalars['String'] | null),twitter?: (Scalars['String'] | null),website?: (Scalars['String'] | null)}


/** Streaming cursor of the table "Profile" */
export interface Profile_stream_cursor_input {
/** Stream column input with initial value */
initial_value: Profile_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface Profile_stream_cursor_value_input {accountId?: (Scalars['uuid'] | null),description?: (Scalars['String'] | null),instagram?: (Scalars['String'] | null),picture?: (Scalars['String'] | null),twitter?: (Scalars['String'] | null),website?: (Scalars['String'] | null)}

export interface Profile_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (Profile_set_input | null),
/** filter the rows which have to be updated */
where: Profile_bool_exp}

export interface SetWhitelistOutputGenqlSelection{
    merkleRoot?: boolean | number
    message?: boolean | number
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export interface String_comparison_exp {_eq?: (Scalars['String'] | null),_gt?: (Scalars['String'] | null),_gte?: (Scalars['String'] | null),
/** does the column match the given case-insensitive pattern */
_ilike?: (Scalars['String'] | null),_in?: (Scalars['String'][] | null),
/** does the column match the given POSIX regular expression, case insensitive */
_iregex?: (Scalars['String'] | null),_is_null?: (Scalars['Boolean'] | null),
/** does the column match the given pattern */
_like?: (Scalars['String'] | null),_lt?: (Scalars['String'] | null),_lte?: (Scalars['String'] | null),_neq?: (Scalars['String'] | null),
/** does the column NOT match the given case-insensitive pattern */
_nilike?: (Scalars['String'] | null),_nin?: (Scalars['String'][] | null),
/** does the column NOT match the given POSIX regular expression, case insensitive */
_niregex?: (Scalars['String'] | null),
/** does the column NOT match the given pattern */
_nlike?: (Scalars['String'] | null),
/** does the column NOT match the given POSIX regular expression, case sensitive */
_nregex?: (Scalars['String'] | null),
/** does the column NOT match the given SQL regular expression */
_nsimilar?: (Scalars['String'] | null),
/** does the column match the given POSIX regular expression, case sensitive */
_regex?: (Scalars['String'] | null),
/** does the column match the given SQL regular expression */
_similar?: (Scalars['String'] | null)}


/** columns and relationships of "Wallet" */
export interface WalletGenqlSelection{
    /** An object relationship */
    Account?: AccountGenqlSelection
    accountId?: boolean | number
    address?: boolean | number
    network?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "Wallet" */
export interface Wallet_aggregateGenqlSelection{
    aggregate?: Wallet_aggregate_fieldsGenqlSelection
    nodes?: WalletGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface Wallet_aggregate_bool_exp {count?: (Wallet_aggregate_bool_exp_count | null)}

export interface Wallet_aggregate_bool_exp_count {arguments?: (Wallet_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (Wallet_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "Wallet" */
export interface Wallet_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (Wallet_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: Wallet_max_fieldsGenqlSelection
    min?: Wallet_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "Wallet" */
export interface Wallet_aggregate_order_by {count?: (order_by | null),max?: (Wallet_max_order_by | null),min?: (Wallet_min_order_by | null)}


/** input type for inserting array relation for remote table "Wallet" */
export interface Wallet_arr_rel_insert_input {data: Wallet_insert_input[],
/** upsert condition */
on_conflict?: (Wallet_on_conflict | null)}


/** Boolean expression to filter rows from the table "Wallet". All fields are combined with a logical 'AND'. */
export interface Wallet_bool_exp {Account?: (Account_bool_exp | null),_and?: (Wallet_bool_exp[] | null),_not?: (Wallet_bool_exp | null),_or?: (Wallet_bool_exp[] | null),accountId?: (uuid_comparison_exp | null),address?: (String_comparison_exp | null),network?: (BlockchainNetwork_comparison_exp | null)}


/** input type for inserting data into table "Wallet" */
export interface Wallet_insert_input {Account?: (Account_obj_rel_insert_input | null),accountId?: (Scalars['uuid'] | null),address?: (Scalars['String'] | null),network?: (Scalars['BlockchainNetwork'] | null)}


/** aggregate max on columns */
export interface Wallet_max_fieldsGenqlSelection{
    accountId?: boolean | number
    address?: boolean | number
    network?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "Wallet" */
export interface Wallet_max_order_by {accountId?: (order_by | null),address?: (order_by | null),network?: (order_by | null)}


/** aggregate min on columns */
export interface Wallet_min_fieldsGenqlSelection{
    accountId?: boolean | number
    address?: boolean | number
    network?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "Wallet" */
export interface Wallet_min_order_by {accountId?: (order_by | null),address?: (order_by | null),network?: (order_by | null)}


/** response of any mutation on the table "Wallet" */
export interface Wallet_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: WalletGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "Wallet" */
export interface Wallet_on_conflict {constraint: Wallet_constraint,update_columns?: Wallet_update_column[],where?: (Wallet_bool_exp | null)}


/** Ordering options when selecting data from "Wallet". */
export interface Wallet_order_by {Account?: (Account_order_by | null),accountId?: (order_by | null),address?: (order_by | null),network?: (order_by | null)}


/** primary key columns input for table: Wallet */
export interface Wallet_pk_columns_input {address: Scalars['String']}


/** input type for updating data in table "Wallet" */
export interface Wallet_set_input {accountId?: (Scalars['uuid'] | null),address?: (Scalars['String'] | null),network?: (Scalars['BlockchainNetwork'] | null)}


/** Streaming cursor of the table "Wallet" */
export interface Wallet_stream_cursor_input {
/** Stream column input with initial value */
initial_value: Wallet_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface Wallet_stream_cursor_value_input {accountId?: (Scalars['uuid'] | null),address?: (Scalars['String'] | null),network?: (Scalars['BlockchainNetwork'] | null)}

export interface Wallet_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (Wallet_set_input | null),
/** filter the rows which have to be updated */
where: Wallet_bool_exp}


/** columns and relationships of "Whitelist" */
export interface WhitelistGenqlSelection{
    /** An array relationship */
    Whitelist_WhitelistEntries?: (WhitelistEntriesGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (WhitelistEntries_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (WhitelistEntries_order_by[] | null), 
    /** filter the rows returned */
    where?: (WhitelistEntries_bool_exp | null)} })
    /** An aggregate relationship */
    Whitelist_WhitelistEntries_aggregate?: (WhitelistEntries_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (WhitelistEntries_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (WhitelistEntries_order_by[] | null), 
    /** filter the rows returned */
    where?: (WhitelistEntries_bool_exp | null)} })
    merkleRoot?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "WhitelistEntries" */
export interface WhitelistEntriesGenqlSelection{
    /** An object relationship */
    WhitelistEntries_Whitelist?: WhitelistGenqlSelection
    merkleRoot?: boolean | number
    walletAddress?: boolean | number
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "WhitelistEntries" */
export interface WhitelistEntries_aggregateGenqlSelection{
    aggregate?: WhitelistEntries_aggregate_fieldsGenqlSelection
    nodes?: WhitelistEntriesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WhitelistEntries_aggregate_bool_exp {count?: (WhitelistEntries_aggregate_bool_exp_count | null)}

export interface WhitelistEntries_aggregate_bool_exp_count {arguments?: (WhitelistEntries_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (WhitelistEntries_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "WhitelistEntries" */
export interface WhitelistEntries_aggregate_fieldsGenqlSelection{
    avg?: WhitelistEntries_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (WhitelistEntries_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: WhitelistEntries_max_fieldsGenqlSelection
    min?: WhitelistEntries_min_fieldsGenqlSelection
    stddev?: WhitelistEntries_stddev_fieldsGenqlSelection
    stddev_pop?: WhitelistEntries_stddev_pop_fieldsGenqlSelection
    stddev_samp?: WhitelistEntries_stddev_samp_fieldsGenqlSelection
    sum?: WhitelistEntries_sum_fieldsGenqlSelection
    var_pop?: WhitelistEntries_var_pop_fieldsGenqlSelection
    var_samp?: WhitelistEntries_var_samp_fieldsGenqlSelection
    variance?: WhitelistEntries_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "WhitelistEntries" */
export interface WhitelistEntries_aggregate_order_by {avg?: (WhitelistEntries_avg_order_by | null),count?: (order_by | null),max?: (WhitelistEntries_max_order_by | null),min?: (WhitelistEntries_min_order_by | null),stddev?: (WhitelistEntries_stddev_order_by | null),stddev_pop?: (WhitelistEntries_stddev_pop_order_by | null),stddev_samp?: (WhitelistEntries_stddev_samp_order_by | null),sum?: (WhitelistEntries_sum_order_by | null),var_pop?: (WhitelistEntries_var_pop_order_by | null),var_samp?: (WhitelistEntries_var_samp_order_by | null),variance?: (WhitelistEntries_variance_order_by | null)}


/** input type for inserting array relation for remote table "WhitelistEntries" */
export interface WhitelistEntries_arr_rel_insert_input {data: WhitelistEntries_insert_input[],
/** upsert condition */
on_conflict?: (WhitelistEntries_on_conflict | null)}


/** aggregate avg on columns */
export interface WhitelistEntries_avg_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_avg_order_by {whitelistIndex?: (order_by | null)}


/** Boolean expression to filter rows from the table "WhitelistEntries". All fields are combined with a logical 'AND'. */
export interface WhitelistEntries_bool_exp {WhitelistEntries_Whitelist?: (Whitelist_bool_exp | null),_and?: (WhitelistEntries_bool_exp[] | null),_not?: (WhitelistEntries_bool_exp | null),_or?: (WhitelistEntries_bool_exp[] | null),merkleRoot?: (String_comparison_exp | null),walletAddress?: (String_comparison_exp | null),whitelistIndex?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "WhitelistEntries" */
export interface WhitelistEntries_inc_input {whitelistIndex?: (Scalars['Int'] | null)}


/** input type for inserting data into table "WhitelistEntries" */
export interface WhitelistEntries_insert_input {WhitelistEntries_Whitelist?: (Whitelist_obj_rel_insert_input | null),merkleRoot?: (Scalars['String'] | null),walletAddress?: (Scalars['String'] | null),whitelistIndex?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface WhitelistEntries_max_fieldsGenqlSelection{
    merkleRoot?: boolean | number
    walletAddress?: boolean | number
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_max_order_by {merkleRoot?: (order_by | null),walletAddress?: (order_by | null),whitelistIndex?: (order_by | null)}


/** aggregate min on columns */
export interface WhitelistEntries_min_fieldsGenqlSelection{
    merkleRoot?: boolean | number
    walletAddress?: boolean | number
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_min_order_by {merkleRoot?: (order_by | null),walletAddress?: (order_by | null),whitelistIndex?: (order_by | null)}


/** response of any mutation on the table "WhitelistEntries" */
export interface WhitelistEntries_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: WhitelistEntriesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "WhitelistEntries" */
export interface WhitelistEntries_on_conflict {constraint: WhitelistEntries_constraint,update_columns?: WhitelistEntries_update_column[],where?: (WhitelistEntries_bool_exp | null)}


/** Ordering options when selecting data from "WhitelistEntries". */
export interface WhitelistEntries_order_by {WhitelistEntries_Whitelist?: (Whitelist_order_by | null),merkleRoot?: (order_by | null),walletAddress?: (order_by | null),whitelistIndex?: (order_by | null)}


/** primary key columns input for table: WhitelistEntries */
export interface WhitelistEntries_pk_columns_input {merkleRoot: Scalars['String'],whitelistIndex: Scalars['Int']}


/** input type for updating data in table "WhitelistEntries" */
export interface WhitelistEntries_set_input {merkleRoot?: (Scalars['String'] | null),walletAddress?: (Scalars['String'] | null),whitelistIndex?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface WhitelistEntries_stddev_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_stddev_order_by {whitelistIndex?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface WhitelistEntries_stddev_pop_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_stddev_pop_order_by {whitelistIndex?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface WhitelistEntries_stddev_samp_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_stddev_samp_order_by {whitelistIndex?: (order_by | null)}


/** Streaming cursor of the table "WhitelistEntries" */
export interface WhitelistEntries_stream_cursor_input {
/** Stream column input with initial value */
initial_value: WhitelistEntries_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface WhitelistEntries_stream_cursor_value_input {merkleRoot?: (Scalars['String'] | null),walletAddress?: (Scalars['String'] | null),whitelistIndex?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface WhitelistEntries_sum_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_sum_order_by {whitelistIndex?: (order_by | null)}

export interface WhitelistEntries_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (WhitelistEntries_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (WhitelistEntries_set_input | null),
/** filter the rows which have to be updated */
where: WhitelistEntries_bool_exp}


/** aggregate var_pop on columns */
export interface WhitelistEntries_var_pop_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_var_pop_order_by {whitelistIndex?: (order_by | null)}


/** aggregate var_samp on columns */
export interface WhitelistEntries_var_samp_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_var_samp_order_by {whitelistIndex?: (order_by | null)}


/** aggregate variance on columns */
export interface WhitelistEntries_variance_fieldsGenqlSelection{
    whitelistIndex?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "WhitelistEntries" */
export interface WhitelistEntries_variance_order_by {whitelistIndex?: (order_by | null)}


/** aggregated selection of "Whitelist" */
export interface Whitelist_aggregateGenqlSelection{
    aggregate?: Whitelist_aggregate_fieldsGenqlSelection
    nodes?: WhitelistGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "Whitelist" */
export interface Whitelist_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (Whitelist_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: Whitelist_max_fieldsGenqlSelection
    min?: Whitelist_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "Whitelist". All fields are combined with a logical 'AND'. */
export interface Whitelist_bool_exp {Whitelist_WhitelistEntries?: (WhitelistEntries_bool_exp | null),Whitelist_WhitelistEntries_aggregate?: (WhitelistEntries_aggregate_bool_exp | null),_and?: (Whitelist_bool_exp[] | null),_not?: (Whitelist_bool_exp | null),_or?: (Whitelist_bool_exp[] | null),merkleRoot?: (String_comparison_exp | null)}


/** input type for inserting data into table "Whitelist" */
export interface Whitelist_insert_input {Whitelist_WhitelistEntries?: (WhitelistEntries_arr_rel_insert_input | null),merkleRoot?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface Whitelist_max_fieldsGenqlSelection{
    merkleRoot?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface Whitelist_min_fieldsGenqlSelection{
    merkleRoot?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "Whitelist" */
export interface Whitelist_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: WhitelistGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "Whitelist" */
export interface Whitelist_obj_rel_insert_input {data: Whitelist_insert_input,
/** upsert condition */
on_conflict?: (Whitelist_on_conflict | null)}


/** on_conflict condition type for table "Whitelist" */
export interface Whitelist_on_conflict {constraint: Whitelist_constraint,update_columns?: Whitelist_update_column[],where?: (Whitelist_bool_exp | null)}


/** Ordering options when selecting data from "Whitelist". */
export interface Whitelist_order_by {Whitelist_WhitelistEntries_aggregate?: (WhitelistEntries_aggregate_order_by | null),merkleRoot?: (order_by | null)}


/** primary key columns input for table: Whitelist */
export interface Whitelist_pk_columns_input {merkleRoot: Scalars['String']}


/** input type for updating data in table "Whitelist" */
export interface Whitelist_set_input {merkleRoot?: (Scalars['String'] | null)}


/** Streaming cursor of the table "Whitelist" */
export interface Whitelist_stream_cursor_input {
/** Stream column input with initial value */
initial_value: Whitelist_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface Whitelist_stream_cursor_value_input {merkleRoot?: (Scalars['String'] | null)}

export interface Whitelist_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (Whitelist_set_input | null),
/** filter the rows which have to be updated */
where: Whitelist_bool_exp}


/** Boolean expression to compare columns of type "_int2". All fields are combined with logical 'AND'. */
export interface _int2_comparison_exp {_eq?: (Scalars['_int2'] | null),_gt?: (Scalars['_int2'] | null),_gte?: (Scalars['_int2'] | null),_in?: (Scalars['_int2'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['_int2'] | null),_lte?: (Scalars['_int2'] | null),_neq?: (Scalars['_int2'] | null),_nin?: (Scalars['_int2'][] | null)}


/** Boolean expression to compare columns of type "_int4". All fields are combined with logical 'AND'. */
export interface _int4_comparison_exp {_eq?: (Scalars['_int4'] | null),_gt?: (Scalars['_int4'] | null),_gte?: (Scalars['_int4'] | null),_in?: (Scalars['_int4'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['_int4'] | null),_lte?: (Scalars['_int4'] | null),_neq?: (Scalars['_int4'] | null),_nin?: (Scalars['_int4'][] | null)}


/** Boolean expression to compare columns of type "_int8". All fields are combined with logical 'AND'. */
export interface _int8_comparison_exp {_eq?: (Scalars['_int8'] | null),_gt?: (Scalars['_int8'] | null),_gte?: (Scalars['_int8'] | null),_in?: (Scalars['_int8'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['_int8'] | null),_lte?: (Scalars['_int8'] | null),_neq?: (Scalars['_int8'] | null),_nin?: (Scalars['_int8'][] | null)}


/** Boolean expression to compare columns of type "_text". All fields are combined with logical 'AND'. */
export interface _text_comparison_exp {_eq?: (Scalars['_text'] | null),_gt?: (Scalars['_text'] | null),_gte?: (Scalars['_text'] | null),_in?: (Scalars['_text'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['_text'] | null),_lte?: (Scalars['_text'] | null),_neq?: (Scalars['_text'] | null),_nin?: (Scalars['_text'][] | null)}


/** columns and relationships of "action" */
export interface actionGenqlSelection{
    /** An object relationship */
    article?: articleGenqlSelection
    article_id?: boolean | number
    created_at?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    issuer_id?: boolean | number
    metadata?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    numeric_value?: boolean | number
    /** An object relationship */
    objkt?: objktGenqlSelection
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    op_hash?: boolean | number
    /** An object relationship */
    redeemable?: redeemableGenqlSelection
    redeemable_address?: boolean | number
    target_id?: boolean | number
    ticket_id?: boolean | number
    token_id?: boolean | number
    type?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    /** An object relationship */
    userByIssuerId?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "action" */
export interface action_aggregateGenqlSelection{
    aggregate?: action_aggregate_fieldsGenqlSelection
    nodes?: actionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface action_aggregate_bool_exp {count?: (action_aggregate_bool_exp_count | null)}

export interface action_aggregate_bool_exp_count {arguments?: (action_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (action_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "action" */
export interface action_aggregate_fieldsGenqlSelection{
    avg?: action_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (action_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: action_max_fieldsGenqlSelection
    min?: action_min_fieldsGenqlSelection
    stddev?: action_stddev_fieldsGenqlSelection
    stddev_pop?: action_stddev_pop_fieldsGenqlSelection
    stddev_samp?: action_stddev_samp_fieldsGenqlSelection
    sum?: action_sum_fieldsGenqlSelection
    var_pop?: action_var_pop_fieldsGenqlSelection
    var_samp?: action_var_samp_fieldsGenqlSelection
    variance?: action_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "action" */
export interface action_aggregate_order_by {avg?: (action_avg_order_by | null),count?: (order_by | null),max?: (action_max_order_by | null),min?: (action_min_order_by | null),stddev?: (action_stddev_order_by | null),stddev_pop?: (action_stddev_pop_order_by | null),stddev_samp?: (action_stddev_samp_order_by | null),sum?: (action_sum_order_by | null),var_pop?: (action_var_pop_order_by | null),var_samp?: (action_var_samp_order_by | null),variance?: (action_variance_order_by | null)}


/** append existing jsonb value of filtered columns with new jsonb value */
export interface action_append_input {metadata?: (Scalars['jsonb'] | null)}


/** input type for inserting array relation for remote table "action" */
export interface action_arr_rel_insert_input {data: action_insert_input[],
/** upsert condition */
on_conflict?: (action_on_conflict | null)}


/** aggregate avg on columns */
export interface action_avg_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "action" */
export interface action_avg_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** Boolean expression to filter rows from the table "action". All fields are combined with a logical 'AND'. */
export interface action_bool_exp {_and?: (action_bool_exp[] | null),_not?: (action_bool_exp | null),_or?: (action_bool_exp[] | null),article?: (article_bool_exp | null),article_id?: (Int_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),id?: (uuid_comparison_exp | null),issuer_id?: (String_comparison_exp | null),metadata?: (jsonb_comparison_exp | null),numeric_value?: (numeric_comparison_exp | null),objkt?: (objkt_bool_exp | null),objkt_id?: (String_comparison_exp | null),objkt_issuer_version?: (generative_token_version_comparison_exp | null),op_hash?: (String_comparison_exp | null),redeemable?: (redeemable_bool_exp | null),redeemable_address?: (String_comparison_exp | null),target_id?: (String_comparison_exp | null),ticket_id?: (String_comparison_exp | null),token_id?: (String_comparison_exp | null),type?: (action_type_enum_comparison_exp | null),user?: (user_bool_exp | null),userByIssuerId?: (user_bool_exp | null)}


/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export interface action_delete_at_path_input {metadata?: (Scalars['String'][] | null)}


/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export interface action_delete_elem_input {metadata?: (Scalars['Int'] | null)}


/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export interface action_delete_key_input {metadata?: (Scalars['String'] | null)}


/** input type for incrementing numeric columns in table "action" */
export interface action_inc_input {article_id?: (Scalars['Int'] | null),numeric_value?: (Scalars['numeric'] | null)}


/** input type for inserting data into table "action" */
export interface action_insert_input {article?: (article_obj_rel_insert_input | null),article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['uuid'] | null),issuer_id?: (Scalars['String'] | null),metadata?: (Scalars['jsonb'] | null),numeric_value?: (Scalars['numeric'] | null),objkt?: (objkt_obj_rel_insert_input | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),op_hash?: (Scalars['String'] | null),redeemable?: (redeemable_obj_rel_insert_input | null),redeemable_address?: (Scalars['String'] | null),target_id?: (Scalars['String'] | null),ticket_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),type?: (Scalars['action_type_enum'] | null),user?: (user_obj_rel_insert_input | null),userByIssuerId?: (user_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface action_max_fieldsGenqlSelection{
    article_id?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    issuer_id?: boolean | number
    numeric_value?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    op_hash?: boolean | number
    redeemable_address?: boolean | number
    target_id?: boolean | number
    ticket_id?: boolean | number
    token_id?: boolean | number
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "action" */
export interface action_max_order_by {article_id?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),issuer_id?: (order_by | null),numeric_value?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),op_hash?: (order_by | null),redeemable_address?: (order_by | null),target_id?: (order_by | null),ticket_id?: (order_by | null),token_id?: (order_by | null),type?: (order_by | null)}


/** aggregate min on columns */
export interface action_min_fieldsGenqlSelection{
    article_id?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    issuer_id?: boolean | number
    numeric_value?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    op_hash?: boolean | number
    redeemable_address?: boolean | number
    target_id?: boolean | number
    ticket_id?: boolean | number
    token_id?: boolean | number
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "action" */
export interface action_min_order_by {article_id?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),issuer_id?: (order_by | null),numeric_value?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),op_hash?: (order_by | null),redeemable_address?: (order_by | null),target_id?: (order_by | null),ticket_id?: (order_by | null),token_id?: (order_by | null),type?: (order_by | null)}


/** response of any mutation on the table "action" */
export interface action_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: actionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "action" */
export interface action_on_conflict {constraint: action_constraint,update_columns?: action_update_column[],where?: (action_bool_exp | null)}


/** Ordering options when selecting data from "action". */
export interface action_order_by {article?: (article_order_by | null),article_id?: (order_by | null),created_at?: (order_by | null),generative_token?: (generative_token_order_by | null),id?: (order_by | null),issuer_id?: (order_by | null),metadata?: (order_by | null),numeric_value?: (order_by | null),objkt?: (objkt_order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),op_hash?: (order_by | null),redeemable?: (redeemable_order_by | null),redeemable_address?: (order_by | null),target_id?: (order_by | null),ticket_id?: (order_by | null),token_id?: (order_by | null),type?: (order_by | null),user?: (user_order_by | null),userByIssuerId?: (user_order_by | null)}


/** primary key columns input for table: action */
export interface action_pk_columns_input {id: Scalars['uuid']}


/** prepend existing jsonb value of filtered columns with new jsonb value */
export interface action_prepend_input {metadata?: (Scalars['jsonb'] | null)}


/** input type for updating data in table "action" */
export interface action_set_input {article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),issuer_id?: (Scalars['String'] | null),metadata?: (Scalars['jsonb'] | null),numeric_value?: (Scalars['numeric'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),op_hash?: (Scalars['String'] | null),redeemable_address?: (Scalars['String'] | null),target_id?: (Scalars['String'] | null),ticket_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),type?: (Scalars['action_type_enum'] | null)}


/** aggregate stddev on columns */
export interface action_stddev_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "action" */
export interface action_stddev_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface action_stddev_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "action" */
export interface action_stddev_pop_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface action_stddev_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "action" */
export interface action_stddev_samp_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** Streaming cursor of the table "action" */
export interface action_stream_cursor_input {
/** Stream column input with initial value */
initial_value: action_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface action_stream_cursor_value_input {article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),issuer_id?: (Scalars['String'] | null),metadata?: (Scalars['jsonb'] | null),numeric_value?: (Scalars['numeric'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),op_hash?: (Scalars['String'] | null),redeemable_address?: (Scalars['String'] | null),target_id?: (Scalars['String'] | null),ticket_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),type?: (Scalars['action_type_enum'] | null)}


/** aggregate sum on columns */
export interface action_sum_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "action" */
export interface action_sum_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** Boolean expression to compare columns of type "action_type_enum". All fields are combined with logical 'AND'. */
export interface action_type_enum_comparison_exp {_eq?: (Scalars['action_type_enum'] | null),_gt?: (Scalars['action_type_enum'] | null),_gte?: (Scalars['action_type_enum'] | null),_in?: (Scalars['action_type_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['action_type_enum'] | null),_lte?: (Scalars['action_type_enum'] | null),_neq?: (Scalars['action_type_enum'] | null),_nin?: (Scalars['action_type_enum'][] | null)}

export interface action_updates {
/** append existing jsonb value of filtered columns with new jsonb value */
_append?: (action_append_input | null),
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
_delete_at_path?: (action_delete_at_path_input | null),
/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
_delete_elem?: (action_delete_elem_input | null),
/** delete key/value pair or string element. key/value pairs are matched based on their key value */
_delete_key?: (action_delete_key_input | null),
/** increments the numeric columns with given value of the filtered values */
_inc?: (action_inc_input | null),
/** prepend existing jsonb value of filtered columns with new jsonb value */
_prepend?: (action_prepend_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (action_set_input | null),
/** filter the rows which have to be updated */
where: action_bool_exp}


/** aggregate var_pop on columns */
export interface action_var_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "action" */
export interface action_var_pop_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** aggregate var_samp on columns */
export interface action_var_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "action" */
export interface action_var_samp_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** aggregate variance on columns */
export interface action_variance_fieldsGenqlSelection{
    article_id?: boolean | number
    numeric_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "action" */
export interface action_variance_order_by {article_id?: (order_by | null),numeric_value?: (order_by | null)}


/** columns and relationships of "article" */
export interface articleGenqlSelection{
    /** An array relationship */
    actions?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An aggregate relationship */
    actions_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An array relationship */
    article_ledgers?: (article_ledgerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** An aggregate relationship */
    article_ledgers_aggregate?: (article_ledger_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** An array relationship */
    article_revisions?: (article_revisionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_revision_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_revision_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_revision_bool_exp | null)} })
    /** An aggregate relationship */
    article_revisions_aggregate?: (article_revision_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_revision_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_revision_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_revision_bool_exp | null)} })
    artifact_uri?: boolean | number
    author_id?: boolean | number
    body?: boolean | number
    created_at?: boolean | number
    description?: boolean | number
    display_uri?: boolean | number
    editions?: boolean | number
    flag?: boolean | number
    id?: boolean | number
    language?: boolean | number
    /** An array relationship */
    listings?: (listingGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An aggregate relationship */
    listings_aggregate?: (listing_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An object relationship */
    media_image?: media_imageGenqlSelection
    metadata?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    metadata_locked?: boolean | number
    metadata_uri?: boolean | number
    mint_op_hash?: boolean | number
    /** An object relationship */
    moderation_reason?: moderation_reasonGenqlSelection
    moderation_reason_id?: boolean | number
    platforms?: boolean | number
    royalties?: boolean | number
    slug?: boolean | number
    /** An array relationship */
    splits?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** An aggregate relationship */
    splits_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    tags?: boolean | number
    thumbnailMediaId?: boolean | number
    thumbnail_caption?: boolean | number
    thumbnail_uri?: boolean | number
    title?: boolean | number
    /** An array relationship */
    transactions?: (transactionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** An aggregate relationship */
    transactions_aggregate?: (transaction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** An object relationship */
    user?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "article" */
export interface article_aggregateGenqlSelection{
    aggregate?: article_aggregate_fieldsGenqlSelection
    nodes?: articleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface article_aggregate_bool_exp {bool_and?: (article_aggregate_bool_exp_bool_and | null),bool_or?: (article_aggregate_bool_exp_bool_or | null),count?: (article_aggregate_bool_exp_count | null)}

export interface article_aggregate_bool_exp_bool_and {arguments: article_select_column_article_aggregate_bool_exp_bool_and_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (article_bool_exp | null),predicate: Boolean_comparison_exp}

export interface article_aggregate_bool_exp_bool_or {arguments: article_select_column_article_aggregate_bool_exp_bool_or_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (article_bool_exp | null),predicate: Boolean_comparison_exp}

export interface article_aggregate_bool_exp_count {arguments?: (article_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (article_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "article" */
export interface article_aggregate_fieldsGenqlSelection{
    avg?: article_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (article_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: article_max_fieldsGenqlSelection
    min?: article_min_fieldsGenqlSelection
    stddev?: article_stddev_fieldsGenqlSelection
    stddev_pop?: article_stddev_pop_fieldsGenqlSelection
    stddev_samp?: article_stddev_samp_fieldsGenqlSelection
    sum?: article_sum_fieldsGenqlSelection
    var_pop?: article_var_pop_fieldsGenqlSelection
    var_samp?: article_var_samp_fieldsGenqlSelection
    variance?: article_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "article" */
export interface article_aggregate_order_by {avg?: (article_avg_order_by | null),count?: (order_by | null),max?: (article_max_order_by | null),min?: (article_min_order_by | null),stddev?: (article_stddev_order_by | null),stddev_pop?: (article_stddev_pop_order_by | null),stddev_samp?: (article_stddev_samp_order_by | null),sum?: (article_sum_order_by | null),var_pop?: (article_var_pop_order_by | null),var_samp?: (article_var_samp_order_by | null),variance?: (article_variance_order_by | null)}


/** input type for inserting array relation for remote table "article" */
export interface article_arr_rel_insert_input {data: article_insert_input[],
/** upsert condition */
on_conflict?: (article_on_conflict | null)}


/** aggregate avg on columns */
export interface article_avg_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "article" */
export interface article_avg_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}


/** Boolean expression to filter rows from the table "article". All fields are combined with a logical 'AND'. */
export interface article_bool_exp {_and?: (article_bool_exp[] | null),_not?: (article_bool_exp | null),_or?: (article_bool_exp[] | null),actions?: (action_bool_exp | null),actions_aggregate?: (action_aggregate_bool_exp | null),article_ledgers?: (article_ledger_bool_exp | null),article_ledgers_aggregate?: (article_ledger_aggregate_bool_exp | null),article_revisions?: (article_revision_bool_exp | null),article_revisions_aggregate?: (article_revision_aggregate_bool_exp | null),artifact_uri?: (String_comparison_exp | null),author_id?: (String_comparison_exp | null),body?: (String_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),description?: (String_comparison_exp | null),display_uri?: (String_comparison_exp | null),editions?: (bigint_comparison_exp | null),flag?: (article_flag_enum_comparison_exp | null),id?: (Int_comparison_exp | null),language?: (String_comparison_exp | null),listings?: (listing_bool_exp | null),listings_aggregate?: (listing_aggregate_bool_exp | null),media_image?: (media_image_bool_exp | null),metadata?: (json_comparison_exp | null),metadata_locked?: (Boolean_comparison_exp | null),metadata_uri?: (String_comparison_exp | null),mint_op_hash?: (String_comparison_exp | null),moderation_reason?: (moderation_reason_bool_exp | null),moderation_reason_id?: (String_comparison_exp | null),platforms?: (_text_comparison_exp | null),royalties?: (Int_comparison_exp | null),slug?: (String_comparison_exp | null),splits?: (split_bool_exp | null),splits_aggregate?: (split_aggregate_bool_exp | null),tags?: (_text_comparison_exp | null),thumbnailMediaId?: (bpchar_comparison_exp | null),thumbnail_caption?: (String_comparison_exp | null),thumbnail_uri?: (String_comparison_exp | null),title?: (String_comparison_exp | null),transactions?: (transaction_bool_exp | null),transactions_aggregate?: (transaction_aggregate_bool_exp | null),user?: (user_bool_exp | null)}


/** Boolean expression to compare columns of type "article_flag_enum". All fields are combined with logical 'AND'. */
export interface article_flag_enum_comparison_exp {_eq?: (Scalars['article_flag_enum'] | null),_gt?: (Scalars['article_flag_enum'] | null),_gte?: (Scalars['article_flag_enum'] | null),_in?: (Scalars['article_flag_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['article_flag_enum'] | null),_lte?: (Scalars['article_flag_enum'] | null),_neq?: (Scalars['article_flag_enum'] | null),_nin?: (Scalars['article_flag_enum'][] | null)}


/** columns and relationships of "article_generative_token" */
export interface article_generative_tokenGenqlSelection{
    article_id?: boolean | number
    generative_token_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "article_generative_token" */
export interface article_generative_token_aggregateGenqlSelection{
    aggregate?: article_generative_token_aggregate_fieldsGenqlSelection
    nodes?: article_generative_tokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "article_generative_token" */
export interface article_generative_token_aggregate_fieldsGenqlSelection{
    avg?: article_generative_token_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (article_generative_token_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: article_generative_token_max_fieldsGenqlSelection
    min?: article_generative_token_min_fieldsGenqlSelection
    stddev?: article_generative_token_stddev_fieldsGenqlSelection
    stddev_pop?: article_generative_token_stddev_pop_fieldsGenqlSelection
    stddev_samp?: article_generative_token_stddev_samp_fieldsGenqlSelection
    sum?: article_generative_token_sum_fieldsGenqlSelection
    var_pop?: article_generative_token_var_pop_fieldsGenqlSelection
    var_samp?: article_generative_token_var_samp_fieldsGenqlSelection
    variance?: article_generative_token_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate avg on columns */
export interface article_generative_token_avg_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "article_generative_token". All fields are combined with a logical 'AND'. */
export interface article_generative_token_bool_exp {_and?: (article_generative_token_bool_exp[] | null),_not?: (article_generative_token_bool_exp | null),_or?: (article_generative_token_bool_exp[] | null),article_id?: (Int_comparison_exp | null),generative_token_id?: (String_comparison_exp | null),line?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "article_generative_token" */
export interface article_generative_token_inc_input {article_id?: (Scalars['Int'] | null),line?: (Scalars['Int'] | null)}


/** input type for inserting data into table "article_generative_token" */
export interface article_generative_token_insert_input {article_id?: (Scalars['Int'] | null),generative_token_id?: (Scalars['String'] | null),line?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface article_generative_token_max_fieldsGenqlSelection{
    article_id?: boolean | number
    generative_token_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface article_generative_token_min_fieldsGenqlSelection{
    article_id?: boolean | number
    generative_token_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "article_generative_token" */
export interface article_generative_token_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: article_generative_tokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "article_generative_token" */
export interface article_generative_token_on_conflict {constraint: article_generative_token_constraint,update_columns?: article_generative_token_update_column[],where?: (article_generative_token_bool_exp | null)}


/** Ordering options when selecting data from "article_generative_token". */
export interface article_generative_token_order_by {article_id?: (order_by | null),generative_token_id?: (order_by | null),line?: (order_by | null)}


/** primary key columns input for table: article_generative_token */
export interface article_generative_token_pk_columns_input {article_id: Scalars['Int'],generative_token_id: Scalars['String']}


/** input type for updating data in table "article_generative_token" */
export interface article_generative_token_set_input {article_id?: (Scalars['Int'] | null),generative_token_id?: (Scalars['String'] | null),line?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface article_generative_token_stddev_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_pop on columns */
export interface article_generative_token_stddev_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_samp on columns */
export interface article_generative_token_stddev_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Streaming cursor of the table "article_generative_token" */
export interface article_generative_token_stream_cursor_input {
/** Stream column input with initial value */
initial_value: article_generative_token_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface article_generative_token_stream_cursor_value_input {article_id?: (Scalars['Int'] | null),generative_token_id?: (Scalars['String'] | null),line?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface article_generative_token_sum_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface article_generative_token_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (article_generative_token_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (article_generative_token_set_input | null),
/** filter the rows which have to be updated */
where: article_generative_token_bool_exp}


/** aggregate var_pop on columns */
export interface article_generative_token_var_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate var_samp on columns */
export interface article_generative_token_var_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate variance on columns */
export interface article_generative_token_variance_fieldsGenqlSelection{
    article_id?: boolean | number
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for incrementing numeric columns in table "article" */
export interface article_inc_input {editions?: (Scalars['bigint'] | null),id?: (Scalars['Int'] | null),royalties?: (Scalars['Int'] | null)}


/** input type for inserting data into table "article" */
export interface article_insert_input {actions?: (action_arr_rel_insert_input | null),article_ledgers?: (article_ledger_arr_rel_insert_input | null),article_revisions?: (article_revision_arr_rel_insert_input | null),artifact_uri?: (Scalars['String'] | null),author_id?: (Scalars['String'] | null),body?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),description?: (Scalars['String'] | null),display_uri?: (Scalars['String'] | null),editions?: (Scalars['bigint'] | null),flag?: (Scalars['article_flag_enum'] | null),id?: (Scalars['Int'] | null),language?: (Scalars['String'] | null),listings?: (listing_arr_rel_insert_input | null),media_image?: (media_image_obj_rel_insert_input | null),metadata?: (Scalars['json'] | null),metadata_locked?: (Scalars['Boolean'] | null),metadata_uri?: (Scalars['String'] | null),mint_op_hash?: (Scalars['String'] | null),moderation_reason?: (moderation_reason_obj_rel_insert_input | null),moderation_reason_id?: (Scalars['String'] | null),platforms?: (Scalars['_text'] | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),splits?: (split_arr_rel_insert_input | null),tags?: (Scalars['_text'] | null),thumbnailMediaId?: (Scalars['bpchar'] | null),thumbnail_caption?: (Scalars['String'] | null),thumbnail_uri?: (Scalars['String'] | null),title?: (Scalars['String'] | null),transactions?: (transaction_arr_rel_insert_input | null),user?: (user_obj_rel_insert_input | null)}


/** columns and relationships of "article_ledger" */
export interface article_ledgerGenqlSelection{
    amount?: boolean | number
    /** An object relationship */
    article?: articleGenqlSelection
    article_id?: boolean | number
    owner_id?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "article_ledger" */
export interface article_ledger_aggregateGenqlSelection{
    aggregate?: article_ledger_aggregate_fieldsGenqlSelection
    nodes?: article_ledgerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface article_ledger_aggregate_bool_exp {count?: (article_ledger_aggregate_bool_exp_count | null)}

export interface article_ledger_aggregate_bool_exp_count {arguments?: (article_ledger_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (article_ledger_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "article_ledger" */
export interface article_ledger_aggregate_fieldsGenqlSelection{
    avg?: article_ledger_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (article_ledger_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: article_ledger_max_fieldsGenqlSelection
    min?: article_ledger_min_fieldsGenqlSelection
    stddev?: article_ledger_stddev_fieldsGenqlSelection
    stddev_pop?: article_ledger_stddev_pop_fieldsGenqlSelection
    stddev_samp?: article_ledger_stddev_samp_fieldsGenqlSelection
    sum?: article_ledger_sum_fieldsGenqlSelection
    var_pop?: article_ledger_var_pop_fieldsGenqlSelection
    var_samp?: article_ledger_var_samp_fieldsGenqlSelection
    variance?: article_ledger_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "article_ledger" */
export interface article_ledger_aggregate_order_by {avg?: (article_ledger_avg_order_by | null),count?: (order_by | null),max?: (article_ledger_max_order_by | null),min?: (article_ledger_min_order_by | null),stddev?: (article_ledger_stddev_order_by | null),stddev_pop?: (article_ledger_stddev_pop_order_by | null),stddev_samp?: (article_ledger_stddev_samp_order_by | null),sum?: (article_ledger_sum_order_by | null),var_pop?: (article_ledger_var_pop_order_by | null),var_samp?: (article_ledger_var_samp_order_by | null),variance?: (article_ledger_variance_order_by | null)}


/** input type for inserting array relation for remote table "article_ledger" */
export interface article_ledger_arr_rel_insert_input {data: article_ledger_insert_input[],
/** upsert condition */
on_conflict?: (article_ledger_on_conflict | null)}


/** aggregate avg on columns */
export interface article_ledger_avg_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "article_ledger" */
export interface article_ledger_avg_order_by {amount?: (order_by | null),article_id?: (order_by | null)}


/** Boolean expression to filter rows from the table "article_ledger". All fields are combined with a logical 'AND'. */
export interface article_ledger_bool_exp {_and?: (article_ledger_bool_exp[] | null),_not?: (article_ledger_bool_exp | null),_or?: (article_ledger_bool_exp[] | null),amount?: (bigint_comparison_exp | null),article?: (article_bool_exp | null),article_id?: (Int_comparison_exp | null),owner_id?: (String_comparison_exp | null),user?: (user_bool_exp | null)}


/** input type for incrementing numeric columns in table "article_ledger" */
export interface article_ledger_inc_input {amount?: (Scalars['bigint'] | null),article_id?: (Scalars['Int'] | null)}


/** input type for inserting data into table "article_ledger" */
export interface article_ledger_insert_input {amount?: (Scalars['bigint'] | null),article?: (article_obj_rel_insert_input | null),article_id?: (Scalars['Int'] | null),owner_id?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface article_ledger_max_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    owner_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "article_ledger" */
export interface article_ledger_max_order_by {amount?: (order_by | null),article_id?: (order_by | null),owner_id?: (order_by | null)}


/** aggregate min on columns */
export interface article_ledger_min_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    owner_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "article_ledger" */
export interface article_ledger_min_order_by {amount?: (order_by | null),article_id?: (order_by | null),owner_id?: (order_by | null)}


/** response of any mutation on the table "article_ledger" */
export interface article_ledger_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: article_ledgerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "article_ledger" */
export interface article_ledger_on_conflict {constraint: article_ledger_constraint,update_columns?: article_ledger_update_column[],where?: (article_ledger_bool_exp | null)}


/** Ordering options when selecting data from "article_ledger". */
export interface article_ledger_order_by {amount?: (order_by | null),article?: (article_order_by | null),article_id?: (order_by | null),owner_id?: (order_by | null),user?: (user_order_by | null)}


/** primary key columns input for table: article_ledger */
export interface article_ledger_pk_columns_input {article_id: Scalars['Int'],owner_id: Scalars['String']}


/** input type for updating data in table "article_ledger" */
export interface article_ledger_set_input {amount?: (Scalars['bigint'] | null),article_id?: (Scalars['Int'] | null),owner_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface article_ledger_stddev_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "article_ledger" */
export interface article_ledger_stddev_order_by {amount?: (order_by | null),article_id?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface article_ledger_stddev_pop_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "article_ledger" */
export interface article_ledger_stddev_pop_order_by {amount?: (order_by | null),article_id?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface article_ledger_stddev_samp_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "article_ledger" */
export interface article_ledger_stddev_samp_order_by {amount?: (order_by | null),article_id?: (order_by | null)}


/** Streaming cursor of the table "article_ledger" */
export interface article_ledger_stream_cursor_input {
/** Stream column input with initial value */
initial_value: article_ledger_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface article_ledger_stream_cursor_value_input {amount?: (Scalars['bigint'] | null),article_id?: (Scalars['Int'] | null),owner_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface article_ledger_sum_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "article_ledger" */
export interface article_ledger_sum_order_by {amount?: (order_by | null),article_id?: (order_by | null)}

export interface article_ledger_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (article_ledger_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (article_ledger_set_input | null),
/** filter the rows which have to be updated */
where: article_ledger_bool_exp}


/** aggregate var_pop on columns */
export interface article_ledger_var_pop_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "article_ledger" */
export interface article_ledger_var_pop_order_by {amount?: (order_by | null),article_id?: (order_by | null)}


/** aggregate var_samp on columns */
export interface article_ledger_var_samp_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "article_ledger" */
export interface article_ledger_var_samp_order_by {amount?: (order_by | null),article_id?: (order_by | null)}


/** aggregate variance on columns */
export interface article_ledger_variance_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "article_ledger" */
export interface article_ledger_variance_order_by {amount?: (order_by | null),article_id?: (order_by | null)}


/** aggregate max on columns */
export interface article_max_fieldsGenqlSelection{
    artifact_uri?: boolean | number
    author_id?: boolean | number
    body?: boolean | number
    created_at?: boolean | number
    description?: boolean | number
    display_uri?: boolean | number
    editions?: boolean | number
    flag?: boolean | number
    id?: boolean | number
    language?: boolean | number
    metadata_uri?: boolean | number
    mint_op_hash?: boolean | number
    moderation_reason_id?: boolean | number
    royalties?: boolean | number
    slug?: boolean | number
    thumbnailMediaId?: boolean | number
    thumbnail_caption?: boolean | number
    thumbnail_uri?: boolean | number
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "article" */
export interface article_max_order_by {artifact_uri?: (order_by | null),author_id?: (order_by | null),body?: (order_by | null),created_at?: (order_by | null),description?: (order_by | null),display_uri?: (order_by | null),editions?: (order_by | null),flag?: (order_by | null),id?: (order_by | null),language?: (order_by | null),metadata_uri?: (order_by | null),mint_op_hash?: (order_by | null),moderation_reason_id?: (order_by | null),royalties?: (order_by | null),slug?: (order_by | null),thumbnailMediaId?: (order_by | null),thumbnail_caption?: (order_by | null),thumbnail_uri?: (order_by | null),title?: (order_by | null)}


/** aggregate min on columns */
export interface article_min_fieldsGenqlSelection{
    artifact_uri?: boolean | number
    author_id?: boolean | number
    body?: boolean | number
    created_at?: boolean | number
    description?: boolean | number
    display_uri?: boolean | number
    editions?: boolean | number
    flag?: boolean | number
    id?: boolean | number
    language?: boolean | number
    metadata_uri?: boolean | number
    mint_op_hash?: boolean | number
    moderation_reason_id?: boolean | number
    royalties?: boolean | number
    slug?: boolean | number
    thumbnailMediaId?: boolean | number
    thumbnail_caption?: boolean | number
    thumbnail_uri?: boolean | number
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "article" */
export interface article_min_order_by {artifact_uri?: (order_by | null),author_id?: (order_by | null),body?: (order_by | null),created_at?: (order_by | null),description?: (order_by | null),display_uri?: (order_by | null),editions?: (order_by | null),flag?: (order_by | null),id?: (order_by | null),language?: (order_by | null),metadata_uri?: (order_by | null),mint_op_hash?: (order_by | null),moderation_reason_id?: (order_by | null),royalties?: (order_by | null),slug?: (order_by | null),thumbnailMediaId?: (order_by | null),thumbnail_caption?: (order_by | null),thumbnail_uri?: (order_by | null),title?: (order_by | null)}


/** response of any mutation on the table "article" */
export interface article_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: articleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "article" */
export interface article_obj_rel_insert_input {data: article_insert_input,
/** upsert condition */
on_conflict?: (article_on_conflict | null)}


/** on_conflict condition type for table "article" */
export interface article_on_conflict {constraint: article_constraint,update_columns?: article_update_column[],where?: (article_bool_exp | null)}


/** Ordering options when selecting data from "article". */
export interface article_order_by {actions_aggregate?: (action_aggregate_order_by | null),article_ledgers_aggregate?: (article_ledger_aggregate_order_by | null),article_revisions_aggregate?: (article_revision_aggregate_order_by | null),artifact_uri?: (order_by | null),author_id?: (order_by | null),body?: (order_by | null),created_at?: (order_by | null),description?: (order_by | null),display_uri?: (order_by | null),editions?: (order_by | null),flag?: (order_by | null),id?: (order_by | null),language?: (order_by | null),listings_aggregate?: (listing_aggregate_order_by | null),media_image?: (media_image_order_by | null),metadata?: (order_by | null),metadata_locked?: (order_by | null),metadata_uri?: (order_by | null),mint_op_hash?: (order_by | null),moderation_reason?: (moderation_reason_order_by | null),moderation_reason_id?: (order_by | null),platforms?: (order_by | null),royalties?: (order_by | null),slug?: (order_by | null),splits_aggregate?: (split_aggregate_order_by | null),tags?: (order_by | null),thumbnailMediaId?: (order_by | null),thumbnail_caption?: (order_by | null),thumbnail_uri?: (order_by | null),title?: (order_by | null),transactions_aggregate?: (transaction_aggregate_order_by | null),user?: (user_order_by | null)}


/** primary key columns input for table: article */
export interface article_pk_columns_input {id: Scalars['Int']}


/** columns and relationships of "article_revision" */
export interface article_revisionGenqlSelection{
    /** An object relationship */
    article?: articleGenqlSelection
    article_id?: boolean | number
    created_at?: boolean | number
    iteration?: boolean | number
    metadata_uri?: boolean | number
    op_hash?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "article_revision" */
export interface article_revision_aggregateGenqlSelection{
    aggregate?: article_revision_aggregate_fieldsGenqlSelection
    nodes?: article_revisionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface article_revision_aggregate_bool_exp {count?: (article_revision_aggregate_bool_exp_count | null)}

export interface article_revision_aggregate_bool_exp_count {arguments?: (article_revision_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (article_revision_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "article_revision" */
export interface article_revision_aggregate_fieldsGenqlSelection{
    avg?: article_revision_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (article_revision_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: article_revision_max_fieldsGenqlSelection
    min?: article_revision_min_fieldsGenqlSelection
    stddev?: article_revision_stddev_fieldsGenqlSelection
    stddev_pop?: article_revision_stddev_pop_fieldsGenqlSelection
    stddev_samp?: article_revision_stddev_samp_fieldsGenqlSelection
    sum?: article_revision_sum_fieldsGenqlSelection
    var_pop?: article_revision_var_pop_fieldsGenqlSelection
    var_samp?: article_revision_var_samp_fieldsGenqlSelection
    variance?: article_revision_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "article_revision" */
export interface article_revision_aggregate_order_by {avg?: (article_revision_avg_order_by | null),count?: (order_by | null),max?: (article_revision_max_order_by | null),min?: (article_revision_min_order_by | null),stddev?: (article_revision_stddev_order_by | null),stddev_pop?: (article_revision_stddev_pop_order_by | null),stddev_samp?: (article_revision_stddev_samp_order_by | null),sum?: (article_revision_sum_order_by | null),var_pop?: (article_revision_var_pop_order_by | null),var_samp?: (article_revision_var_samp_order_by | null),variance?: (article_revision_variance_order_by | null)}


/** input type for inserting array relation for remote table "article_revision" */
export interface article_revision_arr_rel_insert_input {data: article_revision_insert_input[],
/** upsert condition */
on_conflict?: (article_revision_on_conflict | null)}


/** aggregate avg on columns */
export interface article_revision_avg_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "article_revision" */
export interface article_revision_avg_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}


/** Boolean expression to filter rows from the table "article_revision". All fields are combined with a logical 'AND'. */
export interface article_revision_bool_exp {_and?: (article_revision_bool_exp[] | null),_not?: (article_revision_bool_exp | null),_or?: (article_revision_bool_exp[] | null),article?: (article_bool_exp | null),article_id?: (Int_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),iteration?: (smallint_comparison_exp | null),metadata_uri?: (String_comparison_exp | null),op_hash?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "article_revision" */
export interface article_revision_inc_input {article_id?: (Scalars['Int'] | null),iteration?: (Scalars['smallint'] | null)}


/** input type for inserting data into table "article_revision" */
export interface article_revision_insert_input {article?: (article_obj_rel_insert_input | null),article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),iteration?: (Scalars['smallint'] | null),metadata_uri?: (Scalars['String'] | null),op_hash?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface article_revision_max_fieldsGenqlSelection{
    article_id?: boolean | number
    created_at?: boolean | number
    iteration?: boolean | number
    metadata_uri?: boolean | number
    op_hash?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "article_revision" */
export interface article_revision_max_order_by {article_id?: (order_by | null),created_at?: (order_by | null),iteration?: (order_by | null),metadata_uri?: (order_by | null),op_hash?: (order_by | null)}


/** aggregate min on columns */
export interface article_revision_min_fieldsGenqlSelection{
    article_id?: boolean | number
    created_at?: boolean | number
    iteration?: boolean | number
    metadata_uri?: boolean | number
    op_hash?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "article_revision" */
export interface article_revision_min_order_by {article_id?: (order_by | null),created_at?: (order_by | null),iteration?: (order_by | null),metadata_uri?: (order_by | null),op_hash?: (order_by | null)}


/** response of any mutation on the table "article_revision" */
export interface article_revision_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: article_revisionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "article_revision" */
export interface article_revision_on_conflict {constraint: article_revision_constraint,update_columns?: article_revision_update_column[],where?: (article_revision_bool_exp | null)}


/** Ordering options when selecting data from "article_revision". */
export interface article_revision_order_by {article?: (article_order_by | null),article_id?: (order_by | null),created_at?: (order_by | null),iteration?: (order_by | null),metadata_uri?: (order_by | null),op_hash?: (order_by | null)}


/** primary key columns input for table: article_revision */
export interface article_revision_pk_columns_input {article_id: Scalars['Int'],iteration: Scalars['smallint']}


/** input type for updating data in table "article_revision" */
export interface article_revision_set_input {article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),iteration?: (Scalars['smallint'] | null),metadata_uri?: (Scalars['String'] | null),op_hash?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface article_revision_stddev_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "article_revision" */
export interface article_revision_stddev_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface article_revision_stddev_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "article_revision" */
export interface article_revision_stddev_pop_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface article_revision_stddev_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "article_revision" */
export interface article_revision_stddev_samp_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}


/** Streaming cursor of the table "article_revision" */
export interface article_revision_stream_cursor_input {
/** Stream column input with initial value */
initial_value: article_revision_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface article_revision_stream_cursor_value_input {article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),iteration?: (Scalars['smallint'] | null),metadata_uri?: (Scalars['String'] | null),op_hash?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface article_revision_sum_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "article_revision" */
export interface article_revision_sum_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}

export interface article_revision_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (article_revision_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (article_revision_set_input | null),
/** filter the rows which have to be updated */
where: article_revision_bool_exp}


/** aggregate var_pop on columns */
export interface article_revision_var_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "article_revision" */
export interface article_revision_var_pop_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}


/** aggregate var_samp on columns */
export interface article_revision_var_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "article_revision" */
export interface article_revision_var_samp_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}


/** aggregate variance on columns */
export interface article_revision_variance_fieldsGenqlSelection{
    article_id?: boolean | number
    iteration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "article_revision" */
export interface article_revision_variance_order_by {article_id?: (order_by | null),iteration?: (order_by | null)}


/** input type for updating data in table "article" */
export interface article_set_input {artifact_uri?: (Scalars['String'] | null),author_id?: (Scalars['String'] | null),body?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),description?: (Scalars['String'] | null),display_uri?: (Scalars['String'] | null),editions?: (Scalars['bigint'] | null),flag?: (Scalars['article_flag_enum'] | null),id?: (Scalars['Int'] | null),language?: (Scalars['String'] | null),metadata?: (Scalars['json'] | null),metadata_locked?: (Scalars['Boolean'] | null),metadata_uri?: (Scalars['String'] | null),mint_op_hash?: (Scalars['String'] | null),moderation_reason_id?: (Scalars['String'] | null),platforms?: (Scalars['_text'] | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),tags?: (Scalars['_text'] | null),thumbnailMediaId?: (Scalars['bpchar'] | null),thumbnail_caption?: (Scalars['String'] | null),thumbnail_uri?: (Scalars['String'] | null),title?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface article_stddev_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "article" */
export interface article_stddev_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface article_stddev_pop_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "article" */
export interface article_stddev_pop_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface article_stddev_samp_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "article" */
export interface article_stddev_samp_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}


/** Streaming cursor of the table "article" */
export interface article_stream_cursor_input {
/** Stream column input with initial value */
initial_value: article_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface article_stream_cursor_value_input {artifact_uri?: (Scalars['String'] | null),author_id?: (Scalars['String'] | null),body?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),description?: (Scalars['String'] | null),display_uri?: (Scalars['String'] | null),editions?: (Scalars['bigint'] | null),flag?: (Scalars['article_flag_enum'] | null),id?: (Scalars['Int'] | null),language?: (Scalars['String'] | null),metadata?: (Scalars['json'] | null),metadata_locked?: (Scalars['Boolean'] | null),metadata_uri?: (Scalars['String'] | null),mint_op_hash?: (Scalars['String'] | null),moderation_reason_id?: (Scalars['String'] | null),platforms?: (Scalars['_text'] | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),tags?: (Scalars['_text'] | null),thumbnailMediaId?: (Scalars['bpchar'] | null),thumbnail_caption?: (Scalars['String'] | null),thumbnail_uri?: (Scalars['String'] | null),title?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface article_sum_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "article" */
export interface article_sum_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}

export interface article_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (article_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (article_set_input | null),
/** filter the rows which have to be updated */
where: article_bool_exp}


/** aggregate var_pop on columns */
export interface article_var_pop_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "article" */
export interface article_var_pop_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}


/** aggregate var_samp on columns */
export interface article_var_samp_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "article" */
export interface article_var_samp_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}


/** aggregate variance on columns */
export interface article_variance_fieldsGenqlSelection{
    editions?: boolean | number
    id?: boolean | number
    royalties?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "article" */
export interface article_variance_order_by {editions?: (order_by | null),id?: (order_by | null),royalties?: (order_by | null)}


/** columns and relationships of "auction" */
export interface auctionGenqlSelection{
    /** An object relationship */
    auction_bid_table?: auction_bid_tableGenqlSelection
    /** An array relationship */
    auction_bids?: (auction_bidGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** An aggregate relationship */
    auction_bids_aggregate?: (auction_bid_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    ends_at?: boolean | number
    fulfilled_at?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    /** An object relationship */
    objkt?: objktGenqlSelection
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    reserve_price?: boolean | number
    seller_id?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "auction" */
export interface auction_aggregateGenqlSelection{
    aggregate?: auction_aggregate_fieldsGenqlSelection
    nodes?: auctionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface auction_aggregate_bool_exp {count?: (auction_aggregate_bool_exp_count | null)}

export interface auction_aggregate_bool_exp_count {arguments?: (auction_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (auction_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "auction" */
export interface auction_aggregate_fieldsGenqlSelection{
    avg?: auction_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (auction_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: auction_max_fieldsGenqlSelection
    min?: auction_min_fieldsGenqlSelection
    stddev?: auction_stddev_fieldsGenqlSelection
    stddev_pop?: auction_stddev_pop_fieldsGenqlSelection
    stddev_samp?: auction_stddev_samp_fieldsGenqlSelection
    sum?: auction_sum_fieldsGenqlSelection
    var_pop?: auction_var_pop_fieldsGenqlSelection
    var_samp?: auction_var_samp_fieldsGenqlSelection
    variance?: auction_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "auction" */
export interface auction_aggregate_order_by {avg?: (auction_avg_order_by | null),count?: (order_by | null),max?: (auction_max_order_by | null),min?: (auction_min_order_by | null),stddev?: (auction_stddev_order_by | null),stddev_pop?: (auction_stddev_pop_order_by | null),stddev_samp?: (auction_stddev_samp_order_by | null),sum?: (auction_sum_order_by | null),var_pop?: (auction_var_pop_order_by | null),var_samp?: (auction_var_samp_order_by | null),variance?: (auction_variance_order_by | null)}


/** input type for inserting array relation for remote table "auction" */
export interface auction_arr_rel_insert_input {data: auction_insert_input[],
/** upsert condition */
on_conflict?: (auction_on_conflict | null)}


/** aggregate avg on columns */
export interface auction_avg_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "auction" */
export interface auction_avg_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}


/** columns and relationships of "auction_bid" */
export interface auction_bidGenqlSelection{
    /** An object relationship */
    auction?: auctionGenqlSelection
    auction_id?: boolean | number
    auction_version?: boolean | number
    bidder_id?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    price?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "auction_bid" */
export interface auction_bid_aggregateGenqlSelection{
    aggregate?: auction_bid_aggregate_fieldsGenqlSelection
    nodes?: auction_bidGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface auction_bid_aggregate_bool_exp {count?: (auction_bid_aggregate_bool_exp_count | null)}

export interface auction_bid_aggregate_bool_exp_count {arguments?: (auction_bid_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (auction_bid_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "auction_bid" */
export interface auction_bid_aggregate_fieldsGenqlSelection{
    avg?: auction_bid_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (auction_bid_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: auction_bid_max_fieldsGenqlSelection
    min?: auction_bid_min_fieldsGenqlSelection
    stddev?: auction_bid_stddev_fieldsGenqlSelection
    stddev_pop?: auction_bid_stddev_pop_fieldsGenqlSelection
    stddev_samp?: auction_bid_stddev_samp_fieldsGenqlSelection
    sum?: auction_bid_sum_fieldsGenqlSelection
    var_pop?: auction_bid_var_pop_fieldsGenqlSelection
    var_samp?: auction_bid_var_samp_fieldsGenqlSelection
    variance?: auction_bid_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "auction_bid" */
export interface auction_bid_aggregate_order_by {avg?: (auction_bid_avg_order_by | null),count?: (order_by | null),max?: (auction_bid_max_order_by | null),min?: (auction_bid_min_order_by | null),stddev?: (auction_bid_stddev_order_by | null),stddev_pop?: (auction_bid_stddev_pop_order_by | null),stddev_samp?: (auction_bid_stddev_samp_order_by | null),sum?: (auction_bid_sum_order_by | null),var_pop?: (auction_bid_var_pop_order_by | null),var_samp?: (auction_bid_var_samp_order_by | null),variance?: (auction_bid_variance_order_by | null)}


/** input type for inserting array relation for remote table "auction_bid" */
export interface auction_bid_arr_rel_insert_input {data: auction_bid_insert_input[],
/** upsert condition */
on_conflict?: (auction_bid_on_conflict | null)}


/** aggregate avg on columns */
export interface auction_bid_avg_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "auction_bid" */
export interface auction_bid_avg_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** Boolean expression to filter rows from the table "auction_bid". All fields are combined with a logical 'AND'. */
export interface auction_bid_bool_exp {_and?: (auction_bid_bool_exp[] | null),_not?: (auction_bid_bool_exp | null),_or?: (auction_bid_bool_exp[] | null),auction?: (auction_bool_exp | null),auction_id?: (Int_comparison_exp | null),auction_version?: (Int_comparison_exp | null),bidder_id?: (String_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),id?: (uuid_comparison_exp | null),price?: (numeric_comparison_exp | null),user?: (user_bool_exp | null)}


/** input type for incrementing numeric columns in table "auction_bid" */
export interface auction_bid_inc_input {auction_id?: (Scalars['Int'] | null),auction_version?: (Scalars['Int'] | null),price?: (Scalars['numeric'] | null)}


/** input type for inserting data into table "auction_bid" */
export interface auction_bid_insert_input {auction?: (auction_obj_rel_insert_input | null),auction_id?: (Scalars['Int'] | null),auction_version?: (Scalars['Int'] | null),bidder_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),price?: (Scalars['numeric'] | null),user?: (user_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface auction_bid_max_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    bidder_id?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "auction_bid" */
export interface auction_bid_max_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),bidder_id?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** aggregate min on columns */
export interface auction_bid_min_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    bidder_id?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "auction_bid" */
export interface auction_bid_min_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),bidder_id?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** response of any mutation on the table "auction_bid" */
export interface auction_bid_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: auction_bidGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "auction_bid" */
export interface auction_bid_on_conflict {constraint: auction_bid_constraint,update_columns?: auction_bid_update_column[],where?: (auction_bid_bool_exp | null)}


/** Ordering options when selecting data from "auction_bid". */
export interface auction_bid_order_by {auction?: (auction_order_by | null),auction_id?: (order_by | null),auction_version?: (order_by | null),bidder_id?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),price?: (order_by | null),user?: (user_order_by | null)}


/** primary key columns input for table: auction_bid */
export interface auction_bid_pk_columns_input {id: Scalars['uuid']}


/** input type for updating data in table "auction_bid" */
export interface auction_bid_set_input {auction_id?: (Scalars['Int'] | null),auction_version?: (Scalars['Int'] | null),bidder_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),price?: (Scalars['numeric'] | null)}


/** aggregate stddev on columns */
export interface auction_bid_stddev_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "auction_bid" */
export interface auction_bid_stddev_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface auction_bid_stddev_pop_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "auction_bid" */
export interface auction_bid_stddev_pop_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface auction_bid_stddev_samp_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "auction_bid" */
export interface auction_bid_stddev_samp_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** Streaming cursor of the table "auction_bid" */
export interface auction_bid_stream_cursor_input {
/** Stream column input with initial value */
initial_value: auction_bid_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface auction_bid_stream_cursor_value_input {auction_id?: (Scalars['Int'] | null),auction_version?: (Scalars['Int'] | null),bidder_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),price?: (Scalars['numeric'] | null)}


/** aggregate sum on columns */
export interface auction_bid_sum_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "auction_bid" */
export interface auction_bid_sum_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** columns and relationships of "auction_bid_table" */
export interface auction_bid_tableGenqlSelection{
    /** An array relationship */
    auctions?: (auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** An aggregate relationship */
    auctions_aggregate?: (auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    id?: boolean | number
    table?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "auction_bid_table" */
export interface auction_bid_table_aggregateGenqlSelection{
    aggregate?: auction_bid_table_aggregate_fieldsGenqlSelection
    nodes?: auction_bid_tableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "auction_bid_table" */
export interface auction_bid_table_aggregate_fieldsGenqlSelection{
    avg?: auction_bid_table_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (auction_bid_table_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: auction_bid_table_max_fieldsGenqlSelection
    min?: auction_bid_table_min_fieldsGenqlSelection
    stddev?: auction_bid_table_stddev_fieldsGenqlSelection
    stddev_pop?: auction_bid_table_stddev_pop_fieldsGenqlSelection
    stddev_samp?: auction_bid_table_stddev_samp_fieldsGenqlSelection
    sum?: auction_bid_table_sum_fieldsGenqlSelection
    var_pop?: auction_bid_table_var_pop_fieldsGenqlSelection
    var_samp?: auction_bid_table_var_samp_fieldsGenqlSelection
    variance?: auction_bid_table_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** append existing jsonb value of filtered columns with new jsonb value */
export interface auction_bid_table_append_input {table?: (Scalars['jsonb'] | null)}


/** aggregate avg on columns */
export interface auction_bid_table_avg_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "auction_bid_table". All fields are combined with a logical 'AND'. */
export interface auction_bid_table_bool_exp {_and?: (auction_bid_table_bool_exp[] | null),_not?: (auction_bid_table_bool_exp | null),_or?: (auction_bid_table_bool_exp[] | null),auctions?: (auction_bool_exp | null),auctions_aggregate?: (auction_aggregate_bool_exp | null),id?: (Int_comparison_exp | null),table?: (jsonb_comparison_exp | null)}


/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export interface auction_bid_table_delete_at_path_input {table?: (Scalars['String'][] | null)}


/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export interface auction_bid_table_delete_elem_input {table?: (Scalars['Int'] | null)}


/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export interface auction_bid_table_delete_key_input {table?: (Scalars['String'] | null)}


/** input type for incrementing numeric columns in table "auction_bid_table" */
export interface auction_bid_table_inc_input {id?: (Scalars['Int'] | null)}


/** input type for inserting data into table "auction_bid_table" */
export interface auction_bid_table_insert_input {auctions?: (auction_arr_rel_insert_input | null),id?: (Scalars['Int'] | null),table?: (Scalars['jsonb'] | null)}


/** aggregate max on columns */
export interface auction_bid_table_max_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface auction_bid_table_min_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "auction_bid_table" */
export interface auction_bid_table_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: auction_bid_tableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "auction_bid_table" */
export interface auction_bid_table_obj_rel_insert_input {data: auction_bid_table_insert_input,
/** upsert condition */
on_conflict?: (auction_bid_table_on_conflict | null)}


/** on_conflict condition type for table "auction_bid_table" */
export interface auction_bid_table_on_conflict {constraint: auction_bid_table_constraint,update_columns?: auction_bid_table_update_column[],where?: (auction_bid_table_bool_exp | null)}


/** Ordering options when selecting data from "auction_bid_table". */
export interface auction_bid_table_order_by {auctions_aggregate?: (auction_aggregate_order_by | null),id?: (order_by | null),table?: (order_by | null)}


/** primary key columns input for table: auction_bid_table */
export interface auction_bid_table_pk_columns_input {id: Scalars['Int']}


/** prepend existing jsonb value of filtered columns with new jsonb value */
export interface auction_bid_table_prepend_input {table?: (Scalars['jsonb'] | null)}


/** input type for updating data in table "auction_bid_table" */
export interface auction_bid_table_set_input {id?: (Scalars['Int'] | null),table?: (Scalars['jsonb'] | null)}


/** aggregate stddev on columns */
export interface auction_bid_table_stddev_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_pop on columns */
export interface auction_bid_table_stddev_pop_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_samp on columns */
export interface auction_bid_table_stddev_samp_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Streaming cursor of the table "auction_bid_table" */
export interface auction_bid_table_stream_cursor_input {
/** Stream column input with initial value */
initial_value: auction_bid_table_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface auction_bid_table_stream_cursor_value_input {id?: (Scalars['Int'] | null),table?: (Scalars['jsonb'] | null)}


/** aggregate sum on columns */
export interface auction_bid_table_sum_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface auction_bid_table_updates {
/** append existing jsonb value of filtered columns with new jsonb value */
_append?: (auction_bid_table_append_input | null),
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
_delete_at_path?: (auction_bid_table_delete_at_path_input | null),
/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
_delete_elem?: (auction_bid_table_delete_elem_input | null),
/** delete key/value pair or string element. key/value pairs are matched based on their key value */
_delete_key?: (auction_bid_table_delete_key_input | null),
/** increments the numeric columns with given value of the filtered values */
_inc?: (auction_bid_table_inc_input | null),
/** prepend existing jsonb value of filtered columns with new jsonb value */
_prepend?: (auction_bid_table_prepend_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (auction_bid_table_set_input | null),
/** filter the rows which have to be updated */
where: auction_bid_table_bool_exp}


/** aggregate var_pop on columns */
export interface auction_bid_table_var_pop_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate var_samp on columns */
export interface auction_bid_table_var_samp_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate variance on columns */
export interface auction_bid_table_variance_fieldsGenqlSelection{
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface auction_bid_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (auction_bid_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (auction_bid_set_input | null),
/** filter the rows which have to be updated */
where: auction_bid_bool_exp}


/** aggregate var_pop on columns */
export interface auction_bid_var_pop_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "auction_bid" */
export interface auction_bid_var_pop_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** aggregate var_samp on columns */
export interface auction_bid_var_samp_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "auction_bid" */
export interface auction_bid_var_samp_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** aggregate variance on columns */
export interface auction_bid_variance_fieldsGenqlSelection{
    auction_id?: boolean | number
    auction_version?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "auction_bid" */
export interface auction_bid_variance_order_by {auction_id?: (order_by | null),auction_version?: (order_by | null),price?: (order_by | null)}


/** Boolean expression to filter rows from the table "auction". All fields are combined with a logical 'AND'. */
export interface auction_bool_exp {_and?: (auction_bool_exp[] | null),_not?: (auction_bool_exp | null),_or?: (auction_bool_exp[] | null),auction_bid_table?: (auction_bid_table_bool_exp | null),auction_bids?: (auction_bid_bool_exp | null),auction_bids_aggregate?: (auction_bid_aggregate_bool_exp | null),bid_table_id?: (Int_comparison_exp | null),bid_time_increment?: (Int_comparison_exp | null),cancelled_at?: (timestamptz_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),ends_at?: (timestamptz_comparison_exp | null),fulfilled_at?: (timestamptz_comparison_exp | null),id?: (Int_comparison_exp | null),min_duration?: (Int_comparison_exp | null),objkt?: (objkt_bool_exp | null),objkt_id?: (String_comparison_exp | null),objkt_issuer_version?: (generative_token_version_comparison_exp | null),reserve_price?: (bigint_comparison_exp | null),seller_id?: (String_comparison_exp | null),user?: (user_bool_exp | null),version?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "auction" */
export interface auction_inc_input {bid_table_id?: (Scalars['Int'] | null),bid_time_increment?: (Scalars['Int'] | null),id?: (Scalars['Int'] | null),min_duration?: (Scalars['Int'] | null),reserve_price?: (Scalars['bigint'] | null),version?: (Scalars['Int'] | null)}


/** input type for inserting data into table "auction" */
export interface auction_insert_input {auction_bid_table?: (auction_bid_table_obj_rel_insert_input | null),auction_bids?: (auction_bid_arr_rel_insert_input | null),bid_table_id?: (Scalars['Int'] | null),bid_time_increment?: (Scalars['Int'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),ends_at?: (Scalars['timestamptz'] | null),fulfilled_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),min_duration?: (Scalars['Int'] | null),objkt?: (objkt_obj_rel_insert_input | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),reserve_price?: (Scalars['bigint'] | null),seller_id?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null),version?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface auction_max_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    ends_at?: boolean | number
    fulfilled_at?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    reserve_price?: boolean | number
    seller_id?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "auction" */
export interface auction_max_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),ends_at?: (order_by | null),fulfilled_at?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),reserve_price?: (order_by | null),seller_id?: (order_by | null),version?: (order_by | null)}


/** aggregate min on columns */
export interface auction_min_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    ends_at?: boolean | number
    fulfilled_at?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    reserve_price?: boolean | number
    seller_id?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "auction" */
export interface auction_min_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),ends_at?: (order_by | null),fulfilled_at?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),reserve_price?: (order_by | null),seller_id?: (order_by | null),version?: (order_by | null)}


/** response of any mutation on the table "auction" */
export interface auction_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: auctionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "auction" */
export interface auction_obj_rel_insert_input {data: auction_insert_input,
/** upsert condition */
on_conflict?: (auction_on_conflict | null)}


/** on_conflict condition type for table "auction" */
export interface auction_on_conflict {constraint: auction_constraint,update_columns?: auction_update_column[],where?: (auction_bool_exp | null)}


/** Ordering options when selecting data from "auction". */
export interface auction_order_by {auction_bid_table?: (auction_bid_table_order_by | null),auction_bids_aggregate?: (auction_bid_aggregate_order_by | null),bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),ends_at?: (order_by | null),fulfilled_at?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),objkt?: (objkt_order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),reserve_price?: (order_by | null),seller_id?: (order_by | null),user?: (user_order_by | null),version?: (order_by | null)}


/** primary key columns input for table: auction */
export interface auction_pk_columns_input {id: Scalars['Int'],version: Scalars['Int']}


/** input type for updating data in table "auction" */
export interface auction_set_input {bid_table_id?: (Scalars['Int'] | null),bid_time_increment?: (Scalars['Int'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),ends_at?: (Scalars['timestamptz'] | null),fulfilled_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),min_duration?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),reserve_price?: (Scalars['bigint'] | null),seller_id?: (Scalars['String'] | null),version?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface auction_stddev_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "auction" */
export interface auction_stddev_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface auction_stddev_pop_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "auction" */
export interface auction_stddev_pop_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface auction_stddev_samp_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "auction" */
export interface auction_stddev_samp_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}


/** Streaming cursor of the table "auction" */
export interface auction_stream_cursor_input {
/** Stream column input with initial value */
initial_value: auction_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface auction_stream_cursor_value_input {bid_table_id?: (Scalars['Int'] | null),bid_time_increment?: (Scalars['Int'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),ends_at?: (Scalars['timestamptz'] | null),fulfilled_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),min_duration?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),reserve_price?: (Scalars['bigint'] | null),seller_id?: (Scalars['String'] | null),version?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface auction_sum_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "auction" */
export interface auction_sum_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}

export interface auction_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (auction_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (auction_set_input | null),
/** filter the rows which have to be updated */
where: auction_bool_exp}


/** aggregate var_pop on columns */
export interface auction_var_pop_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "auction" */
export interface auction_var_pop_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}


/** aggregate var_samp on columns */
export interface auction_var_samp_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "auction" */
export interface auction_var_samp_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}


/** aggregate variance on columns */
export interface auction_variance_fieldsGenqlSelection{
    bid_table_id?: boolean | number
    bid_time_increment?: boolean | number
    id?: boolean | number
    min_duration?: boolean | number
    reserve_price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "auction" */
export interface auction_variance_order_by {bid_table_id?: (order_by | null),bid_time_increment?: (order_by | null),id?: (order_by | null),min_duration?: (order_by | null),reserve_price?: (order_by | null),version?: (order_by | null)}


/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export interface bigint_comparison_exp {_eq?: (Scalars['bigint'] | null),_gt?: (Scalars['bigint'] | null),_gte?: (Scalars['bigint'] | null),_in?: (Scalars['bigint'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['bigint'] | null),_lte?: (Scalars['bigint'] | null),_neq?: (Scalars['bigint'] | null),_nin?: (Scalars['bigint'][] | null)}


/** Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'. */
export interface bpchar_comparison_exp {_eq?: (Scalars['bpchar'] | null),_gt?: (Scalars['bpchar'] | null),_gte?: (Scalars['bpchar'] | null),
/** does the column match the given case-insensitive pattern */
_ilike?: (Scalars['bpchar'] | null),_in?: (Scalars['bpchar'][] | null),
/** does the column match the given POSIX regular expression, case insensitive */
_iregex?: (Scalars['bpchar'] | null),_is_null?: (Scalars['Boolean'] | null),
/** does the column match the given pattern */
_like?: (Scalars['bpchar'] | null),_lt?: (Scalars['bpchar'] | null),_lte?: (Scalars['bpchar'] | null),_neq?: (Scalars['bpchar'] | null),
/** does the column NOT match the given case-insensitive pattern */
_nilike?: (Scalars['bpchar'] | null),_nin?: (Scalars['bpchar'][] | null),
/** does the column NOT match the given POSIX regular expression, case insensitive */
_niregex?: (Scalars['bpchar'] | null),
/** does the column NOT match the given pattern */
_nlike?: (Scalars['bpchar'] | null),
/** does the column NOT match the given POSIX regular expression, case sensitive */
_nregex?: (Scalars['bpchar'] | null),
/** does the column NOT match the given SQL regular expression */
_nsimilar?: (Scalars['bpchar'] | null),
/** does the column match the given POSIX regular expression, case sensitive */
_regex?: (Scalars['bpchar'] | null),
/** does the column match the given SQL regular expression */
_similar?: (Scalars['bpchar'] | null)}


/** columns and relationships of "codex" */
export interface codexGenqlSelection{
    author_id?: boolean | number
    /** An array relationship */
    generative_tokens?: (generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** An aggregate relationship */
    generative_tokens_aggregate?: (generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    id?: boolean | number
    locked?: boolean | number
    token_version?: boolean | number
    type?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "codex" */
export interface codex_aggregateGenqlSelection{
    aggregate?: codex_aggregate_fieldsGenqlSelection
    nodes?: codexGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface codex_aggregate_bool_exp {bool_and?: (codex_aggregate_bool_exp_bool_and | null),bool_or?: (codex_aggregate_bool_exp_bool_or | null),count?: (codex_aggregate_bool_exp_count | null)}

export interface codex_aggregate_bool_exp_bool_and {arguments: codex_select_column_codex_aggregate_bool_exp_bool_and_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (codex_bool_exp | null),predicate: Boolean_comparison_exp}

export interface codex_aggregate_bool_exp_bool_or {arguments: codex_select_column_codex_aggregate_bool_exp_bool_or_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (codex_bool_exp | null),predicate: Boolean_comparison_exp}

export interface codex_aggregate_bool_exp_count {arguments?: (codex_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (codex_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "codex" */
export interface codex_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (codex_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: codex_max_fieldsGenqlSelection
    min?: codex_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "codex" */
export interface codex_aggregate_order_by {count?: (order_by | null),max?: (codex_max_order_by | null),min?: (codex_min_order_by | null)}


/** input type for inserting array relation for remote table "codex" */
export interface codex_arr_rel_insert_input {data: codex_insert_input[],
/** upsert condition */
on_conflict?: (codex_on_conflict | null)}


/** Boolean expression to filter rows from the table "codex". All fields are combined with a logical 'AND'. */
export interface codex_bool_exp {_and?: (codex_bool_exp[] | null),_not?: (codex_bool_exp | null),_or?: (codex_bool_exp[] | null),author_id?: (String_comparison_exp | null),generative_tokens?: (generative_token_bool_exp | null),generative_tokens_aggregate?: (generative_token_aggregate_bool_exp | null),id?: (String_comparison_exp | null),locked?: (Boolean_comparison_exp | null),token_version?: (generative_token_version_comparison_exp | null),type?: (codex_type_enum_comparison_exp | null),user?: (user_bool_exp | null),value?: (String_comparison_exp | null)}


/** input type for inserting data into table "codex" */
export interface codex_insert_input {author_id?: (Scalars['String'] | null),generative_tokens?: (generative_token_arr_rel_insert_input | null),id?: (Scalars['String'] | null),locked?: (Scalars['Boolean'] | null),token_version?: (Scalars['generative_token_version'] | null),type?: (Scalars['codex_type_enum'] | null),user?: (user_obj_rel_insert_input | null),value?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface codex_max_fieldsGenqlSelection{
    author_id?: boolean | number
    id?: boolean | number
    token_version?: boolean | number
    type?: boolean | number
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "codex" */
export interface codex_max_order_by {author_id?: (order_by | null),id?: (order_by | null),token_version?: (order_by | null),type?: (order_by | null),value?: (order_by | null)}


/** aggregate min on columns */
export interface codex_min_fieldsGenqlSelection{
    author_id?: boolean | number
    id?: boolean | number
    token_version?: boolean | number
    type?: boolean | number
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "codex" */
export interface codex_min_order_by {author_id?: (order_by | null),id?: (order_by | null),token_version?: (order_by | null),type?: (order_by | null),value?: (order_by | null)}


/** response of any mutation on the table "codex" */
export interface codex_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: codexGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "codex" */
export interface codex_obj_rel_insert_input {data: codex_insert_input,
/** upsert condition */
on_conflict?: (codex_on_conflict | null)}


/** on_conflict condition type for table "codex" */
export interface codex_on_conflict {constraint: codex_constraint,update_columns?: codex_update_column[],where?: (codex_bool_exp | null)}


/** Ordering options when selecting data from "codex". */
export interface codex_order_by {author_id?: (order_by | null),generative_tokens_aggregate?: (generative_token_aggregate_order_by | null),id?: (order_by | null),locked?: (order_by | null),token_version?: (order_by | null),type?: (order_by | null),user?: (user_order_by | null),value?: (order_by | null)}


/** primary key columns input for table: codex */
export interface codex_pk_columns_input {id: Scalars['String'],token_version: Scalars['generative_token_version']}


/** input type for updating data in table "codex" */
export interface codex_set_input {author_id?: (Scalars['String'] | null),id?: (Scalars['String'] | null),locked?: (Scalars['Boolean'] | null),token_version?: (Scalars['generative_token_version'] | null),type?: (Scalars['codex_type_enum'] | null),value?: (Scalars['String'] | null)}


/** Streaming cursor of the table "codex" */
export interface codex_stream_cursor_input {
/** Stream column input with initial value */
initial_value: codex_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface codex_stream_cursor_value_input {author_id?: (Scalars['String'] | null),id?: (Scalars['String'] | null),locked?: (Scalars['Boolean'] | null),token_version?: (Scalars['generative_token_version'] | null),type?: (Scalars['codex_type_enum'] | null),value?: (Scalars['String'] | null)}


/** Boolean expression to compare columns of type "codex_type_enum". All fields are combined with logical 'AND'. */
export interface codex_type_enum_comparison_exp {_eq?: (Scalars['codex_type_enum'] | null),_gt?: (Scalars['codex_type_enum'] | null),_gte?: (Scalars['codex_type_enum'] | null),_in?: (Scalars['codex_type_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['codex_type_enum'] | null),_lte?: (Scalars['codex_type_enum'] | null),_neq?: (Scalars['codex_type_enum'] | null),_nin?: (Scalars['codex_type_enum'][] | null)}


/** columns and relationships of "codex_update_request" */
export interface codex_update_requestGenqlSelection{
    codex_id?: boolean | number
    created_at?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    status?: boolean | number
    token_id?: boolean | number
    token_version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "codex_update_request" */
export interface codex_update_request_aggregateGenqlSelection{
    aggregate?: codex_update_request_aggregate_fieldsGenqlSelection
    nodes?: codex_update_requestGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface codex_update_request_aggregate_bool_exp {count?: (codex_update_request_aggregate_bool_exp_count | null)}

export interface codex_update_request_aggregate_bool_exp_count {arguments?: (codex_update_request_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (codex_update_request_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "codex_update_request" */
export interface codex_update_request_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (codex_update_request_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: codex_update_request_max_fieldsGenqlSelection
    min?: codex_update_request_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "codex_update_request" */
export interface codex_update_request_aggregate_order_by {count?: (order_by | null),max?: (codex_update_request_max_order_by | null),min?: (codex_update_request_min_order_by | null)}


/** input type for inserting array relation for remote table "codex_update_request" */
export interface codex_update_request_arr_rel_insert_input {data: codex_update_request_insert_input[],
/** upsert condition */
on_conflict?: (codex_update_request_on_conflict | null)}


/** Boolean expression to filter rows from the table "codex_update_request". All fields are combined with a logical 'AND'. */
export interface codex_update_request_bool_exp {_and?: (codex_update_request_bool_exp[] | null),_not?: (codex_update_request_bool_exp | null),_or?: (codex_update_request_bool_exp[] | null),codex_id?: (String_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),status?: (codex_update_request_status_enum_comparison_exp | null),token_id?: (String_comparison_exp | null),token_version?: (generative_token_version_comparison_exp | null)}


/** input type for inserting data into table "codex_update_request" */
export interface codex_update_request_insert_input {codex_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),status?: (Scalars['codex_update_request_status_enum'] | null),token_id?: (Scalars['String'] | null),token_version?: (Scalars['generative_token_version'] | null)}


/** aggregate max on columns */
export interface codex_update_request_max_fieldsGenqlSelection{
    codex_id?: boolean | number
    created_at?: boolean | number
    status?: boolean | number
    token_id?: boolean | number
    token_version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "codex_update_request" */
export interface codex_update_request_max_order_by {codex_id?: (order_by | null),created_at?: (order_by | null),status?: (order_by | null),token_id?: (order_by | null),token_version?: (order_by | null)}


/** aggregate min on columns */
export interface codex_update_request_min_fieldsGenqlSelection{
    codex_id?: boolean | number
    created_at?: boolean | number
    status?: boolean | number
    token_id?: boolean | number
    token_version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "codex_update_request" */
export interface codex_update_request_min_order_by {codex_id?: (order_by | null),created_at?: (order_by | null),status?: (order_by | null),token_id?: (order_by | null),token_version?: (order_by | null)}


/** response of any mutation on the table "codex_update_request" */
export interface codex_update_request_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: codex_update_requestGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "codex_update_request" */
export interface codex_update_request_on_conflict {constraint: codex_update_request_constraint,update_columns?: codex_update_request_update_column[],where?: (codex_update_request_bool_exp | null)}


/** Ordering options when selecting data from "codex_update_request". */
export interface codex_update_request_order_by {codex_id?: (order_by | null),created_at?: (order_by | null),generative_token?: (generative_token_order_by | null),status?: (order_by | null),token_id?: (order_by | null),token_version?: (order_by | null)}


/** primary key columns input for table: codex_update_request */
export interface codex_update_request_pk_columns_input {codex_id: Scalars['String'],token_id: Scalars['String'],token_version: Scalars['generative_token_version']}


/** input type for updating data in table "codex_update_request" */
export interface codex_update_request_set_input {codex_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),status?: (Scalars['codex_update_request_status_enum'] | null),token_id?: (Scalars['String'] | null),token_version?: (Scalars['generative_token_version'] | null)}


/** Boolean expression to compare columns of type "codex_update_request_status_enum". All fields are combined with logical 'AND'. */
export interface codex_update_request_status_enum_comparison_exp {_eq?: (Scalars['codex_update_request_status_enum'] | null),_gt?: (Scalars['codex_update_request_status_enum'] | null),_gte?: (Scalars['codex_update_request_status_enum'] | null),_in?: (Scalars['codex_update_request_status_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['codex_update_request_status_enum'] | null),_lte?: (Scalars['codex_update_request_status_enum'] | null),_neq?: (Scalars['codex_update_request_status_enum'] | null),_nin?: (Scalars['codex_update_request_status_enum'][] | null)}


/** Streaming cursor of the table "codex_update_request" */
export interface codex_update_request_stream_cursor_input {
/** Stream column input with initial value */
initial_value: codex_update_request_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface codex_update_request_stream_cursor_value_input {codex_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),status?: (Scalars['codex_update_request_status_enum'] | null),token_id?: (Scalars['String'] | null),token_version?: (Scalars['generative_token_version'] | null)}

export interface codex_update_request_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (codex_update_request_set_input | null),
/** filter the rows which have to be updated */
where: codex_update_request_bool_exp}

export interface codex_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (codex_set_input | null),
/** filter the rows which have to be updated */
where: codex_bool_exp}


/** columns and relationships of "collaboration" */
export interface collaborationGenqlSelection{
    collaboration_contract_id?: boolean | number
    collaborator_id?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    /** An object relationship */
    userByCollaboratorId?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "collaboration" */
export interface collaboration_aggregateGenqlSelection{
    aggregate?: collaboration_aggregate_fieldsGenqlSelection
    nodes?: collaborationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface collaboration_aggregate_bool_exp {count?: (collaboration_aggregate_bool_exp_count | null)}

export interface collaboration_aggregate_bool_exp_count {arguments?: (collaboration_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (collaboration_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "collaboration" */
export interface collaboration_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (collaboration_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: collaboration_max_fieldsGenqlSelection
    min?: collaboration_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "collaboration" */
export interface collaboration_aggregate_order_by {count?: (order_by | null),max?: (collaboration_max_order_by | null),min?: (collaboration_min_order_by | null)}


/** input type for inserting array relation for remote table "collaboration" */
export interface collaboration_arr_rel_insert_input {data: collaboration_insert_input[],
/** upsert condition */
on_conflict?: (collaboration_on_conflict | null)}


/** Boolean expression to filter rows from the table "collaboration". All fields are combined with a logical 'AND'. */
export interface collaboration_bool_exp {_and?: (collaboration_bool_exp[] | null),_not?: (collaboration_bool_exp | null),_or?: (collaboration_bool_exp[] | null),collaboration_contract_id?: (String_comparison_exp | null),collaborator_id?: (String_comparison_exp | null),user?: (user_bool_exp | null),userByCollaboratorId?: (user_bool_exp | null)}


/** input type for inserting data into table "collaboration" */
export interface collaboration_insert_input {collaboration_contract_id?: (Scalars['String'] | null),collaborator_id?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null),userByCollaboratorId?: (user_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface collaboration_max_fieldsGenqlSelection{
    collaboration_contract_id?: boolean | number
    collaborator_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "collaboration" */
export interface collaboration_max_order_by {collaboration_contract_id?: (order_by | null),collaborator_id?: (order_by | null)}


/** aggregate min on columns */
export interface collaboration_min_fieldsGenqlSelection{
    collaboration_contract_id?: boolean | number
    collaborator_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "collaboration" */
export interface collaboration_min_order_by {collaboration_contract_id?: (order_by | null),collaborator_id?: (order_by | null)}


/** response of any mutation on the table "collaboration" */
export interface collaboration_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: collaborationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "collaboration" */
export interface collaboration_on_conflict {constraint: collaboration_constraint,update_columns?: collaboration_update_column[],where?: (collaboration_bool_exp | null)}


/** Ordering options when selecting data from "collaboration". */
export interface collaboration_order_by {collaboration_contract_id?: (order_by | null),collaborator_id?: (order_by | null),user?: (user_order_by | null),userByCollaboratorId?: (user_order_by | null)}


/** primary key columns input for table: collaboration */
export interface collaboration_pk_columns_input {collaboration_contract_id: Scalars['String'],collaborator_id: Scalars['String']}


/** input type for updating data in table "collaboration" */
export interface collaboration_set_input {collaboration_contract_id?: (Scalars['String'] | null),collaborator_id?: (Scalars['String'] | null)}


/** Streaming cursor of the table "collaboration" */
export interface collaboration_stream_cursor_input {
/** Stream column input with initial value */
initial_value: collaboration_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface collaboration_stream_cursor_value_input {collaboration_contract_id?: (Scalars['String'] | null),collaborator_id?: (Scalars['String'] | null)}

export interface collaboration_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (collaboration_set_input | null),
/** filter the rows which have to be updated */
where: collaboration_bool_exp}


/** columns and relationships of "collection_offer" */
export interface collection_offerGenqlSelection{
    amount?: boolean | number
    buyer_id?: boolean | number
    cancelled_at?: boolean | number
    completed_at?: boolean | number
    created_at?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    token_id?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "collection_offer" */
export interface collection_offer_aggregateGenqlSelection{
    aggregate?: collection_offer_aggregate_fieldsGenqlSelection
    nodes?: collection_offerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface collection_offer_aggregate_bool_exp {count?: (collection_offer_aggregate_bool_exp_count | null)}

export interface collection_offer_aggregate_bool_exp_count {arguments?: (collection_offer_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (collection_offer_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "collection_offer" */
export interface collection_offer_aggregate_fieldsGenqlSelection{
    avg?: collection_offer_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (collection_offer_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: collection_offer_max_fieldsGenqlSelection
    min?: collection_offer_min_fieldsGenqlSelection
    stddev?: collection_offer_stddev_fieldsGenqlSelection
    stddev_pop?: collection_offer_stddev_pop_fieldsGenqlSelection
    stddev_samp?: collection_offer_stddev_samp_fieldsGenqlSelection
    sum?: collection_offer_sum_fieldsGenqlSelection
    var_pop?: collection_offer_var_pop_fieldsGenqlSelection
    var_samp?: collection_offer_var_samp_fieldsGenqlSelection
    variance?: collection_offer_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "collection_offer" */
export interface collection_offer_aggregate_order_by {avg?: (collection_offer_avg_order_by | null),count?: (order_by | null),max?: (collection_offer_max_order_by | null),min?: (collection_offer_min_order_by | null),stddev?: (collection_offer_stddev_order_by | null),stddev_pop?: (collection_offer_stddev_pop_order_by | null),stddev_samp?: (collection_offer_stddev_samp_order_by | null),sum?: (collection_offer_sum_order_by | null),var_pop?: (collection_offer_var_pop_order_by | null),var_samp?: (collection_offer_var_samp_order_by | null),variance?: (collection_offer_variance_order_by | null)}


/** input type for inserting array relation for remote table "collection_offer" */
export interface collection_offer_arr_rel_insert_input {data: collection_offer_insert_input[],
/** upsert condition */
on_conflict?: (collection_offer_on_conflict | null)}


/** aggregate avg on columns */
export interface collection_offer_avg_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "collection_offer" */
export interface collection_offer_avg_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** Boolean expression to filter rows from the table "collection_offer". All fields are combined with a logical 'AND'. */
export interface collection_offer_bool_exp {_and?: (collection_offer_bool_exp[] | null),_not?: (collection_offer_bool_exp | null),_or?: (collection_offer_bool_exp[] | null),amount?: (numeric_comparison_exp | null),buyer_id?: (String_comparison_exp | null),cancelled_at?: (timestamptz_comparison_exp | null),completed_at?: (timestamptz_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),id?: (String_comparison_exp | null),initial_amount?: (numeric_comparison_exp | null),price?: (numeric_comparison_exp | null),token_id?: (String_comparison_exp | null),user?: (user_bool_exp | null),version?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "collection_offer" */
export interface collection_offer_inc_input {amount?: (Scalars['numeric'] | null),initial_amount?: (Scalars['numeric'] | null),price?: (Scalars['numeric'] | null),version?: (Scalars['Int'] | null)}


/** input type for inserting data into table "collection_offer" */
export interface collection_offer_insert_input {amount?: (Scalars['numeric'] | null),buyer_id?: (Scalars['String'] | null),cancelled_at?: (Scalars['timestamptz'] | null),completed_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['String'] | null),initial_amount?: (Scalars['numeric'] | null),price?: (Scalars['numeric'] | null),token_id?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null),version?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface collection_offer_max_fieldsGenqlSelection{
    amount?: boolean | number
    buyer_id?: boolean | number
    cancelled_at?: boolean | number
    completed_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    token_id?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "collection_offer" */
export interface collection_offer_max_order_by {amount?: (order_by | null),buyer_id?: (order_by | null),cancelled_at?: (order_by | null),completed_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),token_id?: (order_by | null),version?: (order_by | null)}


/** aggregate min on columns */
export interface collection_offer_min_fieldsGenqlSelection{
    amount?: boolean | number
    buyer_id?: boolean | number
    cancelled_at?: boolean | number
    completed_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    token_id?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "collection_offer" */
export interface collection_offer_min_order_by {amount?: (order_by | null),buyer_id?: (order_by | null),cancelled_at?: (order_by | null),completed_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),token_id?: (order_by | null),version?: (order_by | null)}


/** response of any mutation on the table "collection_offer" */
export interface collection_offer_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: collection_offerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "collection_offer" */
export interface collection_offer_on_conflict {constraint: collection_offer_constraint,update_columns?: collection_offer_update_column[],where?: (collection_offer_bool_exp | null)}


/** Ordering options when selecting data from "collection_offer". */
export interface collection_offer_order_by {amount?: (order_by | null),buyer_id?: (order_by | null),cancelled_at?: (order_by | null),completed_at?: (order_by | null),created_at?: (order_by | null),generative_token?: (generative_token_order_by | null),id?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),token_id?: (order_by | null),user?: (user_order_by | null),version?: (order_by | null)}


/** primary key columns input for table: collection_offer */
export interface collection_offer_pk_columns_input {id: Scalars['String'],version: Scalars['Int']}


/** input type for updating data in table "collection_offer" */
export interface collection_offer_set_input {amount?: (Scalars['numeric'] | null),buyer_id?: (Scalars['String'] | null),cancelled_at?: (Scalars['timestamptz'] | null),completed_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),initial_amount?: (Scalars['numeric'] | null),price?: (Scalars['numeric'] | null),token_id?: (Scalars['String'] | null),version?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface collection_offer_stddev_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "collection_offer" */
export interface collection_offer_stddev_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface collection_offer_stddev_pop_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "collection_offer" */
export interface collection_offer_stddev_pop_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface collection_offer_stddev_samp_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "collection_offer" */
export interface collection_offer_stddev_samp_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** Streaming cursor of the table "collection_offer" */
export interface collection_offer_stream_cursor_input {
/** Stream column input with initial value */
initial_value: collection_offer_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface collection_offer_stream_cursor_value_input {amount?: (Scalars['numeric'] | null),buyer_id?: (Scalars['String'] | null),cancelled_at?: (Scalars['timestamptz'] | null),completed_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),initial_amount?: (Scalars['numeric'] | null),price?: (Scalars['numeric'] | null),token_id?: (Scalars['String'] | null),version?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface collection_offer_sum_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "collection_offer" */
export interface collection_offer_sum_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}

export interface collection_offer_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (collection_offer_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (collection_offer_set_input | null),
/** filter the rows which have to be updated */
where: collection_offer_bool_exp}


/** aggregate var_pop on columns */
export interface collection_offer_var_pop_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "collection_offer" */
export interface collection_offer_var_pop_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** aggregate var_samp on columns */
export interface collection_offer_var_samp_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "collection_offer" */
export interface collection_offer_var_samp_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** aggregate variance on columns */
export interface collection_offer_variance_fieldsGenqlSelection{
    amount?: boolean | number
    initial_amount?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "collection_offer" */
export interface collection_offer_variance_order_by {amount?: (order_by | null),initial_amount?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export interface float8_comparison_exp {_eq?: (Scalars['float8'] | null),_gt?: (Scalars['float8'] | null),_gte?: (Scalars['float8'] | null),_in?: (Scalars['float8'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['float8'] | null),_lte?: (Scalars['float8'] | null),_neq?: (Scalars['float8'] | null),_nin?: (Scalars['float8'][] | null)}


/** columns and relationships of "generative_token" */
export interface generative_tokenGenqlSelection{
    /** An array relationship */
    actions?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An aggregate relationship */
    actions_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    author_id?: boolean | number
    balance?: boolean | number
    captureMediaId?: boolean | number
    /** An object relationship */
    codex?: codexGenqlSelection
    codexId?: boolean | number
    codex_id?: boolean | number
    /** An array relationship */
    codex_update_requests?: (codex_update_requestGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_update_request_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_update_request_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_update_request_bool_exp | null)} })
    /** An aggregate relationship */
    codex_update_requests_aggregate?: (codex_update_request_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_update_request_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_update_request_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_update_request_bool_exp | null)} })
    /** An array relationship */
    collection_offers?: (collection_offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    /** An aggregate relationship */
    collection_offers_aggregate?: (collection_offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    created_at?: boolean | number
    display_uri?: boolean | number
    enabled?: boolean | number
    flag?: boolean | number
    generative_uri?: boolean | number
    id?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    labels?: boolean | number
    lock_end?: boolean | number
    lock_price_for_reserves?: boolean | number
    locked_seconds?: boolean | number
    /** An object relationship */
    market_stat?: market_statsGenqlSelection
    /** An array relationship */
    market_stats_histories?: (market_stats_historyGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An aggregate relationship */
    market_stats_histories_aggregate?: (market_stats_history_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An object relationship */
    media_image?: media_imageGenqlSelection
    metadata?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    metadata_uri?: boolean | number
    mint_opens_at?: boolean | number
    /** An array relationship */
    mint_ticket_settings?: (mint_ticket_settingsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** An aggregate relationship */
    mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** An array relationship */
    mint_tickets?: (mint_ticketGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** An aggregate relationship */
    mint_tickets_aggregate?: (mint_ticket_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** An object relationship */
    moderation_reason?: moderation_reasonGenqlSelection
    moderation_reason_id?: boolean | number
    name?: boolean | number
    /** An array relationship */
    objkts?: (objktGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** An aggregate relationship */
    objkts_aggregate?: (objkt_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    open_editions?: boolean | number
    open_editions_ends_at?: boolean | number
    original_supply?: boolean | number
    params_definition?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    preview_input_bytes?: boolean | number
    /** An array relationship */
    pricing_dutch_auctions?: (pricing_dutch_auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_dutch_auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_dutch_auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_dutch_auction_bool_exp | null)} })
    /** An aggregate relationship */
    pricing_dutch_auctions_aggregate?: (pricing_dutch_auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_dutch_auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_dutch_auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_dutch_auction_bool_exp | null)} })
    /** An array relationship */
    pricing_fixeds?: (pricing_fixedGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_fixed_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_fixed_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_fixed_bool_exp | null)} })
    /** An aggregate relationship */
    pricing_fixeds_aggregate?: (pricing_fixed_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_fixed_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_fixed_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_fixed_bool_exp | null)} })
    /** An array relationship */
    redeemables?: (redeemableGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redeemable_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redeemable_order_by[] | null), 
    /** filter the rows returned */
    where?: (redeemable_bool_exp | null)} })
    /** An aggregate relationship */
    redeemables_aggregate?: (redeemable_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redeemable_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redeemable_order_by[] | null), 
    /** filter the rows returned */
    where?: (redeemable_bool_exp | null)} })
    /** An array relationship */
    reports?: (reportGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** An aggregate relationship */
    reports_aggregate?: (report_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** An array relationship */
    reserves?: (reserveGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (reserve_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (reserve_order_by[] | null), 
    /** filter the rows returned */
    where?: (reserve_bool_exp | null)} })
    /** An aggregate relationship */
    reserves_aggregate?: (reserve_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (reserve_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (reserve_order_by[] | null), 
    /** filter the rows returned */
    where?: (reserve_bool_exp | null)} })
    royalties?: boolean | number
    slug?: boolean | number
    /** An array relationship */
    splits?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** An array relationship */
    splitsByGenerativeTokenPrimaryId?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** An aggregate relationship */
    splitsByGenerativeTokenPrimaryId_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** An aggregate relationship */
    splits_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    supply?: boolean | number
    tags?: boolean | number
    thumbnail_uri?: boolean | number
    /** An array relationship */
    transactions?: (transactionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** An aggregate relationship */
    transactions_aggregate?: (transaction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    updated_at?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "generative_token" */
export interface generative_token_aggregateGenqlSelection{
    aggregate?: generative_token_aggregate_fieldsGenqlSelection
    nodes?: generative_tokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface generative_token_aggregate_bool_exp {bool_and?: (generative_token_aggregate_bool_exp_bool_and | null),bool_or?: (generative_token_aggregate_bool_exp_bool_or | null),count?: (generative_token_aggregate_bool_exp_count | null)}

export interface generative_token_aggregate_bool_exp_bool_and {arguments: generative_token_select_column_generative_token_aggregate_bool_exp_bool_and_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (generative_token_bool_exp | null),predicate: Boolean_comparison_exp}

export interface generative_token_aggregate_bool_exp_bool_or {arguments: generative_token_select_column_generative_token_aggregate_bool_exp_bool_or_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (generative_token_bool_exp | null),predicate: Boolean_comparison_exp}

export interface generative_token_aggregate_bool_exp_count {arguments?: (generative_token_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (generative_token_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "generative_token" */
export interface generative_token_aggregate_fieldsGenqlSelection{
    avg?: generative_token_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (generative_token_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: generative_token_max_fieldsGenqlSelection
    min?: generative_token_min_fieldsGenqlSelection
    stddev?: generative_token_stddev_fieldsGenqlSelection
    stddev_pop?: generative_token_stddev_pop_fieldsGenqlSelection
    stddev_samp?: generative_token_stddev_samp_fieldsGenqlSelection
    sum?: generative_token_sum_fieldsGenqlSelection
    var_pop?: generative_token_var_pop_fieldsGenqlSelection
    var_samp?: generative_token_var_samp_fieldsGenqlSelection
    variance?: generative_token_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "generative_token" */
export interface generative_token_aggregate_order_by {avg?: (generative_token_avg_order_by | null),count?: (order_by | null),max?: (generative_token_max_order_by | null),min?: (generative_token_min_order_by | null),stddev?: (generative_token_stddev_order_by | null),stddev_pop?: (generative_token_stddev_pop_order_by | null),stddev_samp?: (generative_token_stddev_samp_order_by | null),sum?: (generative_token_sum_order_by | null),var_pop?: (generative_token_var_pop_order_by | null),var_samp?: (generative_token_var_samp_order_by | null),variance?: (generative_token_variance_order_by | null)}


/** input type for inserting array relation for remote table "generative_token" */
export interface generative_token_arr_rel_insert_input {data: generative_token_insert_input[],
/** upsert condition */
on_conflict?: (generative_token_on_conflict | null)}


/** aggregate avg on columns */
export interface generative_token_avg_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "generative_token" */
export interface generative_token_avg_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}


/** Boolean expression to filter rows from the table "generative_token". All fields are combined with a logical 'AND'. */
export interface generative_token_bool_exp {_and?: (generative_token_bool_exp[] | null),_not?: (generative_token_bool_exp | null),_or?: (generative_token_bool_exp[] | null),actions?: (action_bool_exp | null),actions_aggregate?: (action_aggregate_bool_exp | null),author_id?: (String_comparison_exp | null),balance?: (numeric_comparison_exp | null),captureMediaId?: (bpchar_comparison_exp | null),codex?: (codex_bool_exp | null),codexId?: (String_comparison_exp | null),codex_id?: (String_comparison_exp | null),codex_update_requests?: (codex_update_request_bool_exp | null),codex_update_requests_aggregate?: (codex_update_request_aggregate_bool_exp | null),collection_offers?: (collection_offer_bool_exp | null),collection_offers_aggregate?: (collection_offer_aggregate_bool_exp | null),created_at?: (timestamptz_comparison_exp | null),display_uri?: (String_comparison_exp | null),enabled?: (Boolean_comparison_exp | null),flag?: (generative_token_flag_enum_comparison_exp | null),generative_uri?: (String_comparison_exp | null),id?: (String_comparison_exp | null),input_bytes_size?: (Int_comparison_exp | null),iterations_count?: (numeric_comparison_exp | null),labels?: (_int4_comparison_exp | null),lock_end?: (timestamptz_comparison_exp | null),lock_price_for_reserves?: (Boolean_comparison_exp | null),locked_seconds?: (Int_comparison_exp | null),market_stat?: (market_stats_bool_exp | null),market_stats_histories?: (market_stats_history_bool_exp | null),market_stats_histories_aggregate?: (market_stats_history_aggregate_bool_exp | null),media_image?: (media_image_bool_exp | null),metadata?: (json_comparison_exp | null),metadata_uri?: (String_comparison_exp | null),mint_opens_at?: (timestamptz_comparison_exp | null),mint_ticket_settings?: (mint_ticket_settings_bool_exp | null),mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregate_bool_exp | null),mint_tickets?: (mint_ticket_bool_exp | null),mint_tickets_aggregate?: (mint_ticket_aggregate_bool_exp | null),moderation_reason?: (moderation_reason_bool_exp | null),moderation_reason_id?: (String_comparison_exp | null),name?: (String_comparison_exp | null),objkts?: (objkt_bool_exp | null),objkts_aggregate?: (objkt_aggregate_bool_exp | null),open_editions?: (Boolean_comparison_exp | null),open_editions_ends_at?: (timestamptz_comparison_exp | null),original_supply?: (numeric_comparison_exp | null),params_definition?: (json_comparison_exp | null),preview_input_bytes?: (String_comparison_exp | null),pricing_dutch_auctions?: (pricing_dutch_auction_bool_exp | null),pricing_dutch_auctions_aggregate?: (pricing_dutch_auction_aggregate_bool_exp | null),pricing_fixeds?: (pricing_fixed_bool_exp | null),pricing_fixeds_aggregate?: (pricing_fixed_aggregate_bool_exp | null),redeemables?: (redeemable_bool_exp | null),redeemables_aggregate?: (redeemable_aggregate_bool_exp | null),reports?: (report_bool_exp | null),reports_aggregate?: (report_aggregate_bool_exp | null),reserves?: (reserve_bool_exp | null),reserves_aggregate?: (reserve_aggregate_bool_exp | null),royalties?: (Int_comparison_exp | null),slug?: (String_comparison_exp | null),splits?: (split_bool_exp | null),splitsByGenerativeTokenPrimaryId?: (split_bool_exp | null),splitsByGenerativeTokenPrimaryId_aggregate?: (split_aggregate_bool_exp | null),splits_aggregate?: (split_aggregate_bool_exp | null),supply?: (numeric_comparison_exp | null),tags?: (_text_comparison_exp | null),thumbnail_uri?: (String_comparison_exp | null),transactions?: (transaction_bool_exp | null),transactions_aggregate?: (transaction_aggregate_bool_exp | null),updated_at?: (timestamptz_comparison_exp | null),user?: (user_bool_exp | null),version?: (generative_token_version_comparison_exp | null)}


/** Boolean expression to compare columns of type "generative_token_flag_enum". All fields are combined with logical 'AND'. */
export interface generative_token_flag_enum_comparison_exp {_eq?: (Scalars['generative_token_flag_enum'] | null),_gt?: (Scalars['generative_token_flag_enum'] | null),_gte?: (Scalars['generative_token_flag_enum'] | null),_in?: (Scalars['generative_token_flag_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['generative_token_flag_enum'] | null),_lte?: (Scalars['generative_token_flag_enum'] | null),_neq?: (Scalars['generative_token_flag_enum'] | null),_nin?: (Scalars['generative_token_flag_enum'][] | null)}


/** input type for incrementing numeric columns in table "generative_token" */
export interface generative_token_inc_input {balance?: (Scalars['numeric'] | null),input_bytes_size?: (Scalars['Int'] | null),iterations_count?: (Scalars['numeric'] | null),locked_seconds?: (Scalars['Int'] | null),original_supply?: (Scalars['numeric'] | null),royalties?: (Scalars['Int'] | null),supply?: (Scalars['numeric'] | null)}


/** input type for inserting data into table "generative_token" */
export interface generative_token_insert_input {actions?: (action_arr_rel_insert_input | null),author_id?: (Scalars['String'] | null),balance?: (Scalars['numeric'] | null),captureMediaId?: (Scalars['bpchar'] | null),codex?: (codex_obj_rel_insert_input | null),codexId?: (Scalars['String'] | null),codex_id?: (Scalars['String'] | null),codex_update_requests?: (codex_update_request_arr_rel_insert_input | null),collection_offers?: (collection_offer_arr_rel_insert_input | null),created_at?: (Scalars['timestamptz'] | null),display_uri?: (Scalars['String'] | null),enabled?: (Scalars['Boolean'] | null),flag?: (Scalars['generative_token_flag_enum'] | null),generative_uri?: (Scalars['String'] | null),id?: (Scalars['String'] | null),input_bytes_size?: (Scalars['Int'] | null),iterations_count?: (Scalars['numeric'] | null),labels?: (Scalars['_int4'] | null),lock_end?: (Scalars['timestamptz'] | null),lock_price_for_reserves?: (Scalars['Boolean'] | null),locked_seconds?: (Scalars['Int'] | null),market_stat?: (market_stats_obj_rel_insert_input | null),market_stats_histories?: (market_stats_history_arr_rel_insert_input | null),media_image?: (media_image_obj_rel_insert_input | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),mint_opens_at?: (Scalars['timestamptz'] | null),mint_ticket_settings?: (mint_ticket_settings_arr_rel_insert_input | null),mint_tickets?: (mint_ticket_arr_rel_insert_input | null),moderation_reason?: (moderation_reason_obj_rel_insert_input | null),moderation_reason_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),objkts?: (objkt_arr_rel_insert_input | null),open_editions?: (Scalars['Boolean'] | null),open_editions_ends_at?: (Scalars['timestamptz'] | null),original_supply?: (Scalars['numeric'] | null),params_definition?: (Scalars['json'] | null),preview_input_bytes?: (Scalars['String'] | null),pricing_dutch_auctions?: (pricing_dutch_auction_arr_rel_insert_input | null),pricing_fixeds?: (pricing_fixed_arr_rel_insert_input | null),redeemables?: (redeemable_arr_rel_insert_input | null),reports?: (report_arr_rel_insert_input | null),reserves?: (reserve_arr_rel_insert_input | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),splits?: (split_arr_rel_insert_input | null),splitsByGenerativeTokenPrimaryId?: (split_arr_rel_insert_input | null),supply?: (Scalars['numeric'] | null),tags?: (Scalars['_text'] | null),thumbnail_uri?: (Scalars['String'] | null),transactions?: (transaction_arr_rel_insert_input | null),updated_at?: (Scalars['timestamptz'] | null),user?: (user_obj_rel_insert_input | null),version?: (Scalars['generative_token_version'] | null)}


/** aggregate max on columns */
export interface generative_token_max_fieldsGenqlSelection{
    author_id?: boolean | number
    balance?: boolean | number
    captureMediaId?: boolean | number
    codexId?: boolean | number
    codex_id?: boolean | number
    created_at?: boolean | number
    display_uri?: boolean | number
    flag?: boolean | number
    generative_uri?: boolean | number
    id?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    lock_end?: boolean | number
    locked_seconds?: boolean | number
    metadata_uri?: boolean | number
    mint_opens_at?: boolean | number
    moderation_reason_id?: boolean | number
    name?: boolean | number
    open_editions_ends_at?: boolean | number
    original_supply?: boolean | number
    preview_input_bytes?: boolean | number
    royalties?: boolean | number
    slug?: boolean | number
    supply?: boolean | number
    thumbnail_uri?: boolean | number
    updated_at?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "generative_token" */
export interface generative_token_max_order_by {author_id?: (order_by | null),balance?: (order_by | null),captureMediaId?: (order_by | null),codexId?: (order_by | null),codex_id?: (order_by | null),created_at?: (order_by | null),display_uri?: (order_by | null),flag?: (order_by | null),generative_uri?: (order_by | null),id?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),lock_end?: (order_by | null),locked_seconds?: (order_by | null),metadata_uri?: (order_by | null),mint_opens_at?: (order_by | null),moderation_reason_id?: (order_by | null),name?: (order_by | null),open_editions_ends_at?: (order_by | null),original_supply?: (order_by | null),preview_input_bytes?: (order_by | null),royalties?: (order_by | null),slug?: (order_by | null),supply?: (order_by | null),thumbnail_uri?: (order_by | null),updated_at?: (order_by | null),version?: (order_by | null)}


/** aggregate min on columns */
export interface generative_token_min_fieldsGenqlSelection{
    author_id?: boolean | number
    balance?: boolean | number
    captureMediaId?: boolean | number
    codexId?: boolean | number
    codex_id?: boolean | number
    created_at?: boolean | number
    display_uri?: boolean | number
    flag?: boolean | number
    generative_uri?: boolean | number
    id?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    lock_end?: boolean | number
    locked_seconds?: boolean | number
    metadata_uri?: boolean | number
    mint_opens_at?: boolean | number
    moderation_reason_id?: boolean | number
    name?: boolean | number
    open_editions_ends_at?: boolean | number
    original_supply?: boolean | number
    preview_input_bytes?: boolean | number
    royalties?: boolean | number
    slug?: boolean | number
    supply?: boolean | number
    thumbnail_uri?: boolean | number
    updated_at?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "generative_token" */
export interface generative_token_min_order_by {author_id?: (order_by | null),balance?: (order_by | null),captureMediaId?: (order_by | null),codexId?: (order_by | null),codex_id?: (order_by | null),created_at?: (order_by | null),display_uri?: (order_by | null),flag?: (order_by | null),generative_uri?: (order_by | null),id?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),lock_end?: (order_by | null),locked_seconds?: (order_by | null),metadata_uri?: (order_by | null),mint_opens_at?: (order_by | null),moderation_reason_id?: (order_by | null),name?: (order_by | null),open_editions_ends_at?: (order_by | null),original_supply?: (order_by | null),preview_input_bytes?: (order_by | null),royalties?: (order_by | null),slug?: (order_by | null),supply?: (order_by | null),thumbnail_uri?: (order_by | null),updated_at?: (order_by | null),version?: (order_by | null)}


/** response of any mutation on the table "generative_token" */
export interface generative_token_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: generative_tokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "generative_token" */
export interface generative_token_obj_rel_insert_input {data: generative_token_insert_input,
/** upsert condition */
on_conflict?: (generative_token_on_conflict | null)}


/** on_conflict condition type for table "generative_token" */
export interface generative_token_on_conflict {constraint: generative_token_constraint,update_columns?: generative_token_update_column[],where?: (generative_token_bool_exp | null)}


/** Ordering options when selecting data from "generative_token". */
export interface generative_token_order_by {actions_aggregate?: (action_aggregate_order_by | null),author_id?: (order_by | null),balance?: (order_by | null),captureMediaId?: (order_by | null),codex?: (codex_order_by | null),codexId?: (order_by | null),codex_id?: (order_by | null),codex_update_requests_aggregate?: (codex_update_request_aggregate_order_by | null),collection_offers_aggregate?: (collection_offer_aggregate_order_by | null),created_at?: (order_by | null),display_uri?: (order_by | null),enabled?: (order_by | null),flag?: (order_by | null),generative_uri?: (order_by | null),id?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),labels?: (order_by | null),lock_end?: (order_by | null),lock_price_for_reserves?: (order_by | null),locked_seconds?: (order_by | null),market_stat?: (market_stats_order_by | null),market_stats_histories_aggregate?: (market_stats_history_aggregate_order_by | null),media_image?: (media_image_order_by | null),metadata?: (order_by | null),metadata_uri?: (order_by | null),mint_opens_at?: (order_by | null),mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregate_order_by | null),mint_tickets_aggregate?: (mint_ticket_aggregate_order_by | null),moderation_reason?: (moderation_reason_order_by | null),moderation_reason_id?: (order_by | null),name?: (order_by | null),objkts_aggregate?: (objkt_aggregate_order_by | null),open_editions?: (order_by | null),open_editions_ends_at?: (order_by | null),original_supply?: (order_by | null),params_definition?: (order_by | null),preview_input_bytes?: (order_by | null),pricing_dutch_auctions_aggregate?: (pricing_dutch_auction_aggregate_order_by | null),pricing_fixeds_aggregate?: (pricing_fixed_aggregate_order_by | null),redeemables_aggregate?: (redeemable_aggregate_order_by | null),reports_aggregate?: (report_aggregate_order_by | null),reserves_aggregate?: (reserve_aggregate_order_by | null),royalties?: (order_by | null),slug?: (order_by | null),splitsByGenerativeTokenPrimaryId_aggregate?: (split_aggregate_order_by | null),splits_aggregate?: (split_aggregate_order_by | null),supply?: (order_by | null),tags?: (order_by | null),thumbnail_uri?: (order_by | null),transactions_aggregate?: (transaction_aggregate_order_by | null),updated_at?: (order_by | null),user?: (user_order_by | null),version?: (order_by | null)}


/** primary key columns input for table: generative_token */
export interface generative_token_pk_columns_input {id: Scalars['String']}


/** input type for updating data in table "generative_token" */
export interface generative_token_set_input {author_id?: (Scalars['String'] | null),balance?: (Scalars['numeric'] | null),captureMediaId?: (Scalars['bpchar'] | null),codexId?: (Scalars['String'] | null),codex_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),display_uri?: (Scalars['String'] | null),enabled?: (Scalars['Boolean'] | null),flag?: (Scalars['generative_token_flag_enum'] | null),generative_uri?: (Scalars['String'] | null),id?: (Scalars['String'] | null),input_bytes_size?: (Scalars['Int'] | null),iterations_count?: (Scalars['numeric'] | null),labels?: (Scalars['_int4'] | null),lock_end?: (Scalars['timestamptz'] | null),lock_price_for_reserves?: (Scalars['Boolean'] | null),locked_seconds?: (Scalars['Int'] | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),mint_opens_at?: (Scalars['timestamptz'] | null),moderation_reason_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),open_editions?: (Scalars['Boolean'] | null),open_editions_ends_at?: (Scalars['timestamptz'] | null),original_supply?: (Scalars['numeric'] | null),params_definition?: (Scalars['json'] | null),preview_input_bytes?: (Scalars['String'] | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),supply?: (Scalars['numeric'] | null),tags?: (Scalars['_text'] | null),thumbnail_uri?: (Scalars['String'] | null),updated_at?: (Scalars['timestamptz'] | null),version?: (Scalars['generative_token_version'] | null)}


/** aggregate stddev on columns */
export interface generative_token_stddev_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "generative_token" */
export interface generative_token_stddev_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface generative_token_stddev_pop_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "generative_token" */
export interface generative_token_stddev_pop_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface generative_token_stddev_samp_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "generative_token" */
export interface generative_token_stddev_samp_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}


/** Streaming cursor of the table "generative_token" */
export interface generative_token_stream_cursor_input {
/** Stream column input with initial value */
initial_value: generative_token_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface generative_token_stream_cursor_value_input {author_id?: (Scalars['String'] | null),balance?: (Scalars['numeric'] | null),captureMediaId?: (Scalars['bpchar'] | null),codexId?: (Scalars['String'] | null),codex_id?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),display_uri?: (Scalars['String'] | null),enabled?: (Scalars['Boolean'] | null),flag?: (Scalars['generative_token_flag_enum'] | null),generative_uri?: (Scalars['String'] | null),id?: (Scalars['String'] | null),input_bytes_size?: (Scalars['Int'] | null),iterations_count?: (Scalars['numeric'] | null),labels?: (Scalars['_int4'] | null),lock_end?: (Scalars['timestamptz'] | null),lock_price_for_reserves?: (Scalars['Boolean'] | null),locked_seconds?: (Scalars['Int'] | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),mint_opens_at?: (Scalars['timestamptz'] | null),moderation_reason_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),open_editions?: (Scalars['Boolean'] | null),open_editions_ends_at?: (Scalars['timestamptz'] | null),original_supply?: (Scalars['numeric'] | null),params_definition?: (Scalars['json'] | null),preview_input_bytes?: (Scalars['String'] | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),supply?: (Scalars['numeric'] | null),tags?: (Scalars['_text'] | null),thumbnail_uri?: (Scalars['String'] | null),updated_at?: (Scalars['timestamptz'] | null),version?: (Scalars['generative_token_version'] | null)}


/** aggregate sum on columns */
export interface generative_token_sum_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "generative_token" */
export interface generative_token_sum_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}

export interface generative_token_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (generative_token_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (generative_token_set_input | null),
/** filter the rows which have to be updated */
where: generative_token_bool_exp}


/** aggregate var_pop on columns */
export interface generative_token_var_pop_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "generative_token" */
export interface generative_token_var_pop_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}


/** aggregate var_samp on columns */
export interface generative_token_var_samp_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "generative_token" */
export interface generative_token_var_samp_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}


/** aggregate variance on columns */
export interface generative_token_variance_fieldsGenqlSelection{
    balance?: boolean | number
    input_bytes_size?: boolean | number
    iterations_count?: boolean | number
    locked_seconds?: boolean | number
    original_supply?: boolean | number
    royalties?: boolean | number
    supply?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "generative_token" */
export interface generative_token_variance_order_by {balance?: (order_by | null),input_bytes_size?: (order_by | null),iterations_count?: (order_by | null),locked_seconds?: (order_by | null),original_supply?: (order_by | null),royalties?: (order_by | null),supply?: (order_by | null)}


/** Boolean expression to compare columns of type "generative_token_version". All fields are combined with logical 'AND'. */
export interface generative_token_version_comparison_exp {_eq?: (Scalars['generative_token_version'] | null),_gt?: (Scalars['generative_token_version'] | null),_gte?: (Scalars['generative_token_version'] | null),_in?: (Scalars['generative_token_version'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['generative_token_version'] | null),_lte?: (Scalars['generative_token_version'] | null),_neq?: (Scalars['generative_token_version'] | null),_nin?: (Scalars['generative_token_version'][] | null)}


/** columns and relationships of "gentk_assign" */
export interface gentk_assignGenqlSelection{
    assigned_at?: boolean | number
    attempts?: boolean | number
    created_at?: boolean | number
    gentk_id?: boolean | number
    gentk_issuer_version?: boolean | number
    /** An object relationship */
    objkt?: objktGenqlSelection
    retries?: boolean | number
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "gentk_assign" */
export interface gentk_assign_aggregateGenqlSelection{
    aggregate?: gentk_assign_aggregate_fieldsGenqlSelection
    nodes?: gentk_assignGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "gentk_assign" */
export interface gentk_assign_aggregate_fieldsGenqlSelection{
    avg?: gentk_assign_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (gentk_assign_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: gentk_assign_max_fieldsGenqlSelection
    min?: gentk_assign_min_fieldsGenqlSelection
    stddev?: gentk_assign_stddev_fieldsGenqlSelection
    stddev_pop?: gentk_assign_stddev_pop_fieldsGenqlSelection
    stddev_samp?: gentk_assign_stddev_samp_fieldsGenqlSelection
    sum?: gentk_assign_sum_fieldsGenqlSelection
    var_pop?: gentk_assign_var_pop_fieldsGenqlSelection
    var_samp?: gentk_assign_var_samp_fieldsGenqlSelection
    variance?: gentk_assign_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate avg on columns */
export interface gentk_assign_avg_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "gentk_assign". All fields are combined with a logical 'AND'. */
export interface gentk_assign_bool_exp {_and?: (gentk_assign_bool_exp[] | null),_not?: (gentk_assign_bool_exp | null),_or?: (gentk_assign_bool_exp[] | null),assigned_at?: (timestamptz_comparison_exp | null),attempts?: (Int_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),gentk_id?: (String_comparison_exp | null),gentk_issuer_version?: (generative_token_version_comparison_exp | null),objkt?: (objkt_bool_exp | null),retries?: (Int_comparison_exp | null),state?: (gentk_assign_state_enum_comparison_exp | null)}


/** input type for incrementing numeric columns in table "gentk_assign" */
export interface gentk_assign_inc_input {attempts?: (Scalars['Int'] | null),retries?: (Scalars['Int'] | null)}


/** input type for inserting data into table "gentk_assign" */
export interface gentk_assign_insert_input {assigned_at?: (Scalars['timestamptz'] | null),attempts?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),gentk_id?: (Scalars['String'] | null),gentk_issuer_version?: (Scalars['generative_token_version'] | null),objkt?: (objkt_obj_rel_insert_input | null),retries?: (Scalars['Int'] | null),state?: (Scalars['gentk_assign_state_enum'] | null)}


/** aggregate max on columns */
export interface gentk_assign_max_fieldsGenqlSelection{
    assigned_at?: boolean | number
    attempts?: boolean | number
    created_at?: boolean | number
    gentk_id?: boolean | number
    gentk_issuer_version?: boolean | number
    retries?: boolean | number
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface gentk_assign_min_fieldsGenqlSelection{
    assigned_at?: boolean | number
    attempts?: boolean | number
    created_at?: boolean | number
    gentk_id?: boolean | number
    gentk_issuer_version?: boolean | number
    retries?: boolean | number
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "gentk_assign" */
export interface gentk_assign_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: gentk_assignGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "gentk_assign" */
export interface gentk_assign_obj_rel_insert_input {data: gentk_assign_insert_input,
/** upsert condition */
on_conflict?: (gentk_assign_on_conflict | null)}


/** on_conflict condition type for table "gentk_assign" */
export interface gentk_assign_on_conflict {constraint: gentk_assign_constraint,update_columns?: gentk_assign_update_column[],where?: (gentk_assign_bool_exp | null)}


/** Ordering options when selecting data from "gentk_assign". */
export interface gentk_assign_order_by {assigned_at?: (order_by | null),attempts?: (order_by | null),created_at?: (order_by | null),gentk_id?: (order_by | null),gentk_issuer_version?: (order_by | null),objkt?: (objkt_order_by | null),retries?: (order_by | null),state?: (order_by | null)}


/** primary key columns input for table: gentk_assign */
export interface gentk_assign_pk_columns_input {gentk_id: Scalars['String'],gentk_issuer_version: Scalars['generative_token_version']}


/** input type for updating data in table "gentk_assign" */
export interface gentk_assign_set_input {assigned_at?: (Scalars['timestamptz'] | null),attempts?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),gentk_id?: (Scalars['String'] | null),gentk_issuer_version?: (Scalars['generative_token_version'] | null),retries?: (Scalars['Int'] | null),state?: (Scalars['gentk_assign_state_enum'] | null)}


/** Boolean expression to compare columns of type "gentk_assign_state_enum". All fields are combined with logical 'AND'. */
export interface gentk_assign_state_enum_comparison_exp {_eq?: (Scalars['gentk_assign_state_enum'] | null),_gt?: (Scalars['gentk_assign_state_enum'] | null),_gte?: (Scalars['gentk_assign_state_enum'] | null),_in?: (Scalars['gentk_assign_state_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['gentk_assign_state_enum'] | null),_lte?: (Scalars['gentk_assign_state_enum'] | null),_neq?: (Scalars['gentk_assign_state_enum'] | null),_nin?: (Scalars['gentk_assign_state_enum'][] | null)}


/** aggregate stddev on columns */
export interface gentk_assign_stddev_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_pop on columns */
export interface gentk_assign_stddev_pop_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_samp on columns */
export interface gentk_assign_stddev_samp_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Streaming cursor of the table "gentk_assign" */
export interface gentk_assign_stream_cursor_input {
/** Stream column input with initial value */
initial_value: gentk_assign_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface gentk_assign_stream_cursor_value_input {assigned_at?: (Scalars['timestamptz'] | null),attempts?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),gentk_id?: (Scalars['String'] | null),gentk_issuer_version?: (Scalars['generative_token_version'] | null),retries?: (Scalars['Int'] | null),state?: (Scalars['gentk_assign_state_enum'] | null)}


/** aggregate sum on columns */
export interface gentk_assign_sum_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface gentk_assign_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (gentk_assign_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (gentk_assign_set_input | null),
/** filter the rows which have to be updated */
where: gentk_assign_bool_exp}


/** aggregate var_pop on columns */
export interface gentk_assign_var_pop_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate var_samp on columns */
export interface gentk_assign_var_samp_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate variance on columns */
export interface gentk_assign_variance_fieldsGenqlSelection{
    attempts?: boolean | number
    retries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "ipfs_cid" */
export interface ipfs_cidGenqlSelection{
    cid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "ipfs_cid" */
export interface ipfs_cid_aggregateGenqlSelection{
    aggregate?: ipfs_cid_aggregate_fieldsGenqlSelection
    nodes?: ipfs_cidGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "ipfs_cid" */
export interface ipfs_cid_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (ipfs_cid_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: ipfs_cid_max_fieldsGenqlSelection
    min?: ipfs_cid_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "ipfs_cid". All fields are combined with a logical 'AND'. */
export interface ipfs_cid_bool_exp {_and?: (ipfs_cid_bool_exp[] | null),_not?: (ipfs_cid_bool_exp | null),_or?: (ipfs_cid_bool_exp[] | null),cid?: (String_comparison_exp | null)}


/** input type for inserting data into table "ipfs_cid" */
export interface ipfs_cid_insert_input {cid?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface ipfs_cid_max_fieldsGenqlSelection{
    cid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface ipfs_cid_min_fieldsGenqlSelection{
    cid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "ipfs_cid" */
export interface ipfs_cid_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: ipfs_cidGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "ipfs_cid" */
export interface ipfs_cid_on_conflict {constraint: ipfs_cid_constraint,update_columns?: ipfs_cid_update_column[],where?: (ipfs_cid_bool_exp | null)}


/** Ordering options when selecting data from "ipfs_cid". */
export interface ipfs_cid_order_by {cid?: (order_by | null)}


/** primary key columns input for table: ipfs_cid */
export interface ipfs_cid_pk_columns_input {cid: Scalars['String']}


/** input type for updating data in table "ipfs_cid" */
export interface ipfs_cid_set_input {cid?: (Scalars['String'] | null)}


/** Streaming cursor of the table "ipfs_cid" */
export interface ipfs_cid_stream_cursor_input {
/** Stream column input with initial value */
initial_value: ipfs_cid_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface ipfs_cid_stream_cursor_value_input {cid?: (Scalars['String'] | null)}

export interface ipfs_cid_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (ipfs_cid_set_input | null),
/** filter the rows which have to be updated */
where: ipfs_cid_bool_exp}


/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export interface json_comparison_exp {_eq?: (Scalars['json'] | null),_gt?: (Scalars['json'] | null),_gte?: (Scalars['json'] | null),_in?: (Scalars['json'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['json'] | null),_lte?: (Scalars['json'] | null),_neq?: (Scalars['json'] | null),_nin?: (Scalars['json'][] | null)}

export interface jsonb_cast_exp {String?: (String_comparison_exp | null)}


/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export interface jsonb_comparison_exp {_cast?: (jsonb_cast_exp | null),
/** is the column contained in the given json value */
_contained_in?: (Scalars['jsonb'] | null),
/** does the column contain the given json value at the top level */
_contains?: (Scalars['jsonb'] | null),_eq?: (Scalars['jsonb'] | null),_gt?: (Scalars['jsonb'] | null),_gte?: (Scalars['jsonb'] | null),
/** does the string exist as a top-level key in the column */
_has_key?: (Scalars['String'] | null),
/** do all of these strings exist as top-level keys in the column */
_has_keys_all?: (Scalars['String'][] | null),
/** do any of these strings exist as top-level keys in the column */
_has_keys_any?: (Scalars['String'][] | null),_in?: (Scalars['jsonb'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['jsonb'] | null),_lte?: (Scalars['jsonb'] | null),_neq?: (Scalars['jsonb'] | null),_nin?: (Scalars['jsonb'][] | null)}


/** columns and relationships of "listing" */
export interface listingGenqlSelection{
    accepted_at?: boolean | number
    accepted_by_id?: boolean | number
    amount?: boolean | number
    /** An object relationship */
    article?: articleGenqlSelection
    article_id?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    issuer_id?: boolean | number
    /** An object relationship */
    marketStatByIdVersion?: market_statsGenqlSelection
    /** An object relationship */
    marketStatByVersionId?: market_statsGenqlSelection
    /** An array relationship */
    marketStatsHistoriesByFloorlistingversionFloorlistingid?: (market_stats_historyGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An aggregate relationship */
    marketStatsHistoriesByFloorlistingversionFloorlistingid_aggregate?: (market_stats_history_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An array relationship */
    marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid?: (market_stats_historyGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An aggregate relationship */
    marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid_aggregate?: (market_stats_history_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An object relationship */
    market_stat?: market_statsGenqlSelection
    /** An array relationship */
    market_stats_histories?: (market_stats_historyGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An aggregate relationship */
    market_stats_histories_aggregate?: (market_stats_history_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** An object relationship */
    objkt?: objktGenqlSelection
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    /** An object relationship */
    userByAcceptedById?: userGenqlSelection
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "listing" */
export interface listing_aggregateGenqlSelection{
    aggregate?: listing_aggregate_fieldsGenqlSelection
    nodes?: listingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface listing_aggregate_bool_exp {count?: (listing_aggregate_bool_exp_count | null)}

export interface listing_aggregate_bool_exp_count {arguments?: (listing_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (listing_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "listing" */
export interface listing_aggregate_fieldsGenqlSelection{
    avg?: listing_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (listing_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: listing_max_fieldsGenqlSelection
    min?: listing_min_fieldsGenqlSelection
    stddev?: listing_stddev_fieldsGenqlSelection
    stddev_pop?: listing_stddev_pop_fieldsGenqlSelection
    stddev_samp?: listing_stddev_samp_fieldsGenqlSelection
    sum?: listing_sum_fieldsGenqlSelection
    var_pop?: listing_var_pop_fieldsGenqlSelection
    var_samp?: listing_var_samp_fieldsGenqlSelection
    variance?: listing_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "listing" */
export interface listing_aggregate_order_by {avg?: (listing_avg_order_by | null),count?: (order_by | null),max?: (listing_max_order_by | null),min?: (listing_min_order_by | null),stddev?: (listing_stddev_order_by | null),stddev_pop?: (listing_stddev_pop_order_by | null),stddev_samp?: (listing_stddev_samp_order_by | null),sum?: (listing_sum_order_by | null),var_pop?: (listing_var_pop_order_by | null),var_samp?: (listing_var_samp_order_by | null),variance?: (listing_variance_order_by | null)}


/** input type for inserting array relation for remote table "listing" */
export interface listing_arr_rel_insert_input {data: listing_insert_input[],
/** upsert condition */
on_conflict?: (listing_on_conflict | null)}


/** aggregate avg on columns */
export interface listing_avg_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "listing" */
export interface listing_avg_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** Boolean expression to filter rows from the table "listing". All fields are combined with a logical 'AND'. */
export interface listing_bool_exp {_and?: (listing_bool_exp[] | null),_not?: (listing_bool_exp | null),_or?: (listing_bool_exp[] | null),accepted_at?: (timestamptz_comparison_exp | null),accepted_by_id?: (String_comparison_exp | null),amount?: (numeric_comparison_exp | null),article?: (article_bool_exp | null),article_id?: (Int_comparison_exp | null),cancelled_at?: (timestamptz_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),id?: (String_comparison_exp | null),issuer_id?: (String_comparison_exp | null),marketStatByIdVersion?: (market_stats_bool_exp | null),marketStatByVersionId?: (market_stats_bool_exp | null),marketStatsHistoriesByFloorlistingversionFloorlistingid?: (market_stats_history_bool_exp | null),marketStatsHistoriesByFloorlistingversionFloorlistingid_aggregate?: (market_stats_history_aggregate_bool_exp | null),marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid?: (market_stats_history_bool_exp | null),marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid_aggregate?: (market_stats_history_aggregate_bool_exp | null),market_stat?: (market_stats_bool_exp | null),market_stats_histories?: (market_stats_history_bool_exp | null),market_stats_histories_aggregate?: (market_stats_history_aggregate_bool_exp | null),objkt?: (objkt_bool_exp | null),objkt_id?: (String_comparison_exp | null),objkt_issuer_version?: (generative_token_version_comparison_exp | null),price?: (numeric_comparison_exp | null),royalties?: (Int_comparison_exp | null),user?: (user_bool_exp | null),userByAcceptedById?: (user_bool_exp | null),version?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "listing" */
export interface listing_inc_input {amount?: (Scalars['numeric'] | null),article_id?: (Scalars['Int'] | null),price?: (Scalars['numeric'] | null),royalties?: (Scalars['Int'] | null),version?: (Scalars['Int'] | null)}


/** input type for inserting data into table "listing" */
export interface listing_insert_input {accepted_at?: (Scalars['timestamptz'] | null),accepted_by_id?: (Scalars['String'] | null),amount?: (Scalars['numeric'] | null),article?: (article_obj_rel_insert_input | null),article_id?: (Scalars['Int'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),issuer_id?: (Scalars['String'] | null),marketStatByIdVersion?: (market_stats_obj_rel_insert_input | null),marketStatByVersionId?: (market_stats_obj_rel_insert_input | null),marketStatsHistoriesByFloorlistingversionFloorlistingid?: (market_stats_history_arr_rel_insert_input | null),marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid?: (market_stats_history_arr_rel_insert_input | null),market_stat?: (market_stats_obj_rel_insert_input | null),market_stats_histories?: (market_stats_history_arr_rel_insert_input | null),objkt?: (objkt_obj_rel_insert_input | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),price?: (Scalars['numeric'] | null),royalties?: (Scalars['Int'] | null),user?: (user_obj_rel_insert_input | null),userByAcceptedById?: (user_obj_rel_insert_input | null),version?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface listing_max_fieldsGenqlSelection{
    accepted_at?: boolean | number
    accepted_by_id?: boolean | number
    amount?: boolean | number
    article_id?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    issuer_id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "listing" */
export interface listing_max_order_by {accepted_at?: (order_by | null),accepted_by_id?: (order_by | null),amount?: (order_by | null),article_id?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),issuer_id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate min on columns */
export interface listing_min_fieldsGenqlSelection{
    accepted_at?: boolean | number
    accepted_by_id?: boolean | number
    amount?: boolean | number
    article_id?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    issuer_id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "listing" */
export interface listing_min_order_by {accepted_at?: (order_by | null),accepted_by_id?: (order_by | null),amount?: (order_by | null),article_id?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),issuer_id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** response of any mutation on the table "listing" */
export interface listing_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: listingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "listing" */
export interface listing_obj_rel_insert_input {data: listing_insert_input,
/** upsert condition */
on_conflict?: (listing_on_conflict | null)}


/** on_conflict condition type for table "listing" */
export interface listing_on_conflict {constraint: listing_constraint,update_columns?: listing_update_column[],where?: (listing_bool_exp | null)}


/** Ordering options when selecting data from "listing". */
export interface listing_order_by {accepted_at?: (order_by | null),accepted_by_id?: (order_by | null),amount?: (order_by | null),article?: (article_order_by | null),article_id?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),issuer_id?: (order_by | null),marketStatByIdVersion?: (market_stats_order_by | null),marketStatByVersionId?: (market_stats_order_by | null),marketStatsHistoriesByFloorlistingversionFloorlistingid_aggregate?: (market_stats_history_aggregate_order_by | null),marketStatsHistoriesByHighestsoldlistingversionHighestsoldlistingid_aggregate?: (market_stats_history_aggregate_order_by | null),market_stat?: (market_stats_order_by | null),market_stats_histories_aggregate?: (market_stats_history_aggregate_order_by | null),objkt?: (objkt_order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),user?: (user_order_by | null),userByAcceptedById?: (user_order_by | null),version?: (order_by | null)}


/** primary key columns input for table: listing */
export interface listing_pk_columns_input {id: Scalars['String'],version: Scalars['Int']}


/** input type for updating data in table "listing" */
export interface listing_set_input {accepted_at?: (Scalars['timestamptz'] | null),accepted_by_id?: (Scalars['String'] | null),amount?: (Scalars['numeric'] | null),article_id?: (Scalars['Int'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),issuer_id?: (Scalars['String'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),price?: (Scalars['numeric'] | null),royalties?: (Scalars['Int'] | null),version?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface listing_stddev_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "listing" */
export interface listing_stddev_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface listing_stddev_pop_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "listing" */
export interface listing_stddev_pop_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface listing_stddev_samp_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "listing" */
export interface listing_stddev_samp_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** Streaming cursor of the table "listing" */
export interface listing_stream_cursor_input {
/** Stream column input with initial value */
initial_value: listing_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface listing_stream_cursor_value_input {accepted_at?: (Scalars['timestamptz'] | null),accepted_by_id?: (Scalars['String'] | null),amount?: (Scalars['numeric'] | null),article_id?: (Scalars['Int'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),issuer_id?: (Scalars['String'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),price?: (Scalars['numeric'] | null),royalties?: (Scalars['Int'] | null),version?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface listing_sum_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "listing" */
export interface listing_sum_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}

export interface listing_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (listing_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (listing_set_input | null),
/** filter the rows which have to be updated */
where: listing_bool_exp}


/** aggregate var_pop on columns */
export interface listing_var_pop_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "listing" */
export interface listing_var_pop_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate var_samp on columns */
export interface listing_var_samp_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "listing" */
export interface listing_var_samp_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate variance on columns */
export interface listing_variance_fieldsGenqlSelection{
    amount?: boolean | number
    article_id?: boolean | number
    price?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "listing" */
export interface listing_variance_order_by {amount?: (order_by | null),article_id?: (order_by | null),price?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** columns and relationships of "market_stats" */
export interface market_statsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingId?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_id?: boolean | number
    floor_listing_version?: boolean | number
    from?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    highestSoldListingId?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_id?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    /** An object relationship */
    listing?: listingGenqlSelection
    /** An object relationship */
    listingByFloorlistingversionFloorlistingid?: listingGenqlSelection
    /** An object relationship */
    listingByLowestsoldlistingidLowestsoldlistingversion?: listingGenqlSelection
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingId?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_id?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    to?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "market_stats" */
export interface market_stats_aggregateGenqlSelection{
    aggregate?: market_stats_aggregate_fieldsGenqlSelection
    nodes?: market_statsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "market_stats" */
export interface market_stats_aggregate_fieldsGenqlSelection{
    avg?: market_stats_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (market_stats_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: market_stats_max_fieldsGenqlSelection
    min?: market_stats_min_fieldsGenqlSelection
    stddev?: market_stats_stddev_fieldsGenqlSelection
    stddev_pop?: market_stats_stddev_pop_fieldsGenqlSelection
    stddev_samp?: market_stats_stddev_samp_fieldsGenqlSelection
    sum?: market_stats_sum_fieldsGenqlSelection
    var_pop?: market_stats_var_pop_fieldsGenqlSelection
    var_samp?: market_stats_var_samp_fieldsGenqlSelection
    variance?: market_stats_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate avg on columns */
export interface market_stats_avg_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "market_stats". All fields are combined with a logical 'AND'. */
export interface market_stats_bool_exp {_and?: (market_stats_bool_exp[] | null),_not?: (market_stats_bool_exp | null),_or?: (market_stats_bool_exp[] | null),average_sale_price?: (numeric_comparison_exp | null),floor?: (numeric_comparison_exp | null),floor24?: (numeric_comparison_exp | null),floor30d?: (numeric_comparison_exp | null),floor7d?: (numeric_comparison_exp | null),floorListingId?: (String_comparison_exp | null),floorListingVersion?: (Int_comparison_exp | null),floor_listing_id?: (String_comparison_exp | null),floor_listing_version?: (Int_comparison_exp | null),from?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),highestSoldListingId?: (String_comparison_exp | null),highestSoldListingVersion?: (Int_comparison_exp | null),highest_collection_offer?: (numeric_comparison_exp | null),highest_sold?: (numeric_comparison_exp | null),highest_sold24?: (numeric_comparison_exp | null),highest_sold30d?: (numeric_comparison_exp | null),highest_sold7d?: (numeric_comparison_exp | null),highest_sold_listing_id?: (String_comparison_exp | null),highest_sold_listing_version?: (Int_comparison_exp | null),listed?: (Int_comparison_exp | null),listing?: (listing_bool_exp | null),listingByFloorlistingversionFloorlistingid?: (listing_bool_exp | null),listingByLowestsoldlistingidLowestsoldlistingversion?: (listing_bool_exp | null),longest_average_held_in_seconds?: (bigint_comparison_exp | null),lowestSoldListingId?: (String_comparison_exp | null),lowestSoldListingVersion?: (Int_comparison_exp | null),lowest_sold?: (numeric_comparison_exp | null),lowest_sold24?: (numeric_comparison_exp | null),lowest_sold30d?: (numeric_comparison_exp | null),lowest_sold7d?: (numeric_comparison_exp | null),lowest_sold_listing_id?: (String_comparison_exp | null),lowest_sold_listing_version?: (Int_comparison_exp | null),median?: (numeric_comparison_exp | null),percent_listed?: (Float_comparison_exp | null),percent_never_listed?: (Float_comparison_exp | null),prim_volume_nb?: (numeric_comparison_exp | null),prim_volume_tz?: (numeric_comparison_exp | null),sec_volume_nb?: (numeric_comparison_exp | null),sec_volume_nb24?: (numeric_comparison_exp | null),sec_volume_nb30d?: (numeric_comparison_exp | null),sec_volume_nb7d?: (numeric_comparison_exp | null),sec_volume_tz?: (numeric_comparison_exp | null),sec_volume_tz24?: (numeric_comparison_exp | null),sec_volume_tz30d?: (numeric_comparison_exp | null),sec_volume_tz7d?: (numeric_comparison_exp | null),to?: (timestamptz_comparison_exp | null),token_id?: (String_comparison_exp | null)}


/** columns and relationships of "market_stats_history" */
export interface market_stats_historyGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingId?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_id?: boolean | number
    floor_listing_version?: boolean | number
    from?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    highestSoldListingId?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_id?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    /** An object relationship */
    listing?: listingGenqlSelection
    /** An object relationship */
    listingByFloorlistingversionFloorlistingid?: listingGenqlSelection
    /** An object relationship */
    listingByHighestsoldlistingversionHighestsoldlistingid?: listingGenqlSelection
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingId?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_id?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    to?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "market_stats_history" */
export interface market_stats_history_aggregateGenqlSelection{
    aggregate?: market_stats_history_aggregate_fieldsGenqlSelection
    nodes?: market_stats_historyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface market_stats_history_aggregate_bool_exp {count?: (market_stats_history_aggregate_bool_exp_count | null)}

export interface market_stats_history_aggregate_bool_exp_count {arguments?: (market_stats_history_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (market_stats_history_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "market_stats_history" */
export interface market_stats_history_aggregate_fieldsGenqlSelection{
    avg?: market_stats_history_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (market_stats_history_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: market_stats_history_max_fieldsGenqlSelection
    min?: market_stats_history_min_fieldsGenqlSelection
    stddev?: market_stats_history_stddev_fieldsGenqlSelection
    stddev_pop?: market_stats_history_stddev_pop_fieldsGenqlSelection
    stddev_samp?: market_stats_history_stddev_samp_fieldsGenqlSelection
    sum?: market_stats_history_sum_fieldsGenqlSelection
    var_pop?: market_stats_history_var_pop_fieldsGenqlSelection
    var_samp?: market_stats_history_var_samp_fieldsGenqlSelection
    variance?: market_stats_history_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "market_stats_history" */
export interface market_stats_history_aggregate_order_by {avg?: (market_stats_history_avg_order_by | null),count?: (order_by | null),max?: (market_stats_history_max_order_by | null),min?: (market_stats_history_min_order_by | null),stddev?: (market_stats_history_stddev_order_by | null),stddev_pop?: (market_stats_history_stddev_pop_order_by | null),stddev_samp?: (market_stats_history_stddev_samp_order_by | null),sum?: (market_stats_history_sum_order_by | null),var_pop?: (market_stats_history_var_pop_order_by | null),var_samp?: (market_stats_history_var_samp_order_by | null),variance?: (market_stats_history_variance_order_by | null)}


/** input type for inserting array relation for remote table "market_stats_history" */
export interface market_stats_history_arr_rel_insert_input {data: market_stats_history_insert_input[],
/** upsert condition */
on_conflict?: (market_stats_history_on_conflict | null)}


/** aggregate avg on columns */
export interface market_stats_history_avg_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "market_stats_history" */
export interface market_stats_history_avg_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}


/** Boolean expression to filter rows from the table "market_stats_history". All fields are combined with a logical 'AND'. */
export interface market_stats_history_bool_exp {_and?: (market_stats_history_bool_exp[] | null),_not?: (market_stats_history_bool_exp | null),_or?: (market_stats_history_bool_exp[] | null),average_sale_price?: (bigint_comparison_exp | null),floor?: (bigint_comparison_exp | null),floorListingId?: (String_comparison_exp | null),floorListingVersion?: (Int_comparison_exp | null),floor_listing_id?: (String_comparison_exp | null),floor_listing_version?: (Int_comparison_exp | null),from?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),highestSoldListingId?: (String_comparison_exp | null),highestSoldListingVersion?: (Int_comparison_exp | null),highest_collection_offer?: (bigint_comparison_exp | null),highest_sold?: (bigint_comparison_exp | null),highest_sold_listing_id?: (String_comparison_exp | null),highest_sold_listing_version?: (Int_comparison_exp | null),id?: (Int_comparison_exp | null),listed?: (Int_comparison_exp | null),listing?: (listing_bool_exp | null),listingByFloorlistingversionFloorlistingid?: (listing_bool_exp | null),listingByHighestsoldlistingversionHighestsoldlistingid?: (listing_bool_exp | null),longest_average_held_in_seconds?: (bigint_comparison_exp | null),lowestSoldListingId?: (String_comparison_exp | null),lowestSoldListingVersion?: (Int_comparison_exp | null),lowest_sold?: (bigint_comparison_exp | null),lowest_sold_listing_id?: (String_comparison_exp | null),lowest_sold_listing_version?: (Int_comparison_exp | null),median?: (bigint_comparison_exp | null),percent_listed?: (Float_comparison_exp | null),percent_never_listed?: (Float_comparison_exp | null),prim_volume_nb?: (bigint_comparison_exp | null),prim_volume_tz?: (bigint_comparison_exp | null),sec_volume_nb?: (bigint_comparison_exp | null),sec_volume_tz?: (bigint_comparison_exp | null),to?: (timestamptz_comparison_exp | null),token_id?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "market_stats_history" */
export interface market_stats_history_inc_input {average_sale_price?: (Scalars['bigint'] | null),floor?: (Scalars['bigint'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_version?: (Scalars['Int'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['bigint'] | null),highest_sold?: (Scalars['bigint'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),id?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['bigint'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['bigint'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null)}


/** input type for inserting data into table "market_stats_history" */
export interface market_stats_history_insert_input {average_sale_price?: (Scalars['bigint'] | null),floor?: (Scalars['bigint'] | null),floorListingId?: (Scalars['String'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_id?: (Scalars['String'] | null),floor_listing_version?: (Scalars['Int'] | null),from?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),highestSoldListingId?: (Scalars['String'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['bigint'] | null),highest_sold?: (Scalars['bigint'] | null),highest_sold_listing_id?: (Scalars['String'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),id?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),listing?: (listing_obj_rel_insert_input | null),listingByFloorlistingversionFloorlistingid?: (listing_obj_rel_insert_input | null),listingByHighestsoldlistingversionHighestsoldlistingid?: (listing_obj_rel_insert_input | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingId?: (Scalars['String'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['bigint'] | null),lowest_sold_listing_id?: (Scalars['String'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['bigint'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null),to?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface market_stats_history_max_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingId?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_id?: boolean | number
    floor_listing_version?: boolean | number
    from?: boolean | number
    highestSoldListingId?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_id?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingId?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_id?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    to?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "market_stats_history" */
export interface market_stats_history_max_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingId?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_id?: (order_by | null),floor_listing_version?: (order_by | null),from?: (order_by | null),highestSoldListingId?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_id?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingId?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_id?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null),to?: (order_by | null),token_id?: (order_by | null)}


/** aggregate min on columns */
export interface market_stats_history_min_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingId?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_id?: boolean | number
    floor_listing_version?: boolean | number
    from?: boolean | number
    highestSoldListingId?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_id?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingId?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_id?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    to?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "market_stats_history" */
export interface market_stats_history_min_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingId?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_id?: (order_by | null),floor_listing_version?: (order_by | null),from?: (order_by | null),highestSoldListingId?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_id?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingId?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_id?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null),to?: (order_by | null),token_id?: (order_by | null)}


/** response of any mutation on the table "market_stats_history" */
export interface market_stats_history_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: market_stats_historyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "market_stats_history" */
export interface market_stats_history_on_conflict {constraint: market_stats_history_constraint,update_columns?: market_stats_history_update_column[],where?: (market_stats_history_bool_exp | null)}


/** Ordering options when selecting data from "market_stats_history". */
export interface market_stats_history_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingId?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_id?: (order_by | null),floor_listing_version?: (order_by | null),from?: (order_by | null),generative_token?: (generative_token_order_by | null),highestSoldListingId?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_id?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),listing?: (listing_order_by | null),listingByFloorlistingversionFloorlistingid?: (listing_order_by | null),listingByHighestsoldlistingversionHighestsoldlistingid?: (listing_order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingId?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_id?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null),to?: (order_by | null),token_id?: (order_by | null)}


/** primary key columns input for table: market_stats_history */
export interface market_stats_history_pk_columns_input {id: Scalars['Int']}


/** input type for updating data in table "market_stats_history" */
export interface market_stats_history_set_input {average_sale_price?: (Scalars['bigint'] | null),floor?: (Scalars['bigint'] | null),floorListingId?: (Scalars['String'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_id?: (Scalars['String'] | null),floor_listing_version?: (Scalars['Int'] | null),from?: (Scalars['timestamptz'] | null),highestSoldListingId?: (Scalars['String'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['bigint'] | null),highest_sold?: (Scalars['bigint'] | null),highest_sold_listing_id?: (Scalars['String'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),id?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingId?: (Scalars['String'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['bigint'] | null),lowest_sold_listing_id?: (Scalars['String'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['bigint'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null),to?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface market_stats_history_stddev_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "market_stats_history" */
export interface market_stats_history_stddev_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface market_stats_history_stddev_pop_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "market_stats_history" */
export interface market_stats_history_stddev_pop_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface market_stats_history_stddev_samp_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "market_stats_history" */
export interface market_stats_history_stddev_samp_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}


/** Streaming cursor of the table "market_stats_history" */
export interface market_stats_history_stream_cursor_input {
/** Stream column input with initial value */
initial_value: market_stats_history_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface market_stats_history_stream_cursor_value_input {average_sale_price?: (Scalars['bigint'] | null),floor?: (Scalars['bigint'] | null),floorListingId?: (Scalars['String'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_id?: (Scalars['String'] | null),floor_listing_version?: (Scalars['Int'] | null),from?: (Scalars['timestamptz'] | null),highestSoldListingId?: (Scalars['String'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['bigint'] | null),highest_sold?: (Scalars['bigint'] | null),highest_sold_listing_id?: (Scalars['String'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),id?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingId?: (Scalars['String'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['bigint'] | null),lowest_sold_listing_id?: (Scalars['String'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['bigint'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null),to?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface market_stats_history_sum_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "market_stats_history" */
export interface market_stats_history_sum_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}

export interface market_stats_history_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (market_stats_history_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (market_stats_history_set_input | null),
/** filter the rows which have to be updated */
where: market_stats_history_bool_exp}


/** aggregate var_pop on columns */
export interface market_stats_history_var_pop_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "market_stats_history" */
export interface market_stats_history_var_pop_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}


/** aggregate var_samp on columns */
export interface market_stats_history_var_samp_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "market_stats_history" */
export interface market_stats_history_var_samp_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}


/** aggregate variance on columns */
export interface market_stats_history_variance_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold_listing_version?: boolean | number
    id?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_tz?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "market_stats_history" */
export interface market_stats_history_variance_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_version?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold_listing_version?: (order_by | null),id?: (order_by | null),listed?: (order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_tz?: (order_by | null)}


/** input type for incrementing numeric columns in table "market_stats" */
export interface market_stats_inc_input {average_sale_price?: (Scalars['numeric'] | null),floor?: (Scalars['numeric'] | null),floor24?: (Scalars['numeric'] | null),floor30d?: (Scalars['numeric'] | null),floor7d?: (Scalars['numeric'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_version?: (Scalars['Int'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['numeric'] | null),highest_sold?: (Scalars['numeric'] | null),highest_sold24?: (Scalars['numeric'] | null),highest_sold30d?: (Scalars['numeric'] | null),highest_sold7d?: (Scalars['numeric'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['numeric'] | null),lowest_sold24?: (Scalars['numeric'] | null),lowest_sold30d?: (Scalars['numeric'] | null),lowest_sold7d?: (Scalars['numeric'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['numeric'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['numeric'] | null),prim_volume_tz?: (Scalars['numeric'] | null),sec_volume_nb?: (Scalars['numeric'] | null),sec_volume_nb24?: (Scalars['numeric'] | null),sec_volume_nb30d?: (Scalars['numeric'] | null),sec_volume_nb7d?: (Scalars['numeric'] | null),sec_volume_tz?: (Scalars['numeric'] | null),sec_volume_tz24?: (Scalars['numeric'] | null),sec_volume_tz30d?: (Scalars['numeric'] | null),sec_volume_tz7d?: (Scalars['numeric'] | null)}


/** input type for inserting data into table "market_stats" */
export interface market_stats_insert_input {average_sale_price?: (Scalars['numeric'] | null),floor?: (Scalars['numeric'] | null),floor24?: (Scalars['numeric'] | null),floor30d?: (Scalars['numeric'] | null),floor7d?: (Scalars['numeric'] | null),floorListingId?: (Scalars['String'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_id?: (Scalars['String'] | null),floor_listing_version?: (Scalars['Int'] | null),from?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),highestSoldListingId?: (Scalars['String'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['numeric'] | null),highest_sold?: (Scalars['numeric'] | null),highest_sold24?: (Scalars['numeric'] | null),highest_sold30d?: (Scalars['numeric'] | null),highest_sold7d?: (Scalars['numeric'] | null),highest_sold_listing_id?: (Scalars['String'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),listing?: (listing_obj_rel_insert_input | null),listingByFloorlistingversionFloorlistingid?: (listing_obj_rel_insert_input | null),listingByLowestsoldlistingidLowestsoldlistingversion?: (listing_obj_rel_insert_input | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingId?: (Scalars['String'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['numeric'] | null),lowest_sold24?: (Scalars['numeric'] | null),lowest_sold30d?: (Scalars['numeric'] | null),lowest_sold7d?: (Scalars['numeric'] | null),lowest_sold_listing_id?: (Scalars['String'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['numeric'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['numeric'] | null),prim_volume_tz?: (Scalars['numeric'] | null),sec_volume_nb?: (Scalars['numeric'] | null),sec_volume_nb24?: (Scalars['numeric'] | null),sec_volume_nb30d?: (Scalars['numeric'] | null),sec_volume_nb7d?: (Scalars['numeric'] | null),sec_volume_tz?: (Scalars['numeric'] | null),sec_volume_tz24?: (Scalars['numeric'] | null),sec_volume_tz30d?: (Scalars['numeric'] | null),sec_volume_tz7d?: (Scalars['numeric'] | null),to?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface market_stats_max_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingId?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_id?: boolean | number
    floor_listing_version?: boolean | number
    from?: boolean | number
    highestSoldListingId?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_id?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingId?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_id?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    to?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface market_stats_min_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingId?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_id?: boolean | number
    floor_listing_version?: boolean | number
    from?: boolean | number
    highestSoldListingId?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_id?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingId?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_id?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    to?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "market_stats" */
export interface market_stats_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: market_statsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "market_stats" */
export interface market_stats_obj_rel_insert_input {data: market_stats_insert_input,
/** upsert condition */
on_conflict?: (market_stats_on_conflict | null)}


/** on_conflict condition type for table "market_stats" */
export interface market_stats_on_conflict {constraint: market_stats_constraint,update_columns?: market_stats_update_column[],where?: (market_stats_bool_exp | null)}


/** Ordering options when selecting data from "market_stats". */
export interface market_stats_order_by {average_sale_price?: (order_by | null),floor?: (order_by | null),floor24?: (order_by | null),floor30d?: (order_by | null),floor7d?: (order_by | null),floorListingId?: (order_by | null),floorListingVersion?: (order_by | null),floor_listing_id?: (order_by | null),floor_listing_version?: (order_by | null),from?: (order_by | null),generative_token?: (generative_token_order_by | null),highestSoldListingId?: (order_by | null),highestSoldListingVersion?: (order_by | null),highest_collection_offer?: (order_by | null),highest_sold?: (order_by | null),highest_sold24?: (order_by | null),highest_sold30d?: (order_by | null),highest_sold7d?: (order_by | null),highest_sold_listing_id?: (order_by | null),highest_sold_listing_version?: (order_by | null),listed?: (order_by | null),listing?: (listing_order_by | null),listingByFloorlistingversionFloorlistingid?: (listing_order_by | null),listingByLowestsoldlistingidLowestsoldlistingversion?: (listing_order_by | null),longest_average_held_in_seconds?: (order_by | null),lowestSoldListingId?: (order_by | null),lowestSoldListingVersion?: (order_by | null),lowest_sold?: (order_by | null),lowest_sold24?: (order_by | null),lowest_sold30d?: (order_by | null),lowest_sold7d?: (order_by | null),lowest_sold_listing_id?: (order_by | null),lowest_sold_listing_version?: (order_by | null),median?: (order_by | null),percent_listed?: (order_by | null),percent_never_listed?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_tz?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_nb24?: (order_by | null),sec_volume_nb30d?: (order_by | null),sec_volume_nb7d?: (order_by | null),sec_volume_tz?: (order_by | null),sec_volume_tz24?: (order_by | null),sec_volume_tz30d?: (order_by | null),sec_volume_tz7d?: (order_by | null),to?: (order_by | null),token_id?: (order_by | null)}


/** primary key columns input for table: market_stats */
export interface market_stats_pk_columns_input {token_id: Scalars['String']}


/** input type for updating data in table "market_stats" */
export interface market_stats_set_input {average_sale_price?: (Scalars['numeric'] | null),floor?: (Scalars['numeric'] | null),floor24?: (Scalars['numeric'] | null),floor30d?: (Scalars['numeric'] | null),floor7d?: (Scalars['numeric'] | null),floorListingId?: (Scalars['String'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_id?: (Scalars['String'] | null),floor_listing_version?: (Scalars['Int'] | null),from?: (Scalars['timestamptz'] | null),highestSoldListingId?: (Scalars['String'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['numeric'] | null),highest_sold?: (Scalars['numeric'] | null),highest_sold24?: (Scalars['numeric'] | null),highest_sold30d?: (Scalars['numeric'] | null),highest_sold7d?: (Scalars['numeric'] | null),highest_sold_listing_id?: (Scalars['String'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingId?: (Scalars['String'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['numeric'] | null),lowest_sold24?: (Scalars['numeric'] | null),lowest_sold30d?: (Scalars['numeric'] | null),lowest_sold7d?: (Scalars['numeric'] | null),lowest_sold_listing_id?: (Scalars['String'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['numeric'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['numeric'] | null),prim_volume_tz?: (Scalars['numeric'] | null),sec_volume_nb?: (Scalars['numeric'] | null),sec_volume_nb24?: (Scalars['numeric'] | null),sec_volume_nb30d?: (Scalars['numeric'] | null),sec_volume_nb7d?: (Scalars['numeric'] | null),sec_volume_tz?: (Scalars['numeric'] | null),sec_volume_tz24?: (Scalars['numeric'] | null),sec_volume_tz30d?: (Scalars['numeric'] | null),sec_volume_tz7d?: (Scalars['numeric'] | null),to?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface market_stats_stddev_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_pop on columns */
export interface market_stats_stddev_pop_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_samp on columns */
export interface market_stats_stddev_samp_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Streaming cursor of the table "market_stats" */
export interface market_stats_stream_cursor_input {
/** Stream column input with initial value */
initial_value: market_stats_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface market_stats_stream_cursor_value_input {average_sale_price?: (Scalars['numeric'] | null),floor?: (Scalars['numeric'] | null),floor24?: (Scalars['numeric'] | null),floor30d?: (Scalars['numeric'] | null),floor7d?: (Scalars['numeric'] | null),floorListingId?: (Scalars['String'] | null),floorListingVersion?: (Scalars['Int'] | null),floor_listing_id?: (Scalars['String'] | null),floor_listing_version?: (Scalars['Int'] | null),from?: (Scalars['timestamptz'] | null),highestSoldListingId?: (Scalars['String'] | null),highestSoldListingVersion?: (Scalars['Int'] | null),highest_collection_offer?: (Scalars['numeric'] | null),highest_sold?: (Scalars['numeric'] | null),highest_sold24?: (Scalars['numeric'] | null),highest_sold30d?: (Scalars['numeric'] | null),highest_sold7d?: (Scalars['numeric'] | null),highest_sold_listing_id?: (Scalars['String'] | null),highest_sold_listing_version?: (Scalars['Int'] | null),listed?: (Scalars['Int'] | null),longest_average_held_in_seconds?: (Scalars['bigint'] | null),lowestSoldListingId?: (Scalars['String'] | null),lowestSoldListingVersion?: (Scalars['Int'] | null),lowest_sold?: (Scalars['numeric'] | null),lowest_sold24?: (Scalars['numeric'] | null),lowest_sold30d?: (Scalars['numeric'] | null),lowest_sold7d?: (Scalars['numeric'] | null),lowest_sold_listing_id?: (Scalars['String'] | null),lowest_sold_listing_version?: (Scalars['Int'] | null),median?: (Scalars['numeric'] | null),percent_listed?: (Scalars['Float'] | null),percent_never_listed?: (Scalars['Float'] | null),prim_volume_nb?: (Scalars['numeric'] | null),prim_volume_tz?: (Scalars['numeric'] | null),sec_volume_nb?: (Scalars['numeric'] | null),sec_volume_nb24?: (Scalars['numeric'] | null),sec_volume_nb30d?: (Scalars['numeric'] | null),sec_volume_nb7d?: (Scalars['numeric'] | null),sec_volume_tz?: (Scalars['numeric'] | null),sec_volume_tz24?: (Scalars['numeric'] | null),sec_volume_tz30d?: (Scalars['numeric'] | null),sec_volume_tz7d?: (Scalars['numeric'] | null),to?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface market_stats_sum_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface market_stats_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (market_stats_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (market_stats_set_input | null),
/** filter the rows which have to be updated */
where: market_stats_bool_exp}


/** aggregate var_pop on columns */
export interface market_stats_var_pop_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate var_samp on columns */
export interface market_stats_var_samp_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate variance on columns */
export interface market_stats_variance_fieldsGenqlSelection{
    average_sale_price?: boolean | number
    floor?: boolean | number
    floor24?: boolean | number
    floor30d?: boolean | number
    floor7d?: boolean | number
    floorListingVersion?: boolean | number
    floor_listing_version?: boolean | number
    highestSoldListingVersion?: boolean | number
    highest_collection_offer?: boolean | number
    highest_sold?: boolean | number
    highest_sold24?: boolean | number
    highest_sold30d?: boolean | number
    highest_sold7d?: boolean | number
    highest_sold_listing_version?: boolean | number
    listed?: boolean | number
    longest_average_held_in_seconds?: boolean | number
    lowestSoldListingVersion?: boolean | number
    lowest_sold?: boolean | number
    lowest_sold24?: boolean | number
    lowest_sold30d?: boolean | number
    lowest_sold7d?: boolean | number
    lowest_sold_listing_version?: boolean | number
    median?: boolean | number
    percent_listed?: boolean | number
    percent_never_listed?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_tz?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "media_image" */
export interface media_imageGenqlSelection{
    /** An array relationship */
    articles?: (articleGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** An aggregate relationship */
    articles_aggregate?: (article_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    cid?: boolean | number
    /** An array relationship */
    generative_tokens?: (generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** An aggregate relationship */
    generative_tokens_aggregate?: (generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    height?: boolean | number
    metadata?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    mime_type?: boolean | number
    /** An array relationship */
    mint_ticket_settings?: (mint_ticket_settingsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** An aggregate relationship */
    mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** An array relationship */
    objkts?: (objktGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** An aggregate relationship */
    objkts_aggregate?: (objkt_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    placeholder?: boolean | number
    process_counters?: boolean | number
    processed?: boolean | number
    /** An array relationship */
    users?: (userGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    /** An aggregate relationship */
    users_aggregate?: (user_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "media_image" */
export interface media_image_aggregateGenqlSelection{
    aggregate?: media_image_aggregate_fieldsGenqlSelection
    nodes?: media_imageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "media_image" */
export interface media_image_aggregate_fieldsGenqlSelection{
    avg?: media_image_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (media_image_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: media_image_max_fieldsGenqlSelection
    min?: media_image_min_fieldsGenqlSelection
    stddev?: media_image_stddev_fieldsGenqlSelection
    stddev_pop?: media_image_stddev_pop_fieldsGenqlSelection
    stddev_samp?: media_image_stddev_samp_fieldsGenqlSelection
    sum?: media_image_sum_fieldsGenqlSelection
    var_pop?: media_image_var_pop_fieldsGenqlSelection
    var_samp?: media_image_var_samp_fieldsGenqlSelection
    variance?: media_image_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate avg on columns */
export interface media_image_avg_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "media_image". All fields are combined with a logical 'AND'. */
export interface media_image_bool_exp {_and?: (media_image_bool_exp[] | null),_not?: (media_image_bool_exp | null),_or?: (media_image_bool_exp[] | null),articles?: (article_bool_exp | null),articles_aggregate?: (article_aggregate_bool_exp | null),cid?: (bpchar_comparison_exp | null),generative_tokens?: (generative_token_bool_exp | null),generative_tokens_aggregate?: (generative_token_aggregate_bool_exp | null),height?: (Int_comparison_exp | null),metadata?: (json_comparison_exp | null),mime_type?: (String_comparison_exp | null),mint_ticket_settings?: (mint_ticket_settings_bool_exp | null),mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregate_bool_exp | null),objkts?: (objkt_bool_exp | null),objkts_aggregate?: (objkt_aggregate_bool_exp | null),placeholder?: (String_comparison_exp | null),process_counters?: (smallint_comparison_exp | null),processed?: (Boolean_comparison_exp | null),users?: (user_bool_exp | null),users_aggregate?: (user_aggregate_bool_exp | null),width?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "media_image" */
export interface media_image_inc_input {height?: (Scalars['Int'] | null),process_counters?: (Scalars['smallint'] | null),width?: (Scalars['Int'] | null)}


/** input type for inserting data into table "media_image" */
export interface media_image_insert_input {articles?: (article_arr_rel_insert_input | null),cid?: (Scalars['bpchar'] | null),generative_tokens?: (generative_token_arr_rel_insert_input | null),height?: (Scalars['Int'] | null),metadata?: (Scalars['json'] | null),mime_type?: (Scalars['String'] | null),mint_ticket_settings?: (mint_ticket_settings_arr_rel_insert_input | null),objkts?: (objkt_arr_rel_insert_input | null),placeholder?: (Scalars['String'] | null),process_counters?: (Scalars['smallint'] | null),processed?: (Scalars['Boolean'] | null),users?: (user_arr_rel_insert_input | null),width?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface media_image_max_fieldsGenqlSelection{
    cid?: boolean | number
    height?: boolean | number
    mime_type?: boolean | number
    placeholder?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface media_image_min_fieldsGenqlSelection{
    cid?: boolean | number
    height?: boolean | number
    mime_type?: boolean | number
    placeholder?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "media_image" */
export interface media_image_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: media_imageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "media_image" */
export interface media_image_obj_rel_insert_input {data: media_image_insert_input,
/** upsert condition */
on_conflict?: (media_image_on_conflict | null)}


/** on_conflict condition type for table "media_image" */
export interface media_image_on_conflict {constraint: media_image_constraint,update_columns?: media_image_update_column[],where?: (media_image_bool_exp | null)}


/** Ordering options when selecting data from "media_image". */
export interface media_image_order_by {articles_aggregate?: (article_aggregate_order_by | null),cid?: (order_by | null),generative_tokens_aggregate?: (generative_token_aggregate_order_by | null),height?: (order_by | null),metadata?: (order_by | null),mime_type?: (order_by | null),mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregate_order_by | null),objkts_aggregate?: (objkt_aggregate_order_by | null),placeholder?: (order_by | null),process_counters?: (order_by | null),processed?: (order_by | null),users_aggregate?: (user_aggregate_order_by | null),width?: (order_by | null)}


/** primary key columns input for table: media_image */
export interface media_image_pk_columns_input {cid: Scalars['bpchar']}


/** input type for updating data in table "media_image" */
export interface media_image_set_input {cid?: (Scalars['bpchar'] | null),height?: (Scalars['Int'] | null),metadata?: (Scalars['json'] | null),mime_type?: (Scalars['String'] | null),placeholder?: (Scalars['String'] | null),process_counters?: (Scalars['smallint'] | null),processed?: (Scalars['Boolean'] | null),width?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface media_image_stddev_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_pop on columns */
export interface media_image_stddev_pop_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_samp on columns */
export interface media_image_stddev_samp_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Streaming cursor of the table "media_image" */
export interface media_image_stream_cursor_input {
/** Stream column input with initial value */
initial_value: media_image_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface media_image_stream_cursor_value_input {cid?: (Scalars['bpchar'] | null),height?: (Scalars['Int'] | null),metadata?: (Scalars['json'] | null),mime_type?: (Scalars['String'] | null),placeholder?: (Scalars['String'] | null),process_counters?: (Scalars['smallint'] | null),processed?: (Scalars['Boolean'] | null),width?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface media_image_sum_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface media_image_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (media_image_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (media_image_set_input | null),
/** filter the rows which have to be updated */
where: media_image_bool_exp}


/** aggregate var_pop on columns */
export interface media_image_var_pop_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate var_samp on columns */
export interface media_image_var_samp_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate variance on columns */
export interface media_image_variance_fieldsGenqlSelection{
    height?: boolean | number
    process_counters?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "mint_ticket" */
export interface mint_ticketGenqlSelection{
    created_at?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    owner_id?: boolean | number
    price?: boolean | number
    taxation_locked?: boolean | number
    taxation_paid_until?: boolean | number
    taxation_start?: boolean | number
    token_id?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "mint_ticket" */
export interface mint_ticket_aggregateGenqlSelection{
    aggregate?: mint_ticket_aggregate_fieldsGenqlSelection
    nodes?: mint_ticketGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface mint_ticket_aggregate_bool_exp {count?: (mint_ticket_aggregate_bool_exp_count | null)}

export interface mint_ticket_aggregate_bool_exp_count {arguments?: (mint_ticket_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (mint_ticket_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "mint_ticket" */
export interface mint_ticket_aggregate_fieldsGenqlSelection{
    avg?: mint_ticket_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (mint_ticket_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: mint_ticket_max_fieldsGenqlSelection
    min?: mint_ticket_min_fieldsGenqlSelection
    stddev?: mint_ticket_stddev_fieldsGenqlSelection
    stddev_pop?: mint_ticket_stddev_pop_fieldsGenqlSelection
    stddev_samp?: mint_ticket_stddev_samp_fieldsGenqlSelection
    sum?: mint_ticket_sum_fieldsGenqlSelection
    var_pop?: mint_ticket_var_pop_fieldsGenqlSelection
    var_samp?: mint_ticket_var_samp_fieldsGenqlSelection
    variance?: mint_ticket_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "mint_ticket" */
export interface mint_ticket_aggregate_order_by {avg?: (mint_ticket_avg_order_by | null),count?: (order_by | null),max?: (mint_ticket_max_order_by | null),min?: (mint_ticket_min_order_by | null),stddev?: (mint_ticket_stddev_order_by | null),stddev_pop?: (mint_ticket_stddev_pop_order_by | null),stddev_samp?: (mint_ticket_stddev_samp_order_by | null),sum?: (mint_ticket_sum_order_by | null),var_pop?: (mint_ticket_var_pop_order_by | null),var_samp?: (mint_ticket_var_samp_order_by | null),variance?: (mint_ticket_variance_order_by | null)}


/** input type for inserting array relation for remote table "mint_ticket" */
export interface mint_ticket_arr_rel_insert_input {data: mint_ticket_insert_input[],
/** upsert condition */
on_conflict?: (mint_ticket_on_conflict | null)}


/** aggregate avg on columns */
export interface mint_ticket_avg_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "mint_ticket" */
export interface mint_ticket_avg_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}


/** Boolean expression to filter rows from the table "mint_ticket". All fields are combined with a logical 'AND'. */
export interface mint_ticket_bool_exp {_and?: (mint_ticket_bool_exp[] | null),_not?: (mint_ticket_bool_exp | null),_or?: (mint_ticket_bool_exp[] | null),created_at?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),id?: (String_comparison_exp | null),owner_id?: (String_comparison_exp | null),price?: (numeric_comparison_exp | null),taxation_locked?: (numeric_comparison_exp | null),taxation_paid_until?: (timestamptz_comparison_exp | null),taxation_start?: (timestamptz_comparison_exp | null),token_id?: (String_comparison_exp | null),user?: (user_bool_exp | null)}


/** input type for incrementing numeric columns in table "mint_ticket" */
export interface mint_ticket_inc_input {price?: (Scalars['numeric'] | null),taxation_locked?: (Scalars['numeric'] | null)}


/** input type for inserting data into table "mint_ticket" */
export interface mint_ticket_insert_input {created_at?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['String'] | null),owner_id?: (Scalars['String'] | null),price?: (Scalars['numeric'] | null),taxation_locked?: (Scalars['numeric'] | null),taxation_paid_until?: (Scalars['timestamptz'] | null),taxation_start?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface mint_ticket_max_fieldsGenqlSelection{
    created_at?: boolean | number
    id?: boolean | number
    owner_id?: boolean | number
    price?: boolean | number
    taxation_locked?: boolean | number
    taxation_paid_until?: boolean | number
    taxation_start?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "mint_ticket" */
export interface mint_ticket_max_order_by {created_at?: (order_by | null),id?: (order_by | null),owner_id?: (order_by | null),price?: (order_by | null),taxation_locked?: (order_by | null),taxation_paid_until?: (order_by | null),taxation_start?: (order_by | null),token_id?: (order_by | null)}


/** aggregate min on columns */
export interface mint_ticket_min_fieldsGenqlSelection{
    created_at?: boolean | number
    id?: boolean | number
    owner_id?: boolean | number
    price?: boolean | number
    taxation_locked?: boolean | number
    taxation_paid_until?: boolean | number
    taxation_start?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "mint_ticket" */
export interface mint_ticket_min_order_by {created_at?: (order_by | null),id?: (order_by | null),owner_id?: (order_by | null),price?: (order_by | null),taxation_locked?: (order_by | null),taxation_paid_until?: (order_by | null),taxation_start?: (order_by | null),token_id?: (order_by | null)}


/** response of any mutation on the table "mint_ticket" */
export interface mint_ticket_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: mint_ticketGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "mint_ticket" */
export interface mint_ticket_on_conflict {constraint: mint_ticket_constraint,update_columns?: mint_ticket_update_column[],where?: (mint_ticket_bool_exp | null)}


/** Ordering options when selecting data from "mint_ticket". */
export interface mint_ticket_order_by {created_at?: (order_by | null),generative_token?: (generative_token_order_by | null),id?: (order_by | null),owner_id?: (order_by | null),price?: (order_by | null),taxation_locked?: (order_by | null),taxation_paid_until?: (order_by | null),taxation_start?: (order_by | null),token_id?: (order_by | null),user?: (user_order_by | null)}


/** primary key columns input for table: mint_ticket */
export interface mint_ticket_pk_columns_input {id: Scalars['String']}


/** input type for updating data in table "mint_ticket" */
export interface mint_ticket_set_input {created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),owner_id?: (Scalars['String'] | null),price?: (Scalars['numeric'] | null),taxation_locked?: (Scalars['numeric'] | null),taxation_paid_until?: (Scalars['timestamptz'] | null),taxation_start?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** columns and relationships of "mint_ticket_settings" */
export interface mint_ticket_settingsGenqlSelection{
    captureMediaId?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    gracing_period?: boolean | number
    id?: boolean | number
    /** An object relationship */
    media_image?: media_imageGenqlSelection
    metadata?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    metadata_uri?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "mint_ticket_settings" */
export interface mint_ticket_settings_aggregateGenqlSelection{
    aggregate?: mint_ticket_settings_aggregate_fieldsGenqlSelection
    nodes?: mint_ticket_settingsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface mint_ticket_settings_aggregate_bool_exp {count?: (mint_ticket_settings_aggregate_bool_exp_count | null)}

export interface mint_ticket_settings_aggregate_bool_exp_count {arguments?: (mint_ticket_settings_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (mint_ticket_settings_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "mint_ticket_settings" */
export interface mint_ticket_settings_aggregate_fieldsGenqlSelection{
    avg?: mint_ticket_settings_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (mint_ticket_settings_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: mint_ticket_settings_max_fieldsGenqlSelection
    min?: mint_ticket_settings_min_fieldsGenqlSelection
    stddev?: mint_ticket_settings_stddev_fieldsGenqlSelection
    stddev_pop?: mint_ticket_settings_stddev_pop_fieldsGenqlSelection
    stddev_samp?: mint_ticket_settings_stddev_samp_fieldsGenqlSelection
    sum?: mint_ticket_settings_sum_fieldsGenqlSelection
    var_pop?: mint_ticket_settings_var_pop_fieldsGenqlSelection
    var_samp?: mint_ticket_settings_var_samp_fieldsGenqlSelection
    variance?: mint_ticket_settings_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "mint_ticket_settings" */
export interface mint_ticket_settings_aggregate_order_by {avg?: (mint_ticket_settings_avg_order_by | null),count?: (order_by | null),max?: (mint_ticket_settings_max_order_by | null),min?: (mint_ticket_settings_min_order_by | null),stddev?: (mint_ticket_settings_stddev_order_by | null),stddev_pop?: (mint_ticket_settings_stddev_pop_order_by | null),stddev_samp?: (mint_ticket_settings_stddev_samp_order_by | null),sum?: (mint_ticket_settings_sum_order_by | null),var_pop?: (mint_ticket_settings_var_pop_order_by | null),var_samp?: (mint_ticket_settings_var_samp_order_by | null),variance?: (mint_ticket_settings_variance_order_by | null)}


/** input type for inserting array relation for remote table "mint_ticket_settings" */
export interface mint_ticket_settings_arr_rel_insert_input {data: mint_ticket_settings_insert_input[],
/** upsert condition */
on_conflict?: (mint_ticket_settings_on_conflict | null)}


/** aggregate avg on columns */
export interface mint_ticket_settings_avg_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_avg_order_by {gracing_period?: (order_by | null)}


/** Boolean expression to filter rows from the table "mint_ticket_settings". All fields are combined with a logical 'AND'. */
export interface mint_ticket_settings_bool_exp {_and?: (mint_ticket_settings_bool_exp[] | null),_not?: (mint_ticket_settings_bool_exp | null),_or?: (mint_ticket_settings_bool_exp[] | null),captureMediaId?: (bpchar_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),gracing_period?: (Int_comparison_exp | null),id?: (String_comparison_exp | null),media_image?: (media_image_bool_exp | null),metadata?: (json_comparison_exp | null),metadata_uri?: (String_comparison_exp | null),token_id?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "mint_ticket_settings" */
export interface mint_ticket_settings_inc_input {gracing_period?: (Scalars['Int'] | null)}


/** input type for inserting data into table "mint_ticket_settings" */
export interface mint_ticket_settings_insert_input {captureMediaId?: (Scalars['bpchar'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),gracing_period?: (Scalars['Int'] | null),id?: (Scalars['String'] | null),media_image?: (media_image_obj_rel_insert_input | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface mint_ticket_settings_max_fieldsGenqlSelection{
    captureMediaId?: boolean | number
    gracing_period?: boolean | number
    id?: boolean | number
    metadata_uri?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_max_order_by {captureMediaId?: (order_by | null),gracing_period?: (order_by | null),id?: (order_by | null),metadata_uri?: (order_by | null),token_id?: (order_by | null)}


/** aggregate min on columns */
export interface mint_ticket_settings_min_fieldsGenqlSelection{
    captureMediaId?: boolean | number
    gracing_period?: boolean | number
    id?: boolean | number
    metadata_uri?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_min_order_by {captureMediaId?: (order_by | null),gracing_period?: (order_by | null),id?: (order_by | null),metadata_uri?: (order_by | null),token_id?: (order_by | null)}


/** response of any mutation on the table "mint_ticket_settings" */
export interface mint_ticket_settings_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: mint_ticket_settingsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "mint_ticket_settings" */
export interface mint_ticket_settings_on_conflict {constraint: mint_ticket_settings_constraint,update_columns?: mint_ticket_settings_update_column[],where?: (mint_ticket_settings_bool_exp | null)}


/** Ordering options when selecting data from "mint_ticket_settings". */
export interface mint_ticket_settings_order_by {captureMediaId?: (order_by | null),generative_token?: (generative_token_order_by | null),gracing_period?: (order_by | null),id?: (order_by | null),media_image?: (media_image_order_by | null),metadata?: (order_by | null),metadata_uri?: (order_by | null),token_id?: (order_by | null)}


/** primary key columns input for table: mint_ticket_settings */
export interface mint_ticket_settings_pk_columns_input {id: Scalars['String']}


/** input type for updating data in table "mint_ticket_settings" */
export interface mint_ticket_settings_set_input {captureMediaId?: (Scalars['bpchar'] | null),gracing_period?: (Scalars['Int'] | null),id?: (Scalars['String'] | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface mint_ticket_settings_stddev_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_stddev_order_by {gracing_period?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface mint_ticket_settings_stddev_pop_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_stddev_pop_order_by {gracing_period?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface mint_ticket_settings_stddev_samp_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_stddev_samp_order_by {gracing_period?: (order_by | null)}


/** Streaming cursor of the table "mint_ticket_settings" */
export interface mint_ticket_settings_stream_cursor_input {
/** Stream column input with initial value */
initial_value: mint_ticket_settings_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface mint_ticket_settings_stream_cursor_value_input {captureMediaId?: (Scalars['bpchar'] | null),gracing_period?: (Scalars['Int'] | null),id?: (Scalars['String'] | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface mint_ticket_settings_sum_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_sum_order_by {gracing_period?: (order_by | null)}

export interface mint_ticket_settings_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (mint_ticket_settings_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (mint_ticket_settings_set_input | null),
/** filter the rows which have to be updated */
where: mint_ticket_settings_bool_exp}


/** aggregate var_pop on columns */
export interface mint_ticket_settings_var_pop_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_var_pop_order_by {gracing_period?: (order_by | null)}


/** aggregate var_samp on columns */
export interface mint_ticket_settings_var_samp_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_var_samp_order_by {gracing_period?: (order_by | null)}


/** aggregate variance on columns */
export interface mint_ticket_settings_variance_fieldsGenqlSelection{
    gracing_period?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "mint_ticket_settings" */
export interface mint_ticket_settings_variance_order_by {gracing_period?: (order_by | null)}


/** aggregate stddev on columns */
export interface mint_ticket_stddev_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "mint_ticket" */
export interface mint_ticket_stddev_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface mint_ticket_stddev_pop_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "mint_ticket" */
export interface mint_ticket_stddev_pop_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface mint_ticket_stddev_samp_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "mint_ticket" */
export interface mint_ticket_stddev_samp_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}


/** Streaming cursor of the table "mint_ticket" */
export interface mint_ticket_stream_cursor_input {
/** Stream column input with initial value */
initial_value: mint_ticket_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface mint_ticket_stream_cursor_value_input {created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),owner_id?: (Scalars['String'] | null),price?: (Scalars['numeric'] | null),taxation_locked?: (Scalars['numeric'] | null),taxation_paid_until?: (Scalars['timestamptz'] | null),taxation_start?: (Scalars['timestamptz'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface mint_ticket_sum_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "mint_ticket" */
export interface mint_ticket_sum_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}

export interface mint_ticket_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (mint_ticket_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (mint_ticket_set_input | null),
/** filter the rows which have to be updated */
where: mint_ticket_bool_exp}


/** aggregate var_pop on columns */
export interface mint_ticket_var_pop_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "mint_ticket" */
export interface mint_ticket_var_pop_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}


/** aggregate var_samp on columns */
export interface mint_ticket_var_samp_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "mint_ticket" */
export interface mint_ticket_var_samp_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}


/** aggregate variance on columns */
export interface mint_ticket_variance_fieldsGenqlSelection{
    price?: boolean | number
    taxation_locked?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "mint_ticket" */
export interface mint_ticket_variance_order_by {price?: (order_by | null),taxation_locked?: (order_by | null)}


/** columns and relationships of "moderation_reason" */
export interface moderation_reasonGenqlSelection{
    /** An array relationship */
    articles?: (articleGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** An aggregate relationship */
    articles_aggregate?: (article_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** An array relationship */
    generative_tokens?: (generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** An aggregate relationship */
    generative_tokens_aggregate?: (generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    id?: boolean | number
    reason?: boolean | number
    /** An array relationship */
    reports?: (reportGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** An aggregate relationship */
    reports_aggregate?: (report_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** An array relationship */
    users?: (userGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    /** An aggregate relationship */
    users_aggregate?: (user_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "moderation_reason" */
export interface moderation_reason_aggregateGenqlSelection{
    aggregate?: moderation_reason_aggregate_fieldsGenqlSelection
    nodes?: moderation_reasonGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "moderation_reason" */
export interface moderation_reason_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (moderation_reason_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: moderation_reason_max_fieldsGenqlSelection
    min?: moderation_reason_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "moderation_reason". All fields are combined with a logical 'AND'. */
export interface moderation_reason_bool_exp {_and?: (moderation_reason_bool_exp[] | null),_not?: (moderation_reason_bool_exp | null),_or?: (moderation_reason_bool_exp[] | null),articles?: (article_bool_exp | null),articles_aggregate?: (article_aggregate_bool_exp | null),generative_tokens?: (generative_token_bool_exp | null),generative_tokens_aggregate?: (generative_token_aggregate_bool_exp | null),id?: (String_comparison_exp | null),reason?: (String_comparison_exp | null),reports?: (report_bool_exp | null),reports_aggregate?: (report_aggregate_bool_exp | null),users?: (user_bool_exp | null),users_aggregate?: (user_aggregate_bool_exp | null)}


/** input type for inserting data into table "moderation_reason" */
export interface moderation_reason_insert_input {articles?: (article_arr_rel_insert_input | null),generative_tokens?: (generative_token_arr_rel_insert_input | null),id?: (Scalars['String'] | null),reason?: (Scalars['String'] | null),reports?: (report_arr_rel_insert_input | null),users?: (user_arr_rel_insert_input | null)}


/** aggregate max on columns */
export interface moderation_reason_max_fieldsGenqlSelection{
    id?: boolean | number
    reason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface moderation_reason_min_fieldsGenqlSelection{
    id?: boolean | number
    reason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "moderation_reason" */
export interface moderation_reason_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: moderation_reasonGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "moderation_reason" */
export interface moderation_reason_obj_rel_insert_input {data: moderation_reason_insert_input,
/** upsert condition */
on_conflict?: (moderation_reason_on_conflict | null)}


/** on_conflict condition type for table "moderation_reason" */
export interface moderation_reason_on_conflict {constraint: moderation_reason_constraint,update_columns?: moderation_reason_update_column[],where?: (moderation_reason_bool_exp | null)}


/** Ordering options when selecting data from "moderation_reason". */
export interface moderation_reason_order_by {articles_aggregate?: (article_aggregate_order_by | null),generative_tokens_aggregate?: (generative_token_aggregate_order_by | null),id?: (order_by | null),reason?: (order_by | null),reports_aggregate?: (report_aggregate_order_by | null),users_aggregate?: (user_aggregate_order_by | null)}


/** primary key columns input for table: moderation_reason */
export interface moderation_reason_pk_columns_input {id: Scalars['String']}


/** input type for updating data in table "moderation_reason" */
export interface moderation_reason_set_input {id?: (Scalars['String'] | null),reason?: (Scalars['String'] | null)}


/** Streaming cursor of the table "moderation_reason" */
export interface moderation_reason_stream_cursor_input {
/** Stream column input with initial value */
initial_value: moderation_reason_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface moderation_reason_stream_cursor_value_input {id?: (Scalars['String'] | null),reason?: (Scalars['String'] | null)}

export interface moderation_reason_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (moderation_reason_set_input | null),
/** filter the rows which have to be updated */
where: moderation_reason_bool_exp}


/** mutation root */
export interface mutation_rootGenqlSelection{
    /** delete data from the table: "Account" */
    delete_Account?: (Account_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: Account_bool_exp} })
    /** delete single row from the table: "Account" */
    delete_Account_by_pk?: (AccountGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** delete data from the table: "Profile" */
    delete_Profile?: (Profile_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: Profile_bool_exp} })
    /** delete single row from the table: "Profile" */
    delete_Profile_by_pk?: (ProfileGenqlSelection & { __args: {accountId: Scalars['uuid']} })
    /** delete data from the table: "Wallet" */
    delete_Wallet?: (Wallet_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: Wallet_bool_exp} })
    /** delete single row from the table: "Wallet" */
    delete_Wallet_by_pk?: (WalletGenqlSelection & { __args: {address: Scalars['String']} })
    /** delete data from the table: "Whitelist" */
    delete_Whitelist?: (Whitelist_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: Whitelist_bool_exp} })
    /** delete data from the table: "WhitelistEntries" */
    delete_WhitelistEntries?: (WhitelistEntries_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: WhitelistEntries_bool_exp} })
    /** delete single row from the table: "WhitelistEntries" */
    delete_WhitelistEntries_by_pk?: (WhitelistEntriesGenqlSelection & { __args: {merkleRoot: Scalars['String'], whitelistIndex: Scalars['Int']} })
    /** delete single row from the table: "Whitelist" */
    delete_Whitelist_by_pk?: (WhitelistGenqlSelection & { __args: {merkleRoot: Scalars['String']} })
    /** delete data from the table: "action" */
    delete_action?: (action_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: action_bool_exp} })
    /** delete single row from the table: "action" */
    delete_action_by_pk?: (actionGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** delete data from the table: "article" */
    delete_article?: (article_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: article_bool_exp} })
    /** delete single row from the table: "article" */
    delete_article_by_pk?: (articleGenqlSelection & { __args: {id: Scalars['Int']} })
    /** delete data from the table: "article_generative_token" */
    delete_article_generative_token?: (article_generative_token_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: article_generative_token_bool_exp} })
    /** delete single row from the table: "article_generative_token" */
    delete_article_generative_token_by_pk?: (article_generative_tokenGenqlSelection & { __args: {article_id: Scalars['Int'], generative_token_id: Scalars['String']} })
    /** delete data from the table: "article_ledger" */
    delete_article_ledger?: (article_ledger_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: article_ledger_bool_exp} })
    /** delete single row from the table: "article_ledger" */
    delete_article_ledger_by_pk?: (article_ledgerGenqlSelection & { __args: {article_id: Scalars['Int'], owner_id: Scalars['String']} })
    /** delete data from the table: "article_revision" */
    delete_article_revision?: (article_revision_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: article_revision_bool_exp} })
    /** delete single row from the table: "article_revision" */
    delete_article_revision_by_pk?: (article_revisionGenqlSelection & { __args: {article_id: Scalars['Int'], iteration: Scalars['smallint']} })
    /** delete data from the table: "auction" */
    delete_auction?: (auction_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: auction_bool_exp} })
    /** delete data from the table: "auction_bid" */
    delete_auction_bid?: (auction_bid_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: auction_bid_bool_exp} })
    /** delete single row from the table: "auction_bid" */
    delete_auction_bid_by_pk?: (auction_bidGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** delete data from the table: "auction_bid_table" */
    delete_auction_bid_table?: (auction_bid_table_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: auction_bid_table_bool_exp} })
    /** delete single row from the table: "auction_bid_table" */
    delete_auction_bid_table_by_pk?: (auction_bid_tableGenqlSelection & { __args: {id: Scalars['Int']} })
    /** delete single row from the table: "auction" */
    delete_auction_by_pk?: (auctionGenqlSelection & { __args: {id: Scalars['Int'], version: Scalars['Int']} })
    /** delete data from the table: "codex" */
    delete_codex?: (codex_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: codex_bool_exp} })
    /** delete single row from the table: "codex" */
    delete_codex_by_pk?: (codexGenqlSelection & { __args: {id: Scalars['String'], token_version: Scalars['generative_token_version']} })
    /** delete data from the table: "codex_update_request" */
    delete_codex_update_request?: (codex_update_request_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: codex_update_request_bool_exp} })
    /** delete single row from the table: "codex_update_request" */
    delete_codex_update_request_by_pk?: (codex_update_requestGenqlSelection & { __args: {codex_id: Scalars['String'], token_id: Scalars['String'], token_version: Scalars['generative_token_version']} })
    /** delete data from the table: "collaboration" */
    delete_collaboration?: (collaboration_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: collaboration_bool_exp} })
    /** delete single row from the table: "collaboration" */
    delete_collaboration_by_pk?: (collaborationGenqlSelection & { __args: {collaboration_contract_id: Scalars['String'], collaborator_id: Scalars['String']} })
    /** delete data from the table: "collection_offer" */
    delete_collection_offer?: (collection_offer_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: collection_offer_bool_exp} })
    /** delete single row from the table: "collection_offer" */
    delete_collection_offer_by_pk?: (collection_offerGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** delete data from the table: "generative_token" */
    delete_generative_token?: (generative_token_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: generative_token_bool_exp} })
    /** delete single row from the table: "generative_token" */
    delete_generative_token_by_pk?: (generative_tokenGenqlSelection & { __args: {id: Scalars['String']} })
    /** delete data from the table: "gentk_assign" */
    delete_gentk_assign?: (gentk_assign_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: gentk_assign_bool_exp} })
    /** delete single row from the table: "gentk_assign" */
    delete_gentk_assign_by_pk?: (gentk_assignGenqlSelection & { __args: {gentk_id: Scalars['String'], gentk_issuer_version: Scalars['generative_token_version']} })
    /** delete data from the table: "ipfs_cid" */
    delete_ipfs_cid?: (ipfs_cid_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: ipfs_cid_bool_exp} })
    /** delete single row from the table: "ipfs_cid" */
    delete_ipfs_cid_by_pk?: (ipfs_cidGenqlSelection & { __args: {cid: Scalars['String']} })
    /** delete data from the table: "listing" */
    delete_listing?: (listing_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: listing_bool_exp} })
    /** delete single row from the table: "listing" */
    delete_listing_by_pk?: (listingGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** delete data from the table: "market_stats" */
    delete_market_stats?: (market_stats_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: market_stats_bool_exp} })
    /** delete single row from the table: "market_stats" */
    delete_market_stats_by_pk?: (market_statsGenqlSelection & { __args: {token_id: Scalars['String']} })
    /** delete data from the table: "market_stats_history" */
    delete_market_stats_history?: (market_stats_history_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: market_stats_history_bool_exp} })
    /** delete single row from the table: "market_stats_history" */
    delete_market_stats_history_by_pk?: (market_stats_historyGenqlSelection & { __args: {id: Scalars['Int']} })
    /** delete data from the table: "media_image" */
    delete_media_image?: (media_image_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: media_image_bool_exp} })
    /** delete single row from the table: "media_image" */
    delete_media_image_by_pk?: (media_imageGenqlSelection & { __args: {cid: Scalars['bpchar']} })
    /** delete data from the table: "mint_ticket" */
    delete_mint_ticket?: (mint_ticket_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: mint_ticket_bool_exp} })
    /** delete single row from the table: "mint_ticket" */
    delete_mint_ticket_by_pk?: (mint_ticketGenqlSelection & { __args: {id: Scalars['String']} })
    /** delete data from the table: "mint_ticket_settings" */
    delete_mint_ticket_settings?: (mint_ticket_settings_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: mint_ticket_settings_bool_exp} })
    /** delete single row from the table: "mint_ticket_settings" */
    delete_mint_ticket_settings_by_pk?: (mint_ticket_settingsGenqlSelection & { __args: {id: Scalars['String']} })
    /** delete data from the table: "moderation_reason" */
    delete_moderation_reason?: (moderation_reason_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: moderation_reason_bool_exp} })
    /** delete single row from the table: "moderation_reason" */
    delete_moderation_reason_by_pk?: (moderation_reasonGenqlSelection & { __args: {id: Scalars['String']} })
    /** delete data from the table: "objkt" */
    delete_objkt?: (objkt_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: objkt_bool_exp} })
    /** delete single row from the table: "objkt" */
    delete_objkt_by_pk?: (objktGenqlSelection & { __args: {id: Scalars['String'], issuer_version: Scalars['generative_token_version']} })
    /** delete data from the table: "offer" */
    delete_offer?: (offer_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: offer_bool_exp} })
    /** delete single row from the table: "offer" */
    delete_offer_by_pk?: (offerGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** delete data from the table: "pricing_dutch_auction" */
    delete_pricing_dutch_auction?: (pricing_dutch_auction_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: pricing_dutch_auction_bool_exp} })
    /** delete single row from the table: "pricing_dutch_auction" */
    delete_pricing_dutch_auction_by_pk?: (pricing_dutch_auctionGenqlSelection & { __args: {id: Scalars['String']} })
    /** delete data from the table: "pricing_fixed" */
    delete_pricing_fixed?: (pricing_fixed_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: pricing_fixed_bool_exp} })
    /** delete single row from the table: "pricing_fixed" */
    delete_pricing_fixed_by_pk?: (pricing_fixedGenqlSelection & { __args: {id: Scalars['String']} })
    /** delete data from the table: "redeemable" */
    delete_redeemable?: (redeemable_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: redeemable_bool_exp} })
    /** delete single row from the table: "redeemable" */
    delete_redeemable_by_pk?: (redeemableGenqlSelection & { __args: {address: Scalars['String']} })
    /** delete data from the table: "redemption" */
    delete_redemption?: (redemption_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: redemption_bool_exp} })
    /** delete single row from the table: "redemption" */
    delete_redemption_by_pk?: (redemptionGenqlSelection & { __args: {id: Scalars['Int']} })
    /** delete data from the table: "report" */
    delete_report?: (report_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: report_bool_exp} })
    /** delete single row from the table: "report" */
    delete_report_by_pk?: (reportGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** delete data from the table: "reserve" */
    delete_reserve?: (reserve_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: reserve_bool_exp} })
    /** delete single row from the table: "reserve" */
    delete_reserve_by_pk?: (reserveGenqlSelection & { __args: {id: Scalars['Int']} })
    /** delete data from the table: "split" */
    delete_split?: (split_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: split_bool_exp} })
    /** delete single row from the table: "split" */
    delete_split_by_pk?: (splitGenqlSelection & { __args: {id: Scalars['Int']} })
    /** delete data from the table: "transaction" */
    delete_transaction?: (transaction_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: transaction_bool_exp} })
    /** delete single row from the table: "transaction" */
    delete_transaction_by_pk?: (transactionGenqlSelection & { __args: {id: Scalars['Int']} })
    /** delete data from the table: "user" */
    delete_user?: (user_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: user_bool_exp} })
    /** delete single row from the table: "user" */
    delete_user_by_pk?: (userGenqlSelection & { __args: {id: Scalars['String']} })
    /** delete data from the table: "user_stats" */
    delete_user_stats?: (user_stats_mutation_responseGenqlSelection & { __args: {
    /** filter the rows which have to be deleted */
    where: user_stats_bool_exp} })
    /** delete single row from the table: "user_stats" */
    delete_user_stats_by_pk?: (user_statsGenqlSelection & { __args: {user_id: Scalars['String']} })
    /** insert data into the table: "Account" */
    insert_Account?: (Account_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: Account_insert_input[], 
    /** upsert condition */
    on_conflict?: (Account_on_conflict | null)} })
    /** insert a single row into the table: "Account" */
    insert_Account_one?: (AccountGenqlSelection & { __args: {
    /** the row to be inserted */
    object: Account_insert_input, 
    /** upsert condition */
    on_conflict?: (Account_on_conflict | null)} })
    /** insert data into the table: "Profile" */
    insert_Profile?: (Profile_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: Profile_insert_input[], 
    /** upsert condition */
    on_conflict?: (Profile_on_conflict | null)} })
    /** insert a single row into the table: "Profile" */
    insert_Profile_one?: (ProfileGenqlSelection & { __args: {
    /** the row to be inserted */
    object: Profile_insert_input, 
    /** upsert condition */
    on_conflict?: (Profile_on_conflict | null)} })
    /** insert data into the table: "Wallet" */
    insert_Wallet?: (Wallet_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: Wallet_insert_input[], 
    /** upsert condition */
    on_conflict?: (Wallet_on_conflict | null)} })
    /** insert a single row into the table: "Wallet" */
    insert_Wallet_one?: (WalletGenqlSelection & { __args: {
    /** the row to be inserted */
    object: Wallet_insert_input, 
    /** upsert condition */
    on_conflict?: (Wallet_on_conflict | null)} })
    /** insert data into the table: "Whitelist" */
    insert_Whitelist?: (Whitelist_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: Whitelist_insert_input[], 
    /** upsert condition */
    on_conflict?: (Whitelist_on_conflict | null)} })
    /** insert data into the table: "WhitelistEntries" */
    insert_WhitelistEntries?: (WhitelistEntries_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: WhitelistEntries_insert_input[], 
    /** upsert condition */
    on_conflict?: (WhitelistEntries_on_conflict | null)} })
    /** insert a single row into the table: "WhitelistEntries" */
    insert_WhitelistEntries_one?: (WhitelistEntriesGenqlSelection & { __args: {
    /** the row to be inserted */
    object: WhitelistEntries_insert_input, 
    /** upsert condition */
    on_conflict?: (WhitelistEntries_on_conflict | null)} })
    /** insert a single row into the table: "Whitelist" */
    insert_Whitelist_one?: (WhitelistGenqlSelection & { __args: {
    /** the row to be inserted */
    object: Whitelist_insert_input, 
    /** upsert condition */
    on_conflict?: (Whitelist_on_conflict | null)} })
    /** insert data into the table: "action" */
    insert_action?: (action_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: action_insert_input[], 
    /** upsert condition */
    on_conflict?: (action_on_conflict | null)} })
    /** insert a single row into the table: "action" */
    insert_action_one?: (actionGenqlSelection & { __args: {
    /** the row to be inserted */
    object: action_insert_input, 
    /** upsert condition */
    on_conflict?: (action_on_conflict | null)} })
    /** insert data into the table: "article" */
    insert_article?: (article_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: article_insert_input[], 
    /** upsert condition */
    on_conflict?: (article_on_conflict | null)} })
    /** insert data into the table: "article_generative_token" */
    insert_article_generative_token?: (article_generative_token_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: article_generative_token_insert_input[], 
    /** upsert condition */
    on_conflict?: (article_generative_token_on_conflict | null)} })
    /** insert a single row into the table: "article_generative_token" */
    insert_article_generative_token_one?: (article_generative_tokenGenqlSelection & { __args: {
    /** the row to be inserted */
    object: article_generative_token_insert_input, 
    /** upsert condition */
    on_conflict?: (article_generative_token_on_conflict | null)} })
    /** insert data into the table: "article_ledger" */
    insert_article_ledger?: (article_ledger_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: article_ledger_insert_input[], 
    /** upsert condition */
    on_conflict?: (article_ledger_on_conflict | null)} })
    /** insert a single row into the table: "article_ledger" */
    insert_article_ledger_one?: (article_ledgerGenqlSelection & { __args: {
    /** the row to be inserted */
    object: article_ledger_insert_input, 
    /** upsert condition */
    on_conflict?: (article_ledger_on_conflict | null)} })
    /** insert a single row into the table: "article" */
    insert_article_one?: (articleGenqlSelection & { __args: {
    /** the row to be inserted */
    object: article_insert_input, 
    /** upsert condition */
    on_conflict?: (article_on_conflict | null)} })
    /** insert data into the table: "article_revision" */
    insert_article_revision?: (article_revision_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: article_revision_insert_input[], 
    /** upsert condition */
    on_conflict?: (article_revision_on_conflict | null)} })
    /** insert a single row into the table: "article_revision" */
    insert_article_revision_one?: (article_revisionGenqlSelection & { __args: {
    /** the row to be inserted */
    object: article_revision_insert_input, 
    /** upsert condition */
    on_conflict?: (article_revision_on_conflict | null)} })
    /** insert data into the table: "auction" */
    insert_auction?: (auction_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: auction_insert_input[], 
    /** upsert condition */
    on_conflict?: (auction_on_conflict | null)} })
    /** insert data into the table: "auction_bid" */
    insert_auction_bid?: (auction_bid_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: auction_bid_insert_input[], 
    /** upsert condition */
    on_conflict?: (auction_bid_on_conflict | null)} })
    /** insert a single row into the table: "auction_bid" */
    insert_auction_bid_one?: (auction_bidGenqlSelection & { __args: {
    /** the row to be inserted */
    object: auction_bid_insert_input, 
    /** upsert condition */
    on_conflict?: (auction_bid_on_conflict | null)} })
    /** insert data into the table: "auction_bid_table" */
    insert_auction_bid_table?: (auction_bid_table_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: auction_bid_table_insert_input[], 
    /** upsert condition */
    on_conflict?: (auction_bid_table_on_conflict | null)} })
    /** insert a single row into the table: "auction_bid_table" */
    insert_auction_bid_table_one?: (auction_bid_tableGenqlSelection & { __args: {
    /** the row to be inserted */
    object: auction_bid_table_insert_input, 
    /** upsert condition */
    on_conflict?: (auction_bid_table_on_conflict | null)} })
    /** insert a single row into the table: "auction" */
    insert_auction_one?: (auctionGenqlSelection & { __args: {
    /** the row to be inserted */
    object: auction_insert_input, 
    /** upsert condition */
    on_conflict?: (auction_on_conflict | null)} })
    /** insert data into the table: "codex" */
    insert_codex?: (codex_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: codex_insert_input[], 
    /** upsert condition */
    on_conflict?: (codex_on_conflict | null)} })
    /** insert a single row into the table: "codex" */
    insert_codex_one?: (codexGenqlSelection & { __args: {
    /** the row to be inserted */
    object: codex_insert_input, 
    /** upsert condition */
    on_conflict?: (codex_on_conflict | null)} })
    /** insert data into the table: "codex_update_request" */
    insert_codex_update_request?: (codex_update_request_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: codex_update_request_insert_input[], 
    /** upsert condition */
    on_conflict?: (codex_update_request_on_conflict | null)} })
    /** insert a single row into the table: "codex_update_request" */
    insert_codex_update_request_one?: (codex_update_requestGenqlSelection & { __args: {
    /** the row to be inserted */
    object: codex_update_request_insert_input, 
    /** upsert condition */
    on_conflict?: (codex_update_request_on_conflict | null)} })
    /** insert data into the table: "collaboration" */
    insert_collaboration?: (collaboration_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: collaboration_insert_input[], 
    /** upsert condition */
    on_conflict?: (collaboration_on_conflict | null)} })
    /** insert a single row into the table: "collaboration" */
    insert_collaboration_one?: (collaborationGenqlSelection & { __args: {
    /** the row to be inserted */
    object: collaboration_insert_input, 
    /** upsert condition */
    on_conflict?: (collaboration_on_conflict | null)} })
    /** insert data into the table: "collection_offer" */
    insert_collection_offer?: (collection_offer_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: collection_offer_insert_input[], 
    /** upsert condition */
    on_conflict?: (collection_offer_on_conflict | null)} })
    /** insert a single row into the table: "collection_offer" */
    insert_collection_offer_one?: (collection_offerGenqlSelection & { __args: {
    /** the row to be inserted */
    object: collection_offer_insert_input, 
    /** upsert condition */
    on_conflict?: (collection_offer_on_conflict | null)} })
    /** insert data into the table: "generative_token" */
    insert_generative_token?: (generative_token_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: generative_token_insert_input[], 
    /** upsert condition */
    on_conflict?: (generative_token_on_conflict | null)} })
    /** insert a single row into the table: "generative_token" */
    insert_generative_token_one?: (generative_tokenGenqlSelection & { __args: {
    /** the row to be inserted */
    object: generative_token_insert_input, 
    /** upsert condition */
    on_conflict?: (generative_token_on_conflict | null)} })
    /** insert data into the table: "gentk_assign" */
    insert_gentk_assign?: (gentk_assign_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: gentk_assign_insert_input[], 
    /** upsert condition */
    on_conflict?: (gentk_assign_on_conflict | null)} })
    /** insert a single row into the table: "gentk_assign" */
    insert_gentk_assign_one?: (gentk_assignGenqlSelection & { __args: {
    /** the row to be inserted */
    object: gentk_assign_insert_input, 
    /** upsert condition */
    on_conflict?: (gentk_assign_on_conflict | null)} })
    /** insert data into the table: "ipfs_cid" */
    insert_ipfs_cid?: (ipfs_cid_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: ipfs_cid_insert_input[], 
    /** upsert condition */
    on_conflict?: (ipfs_cid_on_conflict | null)} })
    /** insert a single row into the table: "ipfs_cid" */
    insert_ipfs_cid_one?: (ipfs_cidGenqlSelection & { __args: {
    /** the row to be inserted */
    object: ipfs_cid_insert_input, 
    /** upsert condition */
    on_conflict?: (ipfs_cid_on_conflict | null)} })
    /** insert data into the table: "listing" */
    insert_listing?: (listing_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: listing_insert_input[], 
    /** upsert condition */
    on_conflict?: (listing_on_conflict | null)} })
    /** insert a single row into the table: "listing" */
    insert_listing_one?: (listingGenqlSelection & { __args: {
    /** the row to be inserted */
    object: listing_insert_input, 
    /** upsert condition */
    on_conflict?: (listing_on_conflict | null)} })
    /** insert data into the table: "market_stats" */
    insert_market_stats?: (market_stats_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: market_stats_insert_input[], 
    /** upsert condition */
    on_conflict?: (market_stats_on_conflict | null)} })
    /** insert data into the table: "market_stats_history" */
    insert_market_stats_history?: (market_stats_history_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: market_stats_history_insert_input[], 
    /** upsert condition */
    on_conflict?: (market_stats_history_on_conflict | null)} })
    /** insert a single row into the table: "market_stats_history" */
    insert_market_stats_history_one?: (market_stats_historyGenqlSelection & { __args: {
    /** the row to be inserted */
    object: market_stats_history_insert_input, 
    /** upsert condition */
    on_conflict?: (market_stats_history_on_conflict | null)} })
    /** insert a single row into the table: "market_stats" */
    insert_market_stats_one?: (market_statsGenqlSelection & { __args: {
    /** the row to be inserted */
    object: market_stats_insert_input, 
    /** upsert condition */
    on_conflict?: (market_stats_on_conflict | null)} })
    /** insert data into the table: "media_image" */
    insert_media_image?: (media_image_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: media_image_insert_input[], 
    /** upsert condition */
    on_conflict?: (media_image_on_conflict | null)} })
    /** insert a single row into the table: "media_image" */
    insert_media_image_one?: (media_imageGenqlSelection & { __args: {
    /** the row to be inserted */
    object: media_image_insert_input, 
    /** upsert condition */
    on_conflict?: (media_image_on_conflict | null)} })
    /** insert data into the table: "mint_ticket" */
    insert_mint_ticket?: (mint_ticket_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: mint_ticket_insert_input[], 
    /** upsert condition */
    on_conflict?: (mint_ticket_on_conflict | null)} })
    /** insert a single row into the table: "mint_ticket" */
    insert_mint_ticket_one?: (mint_ticketGenqlSelection & { __args: {
    /** the row to be inserted */
    object: mint_ticket_insert_input, 
    /** upsert condition */
    on_conflict?: (mint_ticket_on_conflict | null)} })
    /** insert data into the table: "mint_ticket_settings" */
    insert_mint_ticket_settings?: (mint_ticket_settings_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: mint_ticket_settings_insert_input[], 
    /** upsert condition */
    on_conflict?: (mint_ticket_settings_on_conflict | null)} })
    /** insert a single row into the table: "mint_ticket_settings" */
    insert_mint_ticket_settings_one?: (mint_ticket_settingsGenqlSelection & { __args: {
    /** the row to be inserted */
    object: mint_ticket_settings_insert_input, 
    /** upsert condition */
    on_conflict?: (mint_ticket_settings_on_conflict | null)} })
    /** insert data into the table: "moderation_reason" */
    insert_moderation_reason?: (moderation_reason_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: moderation_reason_insert_input[], 
    /** upsert condition */
    on_conflict?: (moderation_reason_on_conflict | null)} })
    /** insert a single row into the table: "moderation_reason" */
    insert_moderation_reason_one?: (moderation_reasonGenqlSelection & { __args: {
    /** the row to be inserted */
    object: moderation_reason_insert_input, 
    /** upsert condition */
    on_conflict?: (moderation_reason_on_conflict | null)} })
    /** insert data into the table: "objkt" */
    insert_objkt?: (objkt_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: objkt_insert_input[], 
    /** upsert condition */
    on_conflict?: (objkt_on_conflict | null)} })
    /** insert a single row into the table: "objkt" */
    insert_objkt_one?: (objktGenqlSelection & { __args: {
    /** the row to be inserted */
    object: objkt_insert_input, 
    /** upsert condition */
    on_conflict?: (objkt_on_conflict | null)} })
    /** insert data into the table: "offer" */
    insert_offer?: (offer_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: offer_insert_input[], 
    /** upsert condition */
    on_conflict?: (offer_on_conflict | null)} })
    /** insert a single row into the table: "offer" */
    insert_offer_one?: (offerGenqlSelection & { __args: {
    /** the row to be inserted */
    object: offer_insert_input, 
    /** upsert condition */
    on_conflict?: (offer_on_conflict | null)} })
    /** insert data into the table: "pricing_dutch_auction" */
    insert_pricing_dutch_auction?: (pricing_dutch_auction_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: pricing_dutch_auction_insert_input[], 
    /** upsert condition */
    on_conflict?: (pricing_dutch_auction_on_conflict | null)} })
    /** insert a single row into the table: "pricing_dutch_auction" */
    insert_pricing_dutch_auction_one?: (pricing_dutch_auctionGenqlSelection & { __args: {
    /** the row to be inserted */
    object: pricing_dutch_auction_insert_input, 
    /** upsert condition */
    on_conflict?: (pricing_dutch_auction_on_conflict | null)} })
    /** insert data into the table: "pricing_fixed" */
    insert_pricing_fixed?: (pricing_fixed_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: pricing_fixed_insert_input[], 
    /** upsert condition */
    on_conflict?: (pricing_fixed_on_conflict | null)} })
    /** insert a single row into the table: "pricing_fixed" */
    insert_pricing_fixed_one?: (pricing_fixedGenqlSelection & { __args: {
    /** the row to be inserted */
    object: pricing_fixed_insert_input, 
    /** upsert condition */
    on_conflict?: (pricing_fixed_on_conflict | null)} })
    /** insert data into the table: "redeemable" */
    insert_redeemable?: (redeemable_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: redeemable_insert_input[], 
    /** upsert condition */
    on_conflict?: (redeemable_on_conflict | null)} })
    /** insert a single row into the table: "redeemable" */
    insert_redeemable_one?: (redeemableGenqlSelection & { __args: {
    /** the row to be inserted */
    object: redeemable_insert_input, 
    /** upsert condition */
    on_conflict?: (redeemable_on_conflict | null)} })
    /** insert data into the table: "redemption" */
    insert_redemption?: (redemption_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: redemption_insert_input[], 
    /** upsert condition */
    on_conflict?: (redemption_on_conflict | null)} })
    /** insert a single row into the table: "redemption" */
    insert_redemption_one?: (redemptionGenqlSelection & { __args: {
    /** the row to be inserted */
    object: redemption_insert_input, 
    /** upsert condition */
    on_conflict?: (redemption_on_conflict | null)} })
    /** insert data into the table: "report" */
    insert_report?: (report_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: report_insert_input[], 
    /** upsert condition */
    on_conflict?: (report_on_conflict | null)} })
    /** insert a single row into the table: "report" */
    insert_report_one?: (reportGenqlSelection & { __args: {
    /** the row to be inserted */
    object: report_insert_input, 
    /** upsert condition */
    on_conflict?: (report_on_conflict | null)} })
    /** insert data into the table: "reserve" */
    insert_reserve?: (reserve_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: reserve_insert_input[], 
    /** upsert condition */
    on_conflict?: (reserve_on_conflict | null)} })
    /** insert a single row into the table: "reserve" */
    insert_reserve_one?: (reserveGenqlSelection & { __args: {
    /** the row to be inserted */
    object: reserve_insert_input, 
    /** upsert condition */
    on_conflict?: (reserve_on_conflict | null)} })
    /** insert data into the table: "split" */
    insert_split?: (split_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: split_insert_input[], 
    /** upsert condition */
    on_conflict?: (split_on_conflict | null)} })
    /** insert a single row into the table: "split" */
    insert_split_one?: (splitGenqlSelection & { __args: {
    /** the row to be inserted */
    object: split_insert_input, 
    /** upsert condition */
    on_conflict?: (split_on_conflict | null)} })
    /** insert data into the table: "transaction" */
    insert_transaction?: (transaction_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: transaction_insert_input[], 
    /** upsert condition */
    on_conflict?: (transaction_on_conflict | null)} })
    /** insert a single row into the table: "transaction" */
    insert_transaction_one?: (transactionGenqlSelection & { __args: {
    /** the row to be inserted */
    object: transaction_insert_input, 
    /** upsert condition */
    on_conflict?: (transaction_on_conflict | null)} })
    /** insert data into the table: "user" */
    insert_user?: (user_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: user_insert_input[], 
    /** upsert condition */
    on_conflict?: (user_on_conflict | null)} })
    /** insert a single row into the table: "user" */
    insert_user_one?: (userGenqlSelection & { __args: {
    /** the row to be inserted */
    object: user_insert_input, 
    /** upsert condition */
    on_conflict?: (user_on_conflict | null)} })
    /** insert data into the table: "user_stats" */
    insert_user_stats?: (user_stats_mutation_responseGenqlSelection & { __args: {
    /** the rows to be inserted */
    objects: user_stats_insert_input[], 
    /** upsert condition */
    on_conflict?: (user_stats_on_conflict | null)} })
    /** insert a single row into the table: "user_stats" */
    insert_user_stats_one?: (user_statsGenqlSelection & { __args: {
    /** the row to be inserted */
    object: user_stats_insert_input, 
    /** upsert condition */
    on_conflict?: (user_stats_on_conflict | null)} })
    set_whitelist?: (SetWhitelistOutputGenqlSelection & { __args: {whitelist: Scalars['jsonb']} })
    /** update data of the table: "Account" */
    update_Account?: (Account_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Account_set_input | null), 
    /** filter the rows which have to be updated */
    where: Account_bool_exp} })
    /** update single row of the table: "Account" */
    update_Account_by_pk?: (AccountGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Account_set_input | null), pk_columns: Account_pk_columns_input} })
    /** update multiples rows of table: "Account" */
    update_Account_many?: (Account_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: Account_updates[]} })
    /** update data of the table: "Profile" */
    update_Profile?: (Profile_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Profile_set_input | null), 
    /** filter the rows which have to be updated */
    where: Profile_bool_exp} })
    /** update single row of the table: "Profile" */
    update_Profile_by_pk?: (ProfileGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Profile_set_input | null), pk_columns: Profile_pk_columns_input} })
    /** update multiples rows of table: "Profile" */
    update_Profile_many?: (Profile_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: Profile_updates[]} })
    /** update data of the table: "Wallet" */
    update_Wallet?: (Wallet_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Wallet_set_input | null), 
    /** filter the rows which have to be updated */
    where: Wallet_bool_exp} })
    /** update single row of the table: "Wallet" */
    update_Wallet_by_pk?: (WalletGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Wallet_set_input | null), pk_columns: Wallet_pk_columns_input} })
    /** update multiples rows of table: "Wallet" */
    update_Wallet_many?: (Wallet_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: Wallet_updates[]} })
    /** update data of the table: "Whitelist" */
    update_Whitelist?: (Whitelist_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Whitelist_set_input | null), 
    /** filter the rows which have to be updated */
    where: Whitelist_bool_exp} })
    /** update data of the table: "WhitelistEntries" */
    update_WhitelistEntries?: (WhitelistEntries_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (WhitelistEntries_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (WhitelistEntries_set_input | null), 
    /** filter the rows which have to be updated */
    where: WhitelistEntries_bool_exp} })
    /** update single row of the table: "WhitelistEntries" */
    update_WhitelistEntries_by_pk?: (WhitelistEntriesGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (WhitelistEntries_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (WhitelistEntries_set_input | null), pk_columns: WhitelistEntries_pk_columns_input} })
    /** update multiples rows of table: "WhitelistEntries" */
    update_WhitelistEntries_many?: (WhitelistEntries_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: WhitelistEntries_updates[]} })
    /** update single row of the table: "Whitelist" */
    update_Whitelist_by_pk?: (WhitelistGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (Whitelist_set_input | null), pk_columns: Whitelist_pk_columns_input} })
    /** update multiples rows of table: "Whitelist" */
    update_Whitelist_many?: (Whitelist_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: Whitelist_updates[]} })
    /** update data of the table: "action" */
    update_action?: (action_mutation_responseGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (action_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (action_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (action_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (action_delete_key_input | null), 
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (action_inc_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (action_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (action_set_input | null), 
    /** filter the rows which have to be updated */
    where: action_bool_exp} })
    /** update single row of the table: "action" */
    update_action_by_pk?: (actionGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (action_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (action_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (action_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (action_delete_key_input | null), 
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (action_inc_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (action_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (action_set_input | null), pk_columns: action_pk_columns_input} })
    /** update multiples rows of table: "action" */
    update_action_many?: (action_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: action_updates[]} })
    /** update data of the table: "article" */
    update_article?: (article_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_set_input | null), 
    /** filter the rows which have to be updated */
    where: article_bool_exp} })
    /** update single row of the table: "article" */
    update_article_by_pk?: (articleGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_set_input | null), pk_columns: article_pk_columns_input} })
    /** update data of the table: "article_generative_token" */
    update_article_generative_token?: (article_generative_token_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_generative_token_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_generative_token_set_input | null), 
    /** filter the rows which have to be updated */
    where: article_generative_token_bool_exp} })
    /** update single row of the table: "article_generative_token" */
    update_article_generative_token_by_pk?: (article_generative_tokenGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_generative_token_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_generative_token_set_input | null), pk_columns: article_generative_token_pk_columns_input} })
    /** update multiples rows of table: "article_generative_token" */
    update_article_generative_token_many?: (article_generative_token_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: article_generative_token_updates[]} })
    /** update data of the table: "article_ledger" */
    update_article_ledger?: (article_ledger_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_ledger_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_ledger_set_input | null), 
    /** filter the rows which have to be updated */
    where: article_ledger_bool_exp} })
    /** update single row of the table: "article_ledger" */
    update_article_ledger_by_pk?: (article_ledgerGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_ledger_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_ledger_set_input | null), pk_columns: article_ledger_pk_columns_input} })
    /** update multiples rows of table: "article_ledger" */
    update_article_ledger_many?: (article_ledger_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: article_ledger_updates[]} })
    /** update multiples rows of table: "article" */
    update_article_many?: (article_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: article_updates[]} })
    /** update data of the table: "article_revision" */
    update_article_revision?: (article_revision_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_revision_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_revision_set_input | null), 
    /** filter the rows which have to be updated */
    where: article_revision_bool_exp} })
    /** update single row of the table: "article_revision" */
    update_article_revision_by_pk?: (article_revisionGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (article_revision_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (article_revision_set_input | null), pk_columns: article_revision_pk_columns_input} })
    /** update multiples rows of table: "article_revision" */
    update_article_revision_many?: (article_revision_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: article_revision_updates[]} })
    /** update data of the table: "auction" */
    update_auction?: (auction_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (auction_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (auction_set_input | null), 
    /** filter the rows which have to be updated */
    where: auction_bool_exp} })
    /** update data of the table: "auction_bid" */
    update_auction_bid?: (auction_bid_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (auction_bid_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (auction_bid_set_input | null), 
    /** filter the rows which have to be updated */
    where: auction_bid_bool_exp} })
    /** update single row of the table: "auction_bid" */
    update_auction_bid_by_pk?: (auction_bidGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (auction_bid_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (auction_bid_set_input | null), pk_columns: auction_bid_pk_columns_input} })
    /** update multiples rows of table: "auction_bid" */
    update_auction_bid_many?: (auction_bid_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: auction_bid_updates[]} })
    /** update data of the table: "auction_bid_table" */
    update_auction_bid_table?: (auction_bid_table_mutation_responseGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (auction_bid_table_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (auction_bid_table_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (auction_bid_table_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (auction_bid_table_delete_key_input | null), 
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (auction_bid_table_inc_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (auction_bid_table_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (auction_bid_table_set_input | null), 
    /** filter the rows which have to be updated */
    where: auction_bid_table_bool_exp} })
    /** update single row of the table: "auction_bid_table" */
    update_auction_bid_table_by_pk?: (auction_bid_tableGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (auction_bid_table_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (auction_bid_table_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (auction_bid_table_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (auction_bid_table_delete_key_input | null), 
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (auction_bid_table_inc_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (auction_bid_table_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (auction_bid_table_set_input | null), pk_columns: auction_bid_table_pk_columns_input} })
    /** update multiples rows of table: "auction_bid_table" */
    update_auction_bid_table_many?: (auction_bid_table_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: auction_bid_table_updates[]} })
    /** update single row of the table: "auction" */
    update_auction_by_pk?: (auctionGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (auction_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (auction_set_input | null), pk_columns: auction_pk_columns_input} })
    /** update multiples rows of table: "auction" */
    update_auction_many?: (auction_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: auction_updates[]} })
    /** update data of the table: "codex" */
    update_codex?: (codex_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (codex_set_input | null), 
    /** filter the rows which have to be updated */
    where: codex_bool_exp} })
    /** update single row of the table: "codex" */
    update_codex_by_pk?: (codexGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (codex_set_input | null), pk_columns: codex_pk_columns_input} })
    /** update multiples rows of table: "codex" */
    update_codex_many?: (codex_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: codex_updates[]} })
    /** update data of the table: "codex_update_request" */
    update_codex_update_request?: (codex_update_request_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (codex_update_request_set_input | null), 
    /** filter the rows which have to be updated */
    where: codex_update_request_bool_exp} })
    /** update single row of the table: "codex_update_request" */
    update_codex_update_request_by_pk?: (codex_update_requestGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (codex_update_request_set_input | null), pk_columns: codex_update_request_pk_columns_input} })
    /** update multiples rows of table: "codex_update_request" */
    update_codex_update_request_many?: (codex_update_request_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: codex_update_request_updates[]} })
    /** update data of the table: "collaboration" */
    update_collaboration?: (collaboration_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (collaboration_set_input | null), 
    /** filter the rows which have to be updated */
    where: collaboration_bool_exp} })
    /** update single row of the table: "collaboration" */
    update_collaboration_by_pk?: (collaborationGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (collaboration_set_input | null), pk_columns: collaboration_pk_columns_input} })
    /** update multiples rows of table: "collaboration" */
    update_collaboration_many?: (collaboration_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: collaboration_updates[]} })
    /** update data of the table: "collection_offer" */
    update_collection_offer?: (collection_offer_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (collection_offer_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (collection_offer_set_input | null), 
    /** filter the rows which have to be updated */
    where: collection_offer_bool_exp} })
    /** update single row of the table: "collection_offer" */
    update_collection_offer_by_pk?: (collection_offerGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (collection_offer_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (collection_offer_set_input | null), pk_columns: collection_offer_pk_columns_input} })
    /** update multiples rows of table: "collection_offer" */
    update_collection_offer_many?: (collection_offer_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: collection_offer_updates[]} })
    /** update data of the table: "generative_token" */
    update_generative_token?: (generative_token_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (generative_token_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (generative_token_set_input | null), 
    /** filter the rows which have to be updated */
    where: generative_token_bool_exp} })
    /** update single row of the table: "generative_token" */
    update_generative_token_by_pk?: (generative_tokenGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (generative_token_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (generative_token_set_input | null), pk_columns: generative_token_pk_columns_input} })
    /** update multiples rows of table: "generative_token" */
    update_generative_token_many?: (generative_token_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: generative_token_updates[]} })
    /** update data of the table: "gentk_assign" */
    update_gentk_assign?: (gentk_assign_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (gentk_assign_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (gentk_assign_set_input | null), 
    /** filter the rows which have to be updated */
    where: gentk_assign_bool_exp} })
    /** update single row of the table: "gentk_assign" */
    update_gentk_assign_by_pk?: (gentk_assignGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (gentk_assign_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (gentk_assign_set_input | null), pk_columns: gentk_assign_pk_columns_input} })
    /** update multiples rows of table: "gentk_assign" */
    update_gentk_assign_many?: (gentk_assign_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: gentk_assign_updates[]} })
    /** update data of the table: "ipfs_cid" */
    update_ipfs_cid?: (ipfs_cid_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (ipfs_cid_set_input | null), 
    /** filter the rows which have to be updated */
    where: ipfs_cid_bool_exp} })
    /** update single row of the table: "ipfs_cid" */
    update_ipfs_cid_by_pk?: (ipfs_cidGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (ipfs_cid_set_input | null), pk_columns: ipfs_cid_pk_columns_input} })
    /** update multiples rows of table: "ipfs_cid" */
    update_ipfs_cid_many?: (ipfs_cid_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: ipfs_cid_updates[]} })
    /** update data of the table: "listing" */
    update_listing?: (listing_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (listing_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (listing_set_input | null), 
    /** filter the rows which have to be updated */
    where: listing_bool_exp} })
    /** update single row of the table: "listing" */
    update_listing_by_pk?: (listingGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (listing_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (listing_set_input | null), pk_columns: listing_pk_columns_input} })
    /** update multiples rows of table: "listing" */
    update_listing_many?: (listing_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: listing_updates[]} })
    /** update data of the table: "market_stats" */
    update_market_stats?: (market_stats_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (market_stats_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (market_stats_set_input | null), 
    /** filter the rows which have to be updated */
    where: market_stats_bool_exp} })
    /** update single row of the table: "market_stats" */
    update_market_stats_by_pk?: (market_statsGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (market_stats_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (market_stats_set_input | null), pk_columns: market_stats_pk_columns_input} })
    /** update data of the table: "market_stats_history" */
    update_market_stats_history?: (market_stats_history_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (market_stats_history_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (market_stats_history_set_input | null), 
    /** filter the rows which have to be updated */
    where: market_stats_history_bool_exp} })
    /** update single row of the table: "market_stats_history" */
    update_market_stats_history_by_pk?: (market_stats_historyGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (market_stats_history_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (market_stats_history_set_input | null), pk_columns: market_stats_history_pk_columns_input} })
    /** update multiples rows of table: "market_stats_history" */
    update_market_stats_history_many?: (market_stats_history_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: market_stats_history_updates[]} })
    /** update multiples rows of table: "market_stats" */
    update_market_stats_many?: (market_stats_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: market_stats_updates[]} })
    /** update data of the table: "media_image" */
    update_media_image?: (media_image_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (media_image_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (media_image_set_input | null), 
    /** filter the rows which have to be updated */
    where: media_image_bool_exp} })
    /** update single row of the table: "media_image" */
    update_media_image_by_pk?: (media_imageGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (media_image_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (media_image_set_input | null), pk_columns: media_image_pk_columns_input} })
    /** update multiples rows of table: "media_image" */
    update_media_image_many?: (media_image_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: media_image_updates[]} })
    /** update data of the table: "mint_ticket" */
    update_mint_ticket?: (mint_ticket_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (mint_ticket_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (mint_ticket_set_input | null), 
    /** filter the rows which have to be updated */
    where: mint_ticket_bool_exp} })
    /** update single row of the table: "mint_ticket" */
    update_mint_ticket_by_pk?: (mint_ticketGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (mint_ticket_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (mint_ticket_set_input | null), pk_columns: mint_ticket_pk_columns_input} })
    /** update multiples rows of table: "mint_ticket" */
    update_mint_ticket_many?: (mint_ticket_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: mint_ticket_updates[]} })
    /** update data of the table: "mint_ticket_settings" */
    update_mint_ticket_settings?: (mint_ticket_settings_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (mint_ticket_settings_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (mint_ticket_settings_set_input | null), 
    /** filter the rows which have to be updated */
    where: mint_ticket_settings_bool_exp} })
    /** update single row of the table: "mint_ticket_settings" */
    update_mint_ticket_settings_by_pk?: (mint_ticket_settingsGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (mint_ticket_settings_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (mint_ticket_settings_set_input | null), pk_columns: mint_ticket_settings_pk_columns_input} })
    /** update multiples rows of table: "mint_ticket_settings" */
    update_mint_ticket_settings_many?: (mint_ticket_settings_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: mint_ticket_settings_updates[]} })
    /** update data of the table: "moderation_reason" */
    update_moderation_reason?: (moderation_reason_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (moderation_reason_set_input | null), 
    /** filter the rows which have to be updated */
    where: moderation_reason_bool_exp} })
    /** update single row of the table: "moderation_reason" */
    update_moderation_reason_by_pk?: (moderation_reasonGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (moderation_reason_set_input | null), pk_columns: moderation_reason_pk_columns_input} })
    /** update multiples rows of table: "moderation_reason" */
    update_moderation_reason_many?: (moderation_reason_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: moderation_reason_updates[]} })
    /** update data of the table: "objkt" */
    update_objkt?: (objkt_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (objkt_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (objkt_set_input | null), 
    /** filter the rows which have to be updated */
    where: objkt_bool_exp} })
    /** update single row of the table: "objkt" */
    update_objkt_by_pk?: (objktGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (objkt_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (objkt_set_input | null), pk_columns: objkt_pk_columns_input} })
    /** update multiples rows of table: "objkt" */
    update_objkt_many?: (objkt_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: objkt_updates[]} })
    /** update data of the table: "offer" */
    update_offer?: (offer_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (offer_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (offer_set_input | null), 
    /** filter the rows which have to be updated */
    where: offer_bool_exp} })
    /** update single row of the table: "offer" */
    update_offer_by_pk?: (offerGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (offer_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (offer_set_input | null), pk_columns: offer_pk_columns_input} })
    /** update multiples rows of table: "offer" */
    update_offer_many?: (offer_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: offer_updates[]} })
    /** update data of the table: "pricing_dutch_auction" */
    update_pricing_dutch_auction?: (pricing_dutch_auction_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (pricing_dutch_auction_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (pricing_dutch_auction_set_input | null), 
    /** filter the rows which have to be updated */
    where: pricing_dutch_auction_bool_exp} })
    /** update single row of the table: "pricing_dutch_auction" */
    update_pricing_dutch_auction_by_pk?: (pricing_dutch_auctionGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (pricing_dutch_auction_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (pricing_dutch_auction_set_input | null), pk_columns: pricing_dutch_auction_pk_columns_input} })
    /** update multiples rows of table: "pricing_dutch_auction" */
    update_pricing_dutch_auction_many?: (pricing_dutch_auction_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: pricing_dutch_auction_updates[]} })
    /** update data of the table: "pricing_fixed" */
    update_pricing_fixed?: (pricing_fixed_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (pricing_fixed_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (pricing_fixed_set_input | null), 
    /** filter the rows which have to be updated */
    where: pricing_fixed_bool_exp} })
    /** update single row of the table: "pricing_fixed" */
    update_pricing_fixed_by_pk?: (pricing_fixedGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (pricing_fixed_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (pricing_fixed_set_input | null), pk_columns: pricing_fixed_pk_columns_input} })
    /** update multiples rows of table: "pricing_fixed" */
    update_pricing_fixed_many?: (pricing_fixed_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: pricing_fixed_updates[]} })
    /** update data of the table: "redeemable" */
    update_redeemable?: (redeemable_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (redeemable_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (redeemable_set_input | null), 
    /** filter the rows which have to be updated */
    where: redeemable_bool_exp} })
    /** update single row of the table: "redeemable" */
    update_redeemable_by_pk?: (redeemableGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (redeemable_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (redeemable_set_input | null), pk_columns: redeemable_pk_columns_input} })
    /** update multiples rows of table: "redeemable" */
    update_redeemable_many?: (redeemable_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: redeemable_updates[]} })
    /** update data of the table: "redemption" */
    update_redemption?: (redemption_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (redemption_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (redemption_set_input | null), 
    /** filter the rows which have to be updated */
    where: redemption_bool_exp} })
    /** update single row of the table: "redemption" */
    update_redemption_by_pk?: (redemptionGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (redemption_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (redemption_set_input | null), pk_columns: redemption_pk_columns_input} })
    /** update multiples rows of table: "redemption" */
    update_redemption_many?: (redemption_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: redemption_updates[]} })
    /** update data of the table: "report" */
    update_report?: (report_mutation_responseGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (report_set_input | null), 
    /** filter the rows which have to be updated */
    where: report_bool_exp} })
    /** update single row of the table: "report" */
    update_report_by_pk?: (reportGenqlSelection & { __args: {
    /** sets the columns of the filtered rows to the given values */
    _set?: (report_set_input | null), pk_columns: report_pk_columns_input} })
    /** update multiples rows of table: "report" */
    update_report_many?: (report_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: report_updates[]} })
    /** update data of the table: "reserve" */
    update_reserve?: (reserve_mutation_responseGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (reserve_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (reserve_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (reserve_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (reserve_delete_key_input | null), 
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (reserve_inc_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (reserve_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (reserve_set_input | null), 
    /** filter the rows which have to be updated */
    where: reserve_bool_exp} })
    /** update single row of the table: "reserve" */
    update_reserve_by_pk?: (reserveGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (reserve_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (reserve_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (reserve_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (reserve_delete_key_input | null), 
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (reserve_inc_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (reserve_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (reserve_set_input | null), pk_columns: reserve_pk_columns_input} })
    /** update multiples rows of table: "reserve" */
    update_reserve_many?: (reserve_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: reserve_updates[]} })
    /** update data of the table: "split" */
    update_split?: (split_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (split_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (split_set_input | null), 
    /** filter the rows which have to be updated */
    where: split_bool_exp} })
    /** update single row of the table: "split" */
    update_split_by_pk?: (splitGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (split_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (split_set_input | null), pk_columns: split_pk_columns_input} })
    /** update multiples rows of table: "split" */
    update_split_many?: (split_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: split_updates[]} })
    /** update data of the table: "transaction" */
    update_transaction?: (transaction_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (transaction_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (transaction_set_input | null), 
    /** filter the rows which have to be updated */
    where: transaction_bool_exp} })
    /** update single row of the table: "transaction" */
    update_transaction_by_pk?: (transactionGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (transaction_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (transaction_set_input | null), pk_columns: transaction_pk_columns_input} })
    /** update multiples rows of table: "transaction" */
    update_transaction_many?: (transaction_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: transaction_updates[]} })
    /** update data of the table: "user" */
    update_user?: (user_mutation_responseGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (user_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (user_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (user_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (user_delete_key_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (user_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (user_set_input | null), 
    /** filter the rows which have to be updated */
    where: user_bool_exp} })
    /** update single row of the table: "user" */
    update_user_by_pk?: (userGenqlSelection & { __args: {
    /** append existing jsonb value of filtered columns with new jsonb value */
    _append?: (user_append_input | null), 
    /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
    _delete_at_path?: (user_delete_at_path_input | null), 
    /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
    _delete_elem?: (user_delete_elem_input | null), 
    /** delete key/value pair or string element. key/value pairs are matched based on their key value */
    _delete_key?: (user_delete_key_input | null), 
    /** prepend existing jsonb value of filtered columns with new jsonb value */
    _prepend?: (user_prepend_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (user_set_input | null), pk_columns: user_pk_columns_input} })
    /** update multiples rows of table: "user" */
    update_user_many?: (user_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: user_updates[]} })
    /** update data of the table: "user_stats" */
    update_user_stats?: (user_stats_mutation_responseGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (user_stats_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (user_stats_set_input | null), 
    /** filter the rows which have to be updated */
    where: user_stats_bool_exp} })
    /** update single row of the table: "user_stats" */
    update_user_stats_by_pk?: (user_statsGenqlSelection & { __args: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: (user_stats_inc_input | null), 
    /** sets the columns of the filtered rows to the given values */
    _set?: (user_stats_set_input | null), pk_columns: user_stats_pk_columns_input} })
    /** update multiples rows of table: "user_stats" */
    update_user_stats_many?: (user_stats_mutation_responseGenqlSelection & { __args: {
    /** updates to execute, in order */
    updates: user_stats_updates[]} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export interface numeric_comparison_exp {_eq?: (Scalars['numeric'] | null),_gt?: (Scalars['numeric'] | null),_gte?: (Scalars['numeric'] | null),_in?: (Scalars['numeric'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['numeric'] | null),_lte?: (Scalars['numeric'] | null),_neq?: (Scalars['numeric'] | null),_nin?: (Scalars['numeric'][] | null)}


/** columns and relationships of "objkt" */
export interface objktGenqlSelection{
    /** An array relationship */
    actions?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An aggregate relationship */
    actions_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    assigned?: boolean | number
    assigned_at?: boolean | number
    /** An array relationship */
    auctions?: (auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** An aggregate relationship */
    auctions_aggregate?: (auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    captureMediaId?: boolean | number
    created_at?: boolean | number
    display_uri?: boolean | number
    duplicate?: boolean | number
    features?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    generation_hash?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    /** An object relationship */
    gentk_assign?: gentk_assignGenqlSelection
    id?: boolean | number
    input_bytes?: boolean | number
    issuer_id?: boolean | number
    issuer_version?: boolean | number
    iteration?: boolean | number
    /** An array relationship */
    listings?: (listingGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An aggregate relationship */
    listings_aggregate?: (listing_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An object relationship */
    media_image?: media_imageGenqlSelection
    metadata?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    metadata_uri?: boolean | number
    minter_id?: boolean | number
    name?: boolean | number
    /** An array relationship */
    offers?: (offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** An aggregate relationship */
    offers_aggregate?: (offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    owner_id?: boolean | number
    rarity?: boolean | number
    /** An array relationship */
    redemptions?: (redemptionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** An aggregate relationship */
    redemptions_aggregate?: (redemption_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    royalties?: boolean | number
    slug?: boolean | number
    /** An array relationship */
    splits?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** An aggregate relationship */
    splits_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    tags?: boolean | number
    thumbnail_uri?: boolean | number
    /** An array relationship */
    transactions?: (transactionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** An aggregate relationship */
    transactions_aggregate?: (transaction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    updated_at?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    /** An object relationship */
    userByOwnerId?: userGenqlSelection
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "objkt" */
export interface objkt_aggregateGenqlSelection{
    aggregate?: objkt_aggregate_fieldsGenqlSelection
    nodes?: objktGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface objkt_aggregate_bool_exp {avg?: (objkt_aggregate_bool_exp_avg | null),bool_and?: (objkt_aggregate_bool_exp_bool_and | null),bool_or?: (objkt_aggregate_bool_exp_bool_or | null),corr?: (objkt_aggregate_bool_exp_corr | null),count?: (objkt_aggregate_bool_exp_count | null),covar_samp?: (objkt_aggregate_bool_exp_covar_samp | null),max?: (objkt_aggregate_bool_exp_max | null),min?: (objkt_aggregate_bool_exp_min | null),stddev_samp?: (objkt_aggregate_bool_exp_stddev_samp | null),sum?: (objkt_aggregate_bool_exp_sum | null),var_samp?: (objkt_aggregate_bool_exp_var_samp | null)}

export interface objkt_aggregate_bool_exp_avg {arguments: objkt_select_column_objkt_aggregate_bool_exp_avg_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}

export interface objkt_aggregate_bool_exp_bool_and {arguments: objkt_select_column_objkt_aggregate_bool_exp_bool_and_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: Boolean_comparison_exp}

export interface objkt_aggregate_bool_exp_bool_or {arguments: objkt_select_column_objkt_aggregate_bool_exp_bool_or_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: Boolean_comparison_exp}

export interface objkt_aggregate_bool_exp_corr {arguments: objkt_aggregate_bool_exp_corr_arguments,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}

export interface objkt_aggregate_bool_exp_corr_arguments {X: objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns,Y: objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns}

export interface objkt_aggregate_bool_exp_count {arguments?: (objkt_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: Int_comparison_exp}

export interface objkt_aggregate_bool_exp_covar_samp {arguments: objkt_aggregate_bool_exp_covar_samp_arguments,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}

export interface objkt_aggregate_bool_exp_covar_samp_arguments {X: objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns,Y: objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns}

export interface objkt_aggregate_bool_exp_max {arguments: objkt_select_column_objkt_aggregate_bool_exp_max_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}

export interface objkt_aggregate_bool_exp_min {arguments: objkt_select_column_objkt_aggregate_bool_exp_min_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}

export interface objkt_aggregate_bool_exp_stddev_samp {arguments: objkt_select_column_objkt_aggregate_bool_exp_stddev_samp_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}

export interface objkt_aggregate_bool_exp_sum {arguments: objkt_select_column_objkt_aggregate_bool_exp_sum_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}

export interface objkt_aggregate_bool_exp_var_samp {arguments: objkt_select_column_objkt_aggregate_bool_exp_var_samp_arguments_columns,distinct?: (Scalars['Boolean'] | null),filter?: (objkt_bool_exp | null),predicate: float8_comparison_exp}


/** aggregate fields of "objkt" */
export interface objkt_aggregate_fieldsGenqlSelection{
    avg?: objkt_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (objkt_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: objkt_max_fieldsGenqlSelection
    min?: objkt_min_fieldsGenqlSelection
    stddev?: objkt_stddev_fieldsGenqlSelection
    stddev_pop?: objkt_stddev_pop_fieldsGenqlSelection
    stddev_samp?: objkt_stddev_samp_fieldsGenqlSelection
    sum?: objkt_sum_fieldsGenqlSelection
    var_pop?: objkt_var_pop_fieldsGenqlSelection
    var_samp?: objkt_var_samp_fieldsGenqlSelection
    variance?: objkt_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "objkt" */
export interface objkt_aggregate_order_by {avg?: (objkt_avg_order_by | null),count?: (order_by | null),max?: (objkt_max_order_by | null),min?: (objkt_min_order_by | null),stddev?: (objkt_stddev_order_by | null),stddev_pop?: (objkt_stddev_pop_order_by | null),stddev_samp?: (objkt_stddev_samp_order_by | null),sum?: (objkt_sum_order_by | null),var_pop?: (objkt_var_pop_order_by | null),var_samp?: (objkt_var_samp_order_by | null),variance?: (objkt_variance_order_by | null)}


/** input type for inserting array relation for remote table "objkt" */
export interface objkt_arr_rel_insert_input {data: objkt_insert_input[],
/** upsert condition */
on_conflict?: (objkt_on_conflict | null)}


/** aggregate avg on columns */
export interface objkt_avg_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "objkt" */
export interface objkt_avg_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** Boolean expression to filter rows from the table "objkt". All fields are combined with a logical 'AND'. */
export interface objkt_bool_exp {_and?: (objkt_bool_exp[] | null),_not?: (objkt_bool_exp | null),_or?: (objkt_bool_exp[] | null),actions?: (action_bool_exp | null),actions_aggregate?: (action_aggregate_bool_exp | null),assigned?: (Boolean_comparison_exp | null),assigned_at?: (timestamptz_comparison_exp | null),auctions?: (auction_bool_exp | null),auctions_aggregate?: (auction_aggregate_bool_exp | null),captureMediaId?: (bpchar_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),display_uri?: (bpchar_comparison_exp | null),duplicate?: (Boolean_comparison_exp | null),features?: (json_comparison_exp | null),generation_hash?: (String_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),gentk_assign?: (gentk_assign_bool_exp | null),id?: (String_comparison_exp | null),input_bytes?: (String_comparison_exp | null),issuer_id?: (String_comparison_exp | null),issuer_version?: (generative_token_version_comparison_exp | null),iteration?: (numeric_comparison_exp | null),listings?: (listing_bool_exp | null),listings_aggregate?: (listing_aggregate_bool_exp | null),media_image?: (media_image_bool_exp | null),metadata?: (json_comparison_exp | null),metadata_uri?: (String_comparison_exp | null),minter_id?: (String_comparison_exp | null),name?: (String_comparison_exp | null),offers?: (offer_bool_exp | null),offers_aggregate?: (offer_aggregate_bool_exp | null),owner_id?: (String_comparison_exp | null),rarity?: (float8_comparison_exp | null),redemptions?: (redemption_bool_exp | null),redemptions_aggregate?: (redemption_aggregate_bool_exp | null),royalties?: (Int_comparison_exp | null),slug?: (String_comparison_exp | null),splits?: (split_bool_exp | null),splits_aggregate?: (split_aggregate_bool_exp | null),tags?: (_text_comparison_exp | null),thumbnail_uri?: (bpchar_comparison_exp | null),transactions?: (transaction_bool_exp | null),transactions_aggregate?: (transaction_aggregate_bool_exp | null),updated_at?: (timestamptz_comparison_exp | null),user?: (user_bool_exp | null),userByOwnerId?: (user_bool_exp | null),version?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "objkt" */
export interface objkt_inc_input {iteration?: (Scalars['numeric'] | null),rarity?: (Scalars['float8'] | null),royalties?: (Scalars['Int'] | null),version?: (Scalars['Int'] | null)}


/** input type for inserting data into table "objkt" */
export interface objkt_insert_input {actions?: (action_arr_rel_insert_input | null),assigned?: (Scalars['Boolean'] | null),assigned_at?: (Scalars['timestamptz'] | null),auctions?: (auction_arr_rel_insert_input | null),captureMediaId?: (Scalars['bpchar'] | null),created_at?: (Scalars['timestamptz'] | null),display_uri?: (Scalars['bpchar'] | null),duplicate?: (Scalars['Boolean'] | null),features?: (Scalars['json'] | null),generation_hash?: (Scalars['String'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),gentk_assign?: (gentk_assign_obj_rel_insert_input | null),id?: (Scalars['String'] | null),input_bytes?: (Scalars['String'] | null),issuer_id?: (Scalars['String'] | null),issuer_version?: (Scalars['generative_token_version'] | null),iteration?: (Scalars['numeric'] | null),listings?: (listing_arr_rel_insert_input | null),media_image?: (media_image_obj_rel_insert_input | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),minter_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),offers?: (offer_arr_rel_insert_input | null),owner_id?: (Scalars['String'] | null),rarity?: (Scalars['float8'] | null),redemptions?: (redemption_arr_rel_insert_input | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),splits?: (split_arr_rel_insert_input | null),tags?: (Scalars['_text'] | null),thumbnail_uri?: (Scalars['bpchar'] | null),transactions?: (transaction_arr_rel_insert_input | null),updated_at?: (Scalars['timestamptz'] | null),user?: (user_obj_rel_insert_input | null),userByOwnerId?: (user_obj_rel_insert_input | null),version?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface objkt_max_fieldsGenqlSelection{
    assigned_at?: boolean | number
    captureMediaId?: boolean | number
    created_at?: boolean | number
    display_uri?: boolean | number
    generation_hash?: boolean | number
    id?: boolean | number
    input_bytes?: boolean | number
    issuer_id?: boolean | number
    issuer_version?: boolean | number
    iteration?: boolean | number
    metadata_uri?: boolean | number
    minter_id?: boolean | number
    name?: boolean | number
    owner_id?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    slug?: boolean | number
    thumbnail_uri?: boolean | number
    updated_at?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "objkt" */
export interface objkt_max_order_by {assigned_at?: (order_by | null),captureMediaId?: (order_by | null),created_at?: (order_by | null),display_uri?: (order_by | null),generation_hash?: (order_by | null),id?: (order_by | null),input_bytes?: (order_by | null),issuer_id?: (order_by | null),issuer_version?: (order_by | null),iteration?: (order_by | null),metadata_uri?: (order_by | null),minter_id?: (order_by | null),name?: (order_by | null),owner_id?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),slug?: (order_by | null),thumbnail_uri?: (order_by | null),updated_at?: (order_by | null),version?: (order_by | null)}


/** aggregate min on columns */
export interface objkt_min_fieldsGenqlSelection{
    assigned_at?: boolean | number
    captureMediaId?: boolean | number
    created_at?: boolean | number
    display_uri?: boolean | number
    generation_hash?: boolean | number
    id?: boolean | number
    input_bytes?: boolean | number
    issuer_id?: boolean | number
    issuer_version?: boolean | number
    iteration?: boolean | number
    metadata_uri?: boolean | number
    minter_id?: boolean | number
    name?: boolean | number
    owner_id?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    slug?: boolean | number
    thumbnail_uri?: boolean | number
    updated_at?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "objkt" */
export interface objkt_min_order_by {assigned_at?: (order_by | null),captureMediaId?: (order_by | null),created_at?: (order_by | null),display_uri?: (order_by | null),generation_hash?: (order_by | null),id?: (order_by | null),input_bytes?: (order_by | null),issuer_id?: (order_by | null),issuer_version?: (order_by | null),iteration?: (order_by | null),metadata_uri?: (order_by | null),minter_id?: (order_by | null),name?: (order_by | null),owner_id?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),slug?: (order_by | null),thumbnail_uri?: (order_by | null),updated_at?: (order_by | null),version?: (order_by | null)}


/** response of any mutation on the table "objkt" */
export interface objkt_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: objktGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "objkt" */
export interface objkt_obj_rel_insert_input {data: objkt_insert_input,
/** upsert condition */
on_conflict?: (objkt_on_conflict | null)}


/** on_conflict condition type for table "objkt" */
export interface objkt_on_conflict {constraint: objkt_constraint,update_columns?: objkt_update_column[],where?: (objkt_bool_exp | null)}


/** Ordering options when selecting data from "objkt". */
export interface objkt_order_by {actions_aggregate?: (action_aggregate_order_by | null),assigned?: (order_by | null),assigned_at?: (order_by | null),auctions_aggregate?: (auction_aggregate_order_by | null),captureMediaId?: (order_by | null),created_at?: (order_by | null),display_uri?: (order_by | null),duplicate?: (order_by | null),features?: (order_by | null),generation_hash?: (order_by | null),generative_token?: (generative_token_order_by | null),gentk_assign?: (gentk_assign_order_by | null),id?: (order_by | null),input_bytes?: (order_by | null),issuer_id?: (order_by | null),issuer_version?: (order_by | null),iteration?: (order_by | null),listings_aggregate?: (listing_aggregate_order_by | null),media_image?: (media_image_order_by | null),metadata?: (order_by | null),metadata_uri?: (order_by | null),minter_id?: (order_by | null),name?: (order_by | null),offers_aggregate?: (offer_aggregate_order_by | null),owner_id?: (order_by | null),rarity?: (order_by | null),redemptions_aggregate?: (redemption_aggregate_order_by | null),royalties?: (order_by | null),slug?: (order_by | null),splits_aggregate?: (split_aggregate_order_by | null),tags?: (order_by | null),thumbnail_uri?: (order_by | null),transactions_aggregate?: (transaction_aggregate_order_by | null),updated_at?: (order_by | null),user?: (user_order_by | null),userByOwnerId?: (user_order_by | null),version?: (order_by | null)}


/** primary key columns input for table: objkt */
export interface objkt_pk_columns_input {id: Scalars['String'],issuer_version: Scalars['generative_token_version']}


/** input type for updating data in table "objkt" */
export interface objkt_set_input {assigned?: (Scalars['Boolean'] | null),assigned_at?: (Scalars['timestamptz'] | null),captureMediaId?: (Scalars['bpchar'] | null),created_at?: (Scalars['timestamptz'] | null),display_uri?: (Scalars['bpchar'] | null),duplicate?: (Scalars['Boolean'] | null),features?: (Scalars['json'] | null),generation_hash?: (Scalars['String'] | null),id?: (Scalars['String'] | null),input_bytes?: (Scalars['String'] | null),issuer_id?: (Scalars['String'] | null),issuer_version?: (Scalars['generative_token_version'] | null),iteration?: (Scalars['numeric'] | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),minter_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),owner_id?: (Scalars['String'] | null),rarity?: (Scalars['float8'] | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),tags?: (Scalars['_text'] | null),thumbnail_uri?: (Scalars['bpchar'] | null),updated_at?: (Scalars['timestamptz'] | null),version?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface objkt_stddev_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "objkt" */
export interface objkt_stddev_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface objkt_stddev_pop_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "objkt" */
export interface objkt_stddev_pop_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface objkt_stddev_samp_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "objkt" */
export interface objkt_stddev_samp_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** Streaming cursor of the table "objkt" */
export interface objkt_stream_cursor_input {
/** Stream column input with initial value */
initial_value: objkt_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface objkt_stream_cursor_value_input {assigned?: (Scalars['Boolean'] | null),assigned_at?: (Scalars['timestamptz'] | null),captureMediaId?: (Scalars['bpchar'] | null),created_at?: (Scalars['timestamptz'] | null),display_uri?: (Scalars['bpchar'] | null),duplicate?: (Scalars['Boolean'] | null),features?: (Scalars['json'] | null),generation_hash?: (Scalars['String'] | null),id?: (Scalars['String'] | null),input_bytes?: (Scalars['String'] | null),issuer_id?: (Scalars['String'] | null),issuer_version?: (Scalars['generative_token_version'] | null),iteration?: (Scalars['numeric'] | null),metadata?: (Scalars['json'] | null),metadata_uri?: (Scalars['String'] | null),minter_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),owner_id?: (Scalars['String'] | null),rarity?: (Scalars['float8'] | null),royalties?: (Scalars['Int'] | null),slug?: (Scalars['String'] | null),tags?: (Scalars['_text'] | null),thumbnail_uri?: (Scalars['bpchar'] | null),updated_at?: (Scalars['timestamptz'] | null),version?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface objkt_sum_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "objkt" */
export interface objkt_sum_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}

export interface objkt_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (objkt_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (objkt_set_input | null),
/** filter the rows which have to be updated */
where: objkt_bool_exp}


/** aggregate var_pop on columns */
export interface objkt_var_pop_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "objkt" */
export interface objkt_var_pop_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate var_samp on columns */
export interface objkt_var_samp_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "objkt" */
export interface objkt_var_samp_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** aggregate variance on columns */
export interface objkt_variance_fieldsGenqlSelection{
    iteration?: boolean | number
    rarity?: boolean | number
    royalties?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "objkt" */
export interface objkt_variance_order_by {iteration?: (order_by | null),rarity?: (order_by | null),royalties?: (order_by | null),version?: (order_by | null)}


/** columns and relationships of "offer" */
export interface offerGenqlSelection{
    accepted_at?: boolean | number
    buyer_id?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    /** An object relationship */
    objkt?: objktGenqlSelection
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    price?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "offer" */
export interface offer_aggregateGenqlSelection{
    aggregate?: offer_aggregate_fieldsGenqlSelection
    nodes?: offerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface offer_aggregate_bool_exp {count?: (offer_aggregate_bool_exp_count | null)}

export interface offer_aggregate_bool_exp_count {arguments?: (offer_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (offer_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "offer" */
export interface offer_aggregate_fieldsGenqlSelection{
    avg?: offer_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (offer_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: offer_max_fieldsGenqlSelection
    min?: offer_min_fieldsGenqlSelection
    stddev?: offer_stddev_fieldsGenqlSelection
    stddev_pop?: offer_stddev_pop_fieldsGenqlSelection
    stddev_samp?: offer_stddev_samp_fieldsGenqlSelection
    sum?: offer_sum_fieldsGenqlSelection
    var_pop?: offer_var_pop_fieldsGenqlSelection
    var_samp?: offer_var_samp_fieldsGenqlSelection
    variance?: offer_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "offer" */
export interface offer_aggregate_order_by {avg?: (offer_avg_order_by | null),count?: (order_by | null),max?: (offer_max_order_by | null),min?: (offer_min_order_by | null),stddev?: (offer_stddev_order_by | null),stddev_pop?: (offer_stddev_pop_order_by | null),stddev_samp?: (offer_stddev_samp_order_by | null),sum?: (offer_sum_order_by | null),var_pop?: (offer_var_pop_order_by | null),var_samp?: (offer_var_samp_order_by | null),variance?: (offer_variance_order_by | null)}


/** input type for inserting array relation for remote table "offer" */
export interface offer_arr_rel_insert_input {data: offer_insert_input[],
/** upsert condition */
on_conflict?: (offer_on_conflict | null)}


/** aggregate avg on columns */
export interface offer_avg_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "offer" */
export interface offer_avg_order_by {price?: (order_by | null),version?: (order_by | null)}


/** Boolean expression to filter rows from the table "offer". All fields are combined with a logical 'AND'. */
export interface offer_bool_exp {_and?: (offer_bool_exp[] | null),_not?: (offer_bool_exp | null),_or?: (offer_bool_exp[] | null),accepted_at?: (timestamptz_comparison_exp | null),buyer_id?: (String_comparison_exp | null),cancelled_at?: (timestamptz_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),id?: (String_comparison_exp | null),objkt?: (objkt_bool_exp | null),objkt_id?: (String_comparison_exp | null),objkt_issuer_version?: (generative_token_version_comparison_exp | null),price?: (numeric_comparison_exp | null),user?: (user_bool_exp | null),version?: (Int_comparison_exp | null)}


/** input type for incrementing numeric columns in table "offer" */
export interface offer_inc_input {price?: (Scalars['numeric'] | null),version?: (Scalars['Int'] | null)}


/** input type for inserting data into table "offer" */
export interface offer_insert_input {accepted_at?: (Scalars['timestamptz'] | null),buyer_id?: (Scalars['String'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),objkt?: (objkt_obj_rel_insert_input | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),price?: (Scalars['numeric'] | null),user?: (user_obj_rel_insert_input | null),version?: (Scalars['Int'] | null)}


/** aggregate max on columns */
export interface offer_max_fieldsGenqlSelection{
    accepted_at?: boolean | number
    buyer_id?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "offer" */
export interface offer_max_order_by {accepted_at?: (order_by | null),buyer_id?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** aggregate min on columns */
export interface offer_min_fieldsGenqlSelection{
    accepted_at?: boolean | number
    buyer_id?: boolean | number
    cancelled_at?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "offer" */
export interface offer_min_order_by {accepted_at?: (order_by | null),buyer_id?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),price?: (order_by | null),version?: (order_by | null)}


/** response of any mutation on the table "offer" */
export interface offer_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: offerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "offer" */
export interface offer_on_conflict {constraint: offer_constraint,update_columns?: offer_update_column[],where?: (offer_bool_exp | null)}


/** Ordering options when selecting data from "offer". */
export interface offer_order_by {accepted_at?: (order_by | null),buyer_id?: (order_by | null),cancelled_at?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt?: (objkt_order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),price?: (order_by | null),user?: (user_order_by | null),version?: (order_by | null)}


/** primary key columns input for table: offer */
export interface offer_pk_columns_input {id: Scalars['String'],version: Scalars['Int']}


/** input type for updating data in table "offer" */
export interface offer_set_input {accepted_at?: (Scalars['timestamptz'] | null),buyer_id?: (Scalars['String'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),price?: (Scalars['numeric'] | null),version?: (Scalars['Int'] | null)}


/** aggregate stddev on columns */
export interface offer_stddev_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "offer" */
export interface offer_stddev_order_by {price?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface offer_stddev_pop_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "offer" */
export interface offer_stddev_pop_order_by {price?: (order_by | null),version?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface offer_stddev_samp_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "offer" */
export interface offer_stddev_samp_order_by {price?: (order_by | null),version?: (order_by | null)}


/** Streaming cursor of the table "offer" */
export interface offer_stream_cursor_input {
/** Stream column input with initial value */
initial_value: offer_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface offer_stream_cursor_value_input {accepted_at?: (Scalars['timestamptz'] | null),buyer_id?: (Scalars['String'] | null),cancelled_at?: (Scalars['timestamptz'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['String'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),price?: (Scalars['numeric'] | null),version?: (Scalars['Int'] | null)}


/** aggregate sum on columns */
export interface offer_sum_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "offer" */
export interface offer_sum_order_by {price?: (order_by | null),version?: (order_by | null)}

export interface offer_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (offer_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (offer_set_input | null),
/** filter the rows which have to be updated */
where: offer_bool_exp}


/** aggregate var_pop on columns */
export interface offer_var_pop_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "offer" */
export interface offer_var_pop_order_by {price?: (order_by | null),version?: (order_by | null)}


/** aggregate var_samp on columns */
export interface offer_var_samp_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "offer" */
export interface offer_var_samp_order_by {price?: (order_by | null),version?: (order_by | null)}


/** aggregate variance on columns */
export interface offer_variance_fieldsGenqlSelection{
    price?: boolean | number
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "offer" */
export interface offer_variance_order_by {price?: (order_by | null),version?: (order_by | null)}


/** columns and relationships of "pricing_dutch_auction" */
export interface pricing_dutch_auctionGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    levels?: boolean | number
    opens_at?: boolean | number
    resting_price?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "pricing_dutch_auction" */
export interface pricing_dutch_auction_aggregateGenqlSelection{
    aggregate?: pricing_dutch_auction_aggregate_fieldsGenqlSelection
    nodes?: pricing_dutch_auctionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface pricing_dutch_auction_aggregate_bool_exp {count?: (pricing_dutch_auction_aggregate_bool_exp_count | null)}

export interface pricing_dutch_auction_aggregate_bool_exp_count {arguments?: (pricing_dutch_auction_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (pricing_dutch_auction_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "pricing_dutch_auction" */
export interface pricing_dutch_auction_aggregate_fieldsGenqlSelection{
    avg?: pricing_dutch_auction_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (pricing_dutch_auction_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: pricing_dutch_auction_max_fieldsGenqlSelection
    min?: pricing_dutch_auction_min_fieldsGenqlSelection
    stddev?: pricing_dutch_auction_stddev_fieldsGenqlSelection
    stddev_pop?: pricing_dutch_auction_stddev_pop_fieldsGenqlSelection
    stddev_samp?: pricing_dutch_auction_stddev_samp_fieldsGenqlSelection
    sum?: pricing_dutch_auction_sum_fieldsGenqlSelection
    var_pop?: pricing_dutch_auction_var_pop_fieldsGenqlSelection
    var_samp?: pricing_dutch_auction_var_samp_fieldsGenqlSelection
    variance?: pricing_dutch_auction_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_aggregate_order_by {avg?: (pricing_dutch_auction_avg_order_by | null),count?: (order_by | null),max?: (pricing_dutch_auction_max_order_by | null),min?: (pricing_dutch_auction_min_order_by | null),stddev?: (pricing_dutch_auction_stddev_order_by | null),stddev_pop?: (pricing_dutch_auction_stddev_pop_order_by | null),stddev_samp?: (pricing_dutch_auction_stddev_samp_order_by | null),sum?: (pricing_dutch_auction_sum_order_by | null),var_pop?: (pricing_dutch_auction_var_pop_order_by | null),var_samp?: (pricing_dutch_auction_var_samp_order_by | null),variance?: (pricing_dutch_auction_variance_order_by | null)}


/** input type for inserting array relation for remote table "pricing_dutch_auction" */
export interface pricing_dutch_auction_arr_rel_insert_input {data: pricing_dutch_auction_insert_input[],
/** upsert condition */
on_conflict?: (pricing_dutch_auction_on_conflict | null)}


/** aggregate avg on columns */
export interface pricing_dutch_auction_avg_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_avg_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}


/** Boolean expression to filter rows from the table "pricing_dutch_auction". All fields are combined with a logical 'AND'. */
export interface pricing_dutch_auction_bool_exp {_and?: (pricing_dutch_auction_bool_exp[] | null),_not?: (pricing_dutch_auction_bool_exp | null),_or?: (pricing_dutch_auction_bool_exp[] | null),decrement_duration?: (bigint_comparison_exp | null),final_price?: (bigint_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),id?: (String_comparison_exp | null),levels?: (_int8_comparison_exp | null),opens_at?: (timestamptz_comparison_exp | null),resting_price?: (String_comparison_exp | null),token_id?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "pricing_dutch_auction" */
export interface pricing_dutch_auction_inc_input {decrement_duration?: (Scalars['bigint'] | null),final_price?: (Scalars['bigint'] | null)}


/** input type for inserting data into table "pricing_dutch_auction" */
export interface pricing_dutch_auction_insert_input {decrement_duration?: (Scalars['bigint'] | null),final_price?: (Scalars['bigint'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['String'] | null),levels?: (Scalars['_int8'] | null),opens_at?: (Scalars['timestamptz'] | null),resting_price?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface pricing_dutch_auction_max_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    id?: boolean | number
    opens_at?: boolean | number
    resting_price?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_max_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null),id?: (order_by | null),opens_at?: (order_by | null),resting_price?: (order_by | null),token_id?: (order_by | null)}


/** aggregate min on columns */
export interface pricing_dutch_auction_min_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    id?: boolean | number
    opens_at?: boolean | number
    resting_price?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_min_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null),id?: (order_by | null),opens_at?: (order_by | null),resting_price?: (order_by | null),token_id?: (order_by | null)}


/** response of any mutation on the table "pricing_dutch_auction" */
export interface pricing_dutch_auction_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: pricing_dutch_auctionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "pricing_dutch_auction" */
export interface pricing_dutch_auction_on_conflict {constraint: pricing_dutch_auction_constraint,update_columns?: pricing_dutch_auction_update_column[],where?: (pricing_dutch_auction_bool_exp | null)}


/** Ordering options when selecting data from "pricing_dutch_auction". */
export interface pricing_dutch_auction_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null),generative_token?: (generative_token_order_by | null),id?: (order_by | null),levels?: (order_by | null),opens_at?: (order_by | null),resting_price?: (order_by | null),token_id?: (order_by | null)}


/** primary key columns input for table: pricing_dutch_auction */
export interface pricing_dutch_auction_pk_columns_input {id: Scalars['String']}


/** input type for updating data in table "pricing_dutch_auction" */
export interface pricing_dutch_auction_set_input {decrement_duration?: (Scalars['bigint'] | null),final_price?: (Scalars['bigint'] | null),id?: (Scalars['String'] | null),levels?: (Scalars['_int8'] | null),opens_at?: (Scalars['timestamptz'] | null),resting_price?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface pricing_dutch_auction_stddev_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_stddev_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface pricing_dutch_auction_stddev_pop_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_stddev_pop_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface pricing_dutch_auction_stddev_samp_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_stddev_samp_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}


/** Streaming cursor of the table "pricing_dutch_auction" */
export interface pricing_dutch_auction_stream_cursor_input {
/** Stream column input with initial value */
initial_value: pricing_dutch_auction_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface pricing_dutch_auction_stream_cursor_value_input {decrement_duration?: (Scalars['bigint'] | null),final_price?: (Scalars['bigint'] | null),id?: (Scalars['String'] | null),levels?: (Scalars['_int8'] | null),opens_at?: (Scalars['timestamptz'] | null),resting_price?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface pricing_dutch_auction_sum_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_sum_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}

export interface pricing_dutch_auction_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (pricing_dutch_auction_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (pricing_dutch_auction_set_input | null),
/** filter the rows which have to be updated */
where: pricing_dutch_auction_bool_exp}


/** aggregate var_pop on columns */
export interface pricing_dutch_auction_var_pop_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_var_pop_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}


/** aggregate var_samp on columns */
export interface pricing_dutch_auction_var_samp_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_var_samp_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}


/** aggregate variance on columns */
export interface pricing_dutch_auction_variance_fieldsGenqlSelection{
    decrement_duration?: boolean | number
    final_price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "pricing_dutch_auction" */
export interface pricing_dutch_auction_variance_order_by {decrement_duration?: (order_by | null),final_price?: (order_by | null)}


/** columns and relationships of "pricing_fixed" */
export interface pricing_fixedGenqlSelection{
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    opens_at?: boolean | number
    price?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "pricing_fixed" */
export interface pricing_fixed_aggregateGenqlSelection{
    aggregate?: pricing_fixed_aggregate_fieldsGenqlSelection
    nodes?: pricing_fixedGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface pricing_fixed_aggregate_bool_exp {count?: (pricing_fixed_aggregate_bool_exp_count | null)}

export interface pricing_fixed_aggregate_bool_exp_count {arguments?: (pricing_fixed_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (pricing_fixed_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "pricing_fixed" */
export interface pricing_fixed_aggregate_fieldsGenqlSelection{
    avg?: pricing_fixed_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (pricing_fixed_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: pricing_fixed_max_fieldsGenqlSelection
    min?: pricing_fixed_min_fieldsGenqlSelection
    stddev?: pricing_fixed_stddev_fieldsGenqlSelection
    stddev_pop?: pricing_fixed_stddev_pop_fieldsGenqlSelection
    stddev_samp?: pricing_fixed_stddev_samp_fieldsGenqlSelection
    sum?: pricing_fixed_sum_fieldsGenqlSelection
    var_pop?: pricing_fixed_var_pop_fieldsGenqlSelection
    var_samp?: pricing_fixed_var_samp_fieldsGenqlSelection
    variance?: pricing_fixed_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "pricing_fixed" */
export interface pricing_fixed_aggregate_order_by {avg?: (pricing_fixed_avg_order_by | null),count?: (order_by | null),max?: (pricing_fixed_max_order_by | null),min?: (pricing_fixed_min_order_by | null),stddev?: (pricing_fixed_stddev_order_by | null),stddev_pop?: (pricing_fixed_stddev_pop_order_by | null),stddev_samp?: (pricing_fixed_stddev_samp_order_by | null),sum?: (pricing_fixed_sum_order_by | null),var_pop?: (pricing_fixed_var_pop_order_by | null),var_samp?: (pricing_fixed_var_samp_order_by | null),variance?: (pricing_fixed_variance_order_by | null)}


/** input type for inserting array relation for remote table "pricing_fixed" */
export interface pricing_fixed_arr_rel_insert_input {data: pricing_fixed_insert_input[],
/** upsert condition */
on_conflict?: (pricing_fixed_on_conflict | null)}


/** aggregate avg on columns */
export interface pricing_fixed_avg_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "pricing_fixed" */
export interface pricing_fixed_avg_order_by {price?: (order_by | null)}


/** Boolean expression to filter rows from the table "pricing_fixed". All fields are combined with a logical 'AND'. */
export interface pricing_fixed_bool_exp {_and?: (pricing_fixed_bool_exp[] | null),_not?: (pricing_fixed_bool_exp | null),_or?: (pricing_fixed_bool_exp[] | null),generative_token?: (generative_token_bool_exp | null),id?: (String_comparison_exp | null),opens_at?: (timestamptz_comparison_exp | null),price?: (numeric_comparison_exp | null),token_id?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "pricing_fixed" */
export interface pricing_fixed_inc_input {price?: (Scalars['numeric'] | null)}


/** input type for inserting data into table "pricing_fixed" */
export interface pricing_fixed_insert_input {generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['String'] | null),opens_at?: (Scalars['timestamptz'] | null),price?: (Scalars['numeric'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface pricing_fixed_max_fieldsGenqlSelection{
    id?: boolean | number
    opens_at?: boolean | number
    price?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "pricing_fixed" */
export interface pricing_fixed_max_order_by {id?: (order_by | null),opens_at?: (order_by | null),price?: (order_by | null),token_id?: (order_by | null)}


/** aggregate min on columns */
export interface pricing_fixed_min_fieldsGenqlSelection{
    id?: boolean | number
    opens_at?: boolean | number
    price?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "pricing_fixed" */
export interface pricing_fixed_min_order_by {id?: (order_by | null),opens_at?: (order_by | null),price?: (order_by | null),token_id?: (order_by | null)}


/** response of any mutation on the table "pricing_fixed" */
export interface pricing_fixed_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: pricing_fixedGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "pricing_fixed" */
export interface pricing_fixed_on_conflict {constraint: pricing_fixed_constraint,update_columns?: pricing_fixed_update_column[],where?: (pricing_fixed_bool_exp | null)}


/** Ordering options when selecting data from "pricing_fixed". */
export interface pricing_fixed_order_by {generative_token?: (generative_token_order_by | null),id?: (order_by | null),opens_at?: (order_by | null),price?: (order_by | null),token_id?: (order_by | null)}


/** primary key columns input for table: pricing_fixed */
export interface pricing_fixed_pk_columns_input {id: Scalars['String']}


/** input type for updating data in table "pricing_fixed" */
export interface pricing_fixed_set_input {id?: (Scalars['String'] | null),opens_at?: (Scalars['timestamptz'] | null),price?: (Scalars['numeric'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface pricing_fixed_stddev_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "pricing_fixed" */
export interface pricing_fixed_stddev_order_by {price?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface pricing_fixed_stddev_pop_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "pricing_fixed" */
export interface pricing_fixed_stddev_pop_order_by {price?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface pricing_fixed_stddev_samp_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "pricing_fixed" */
export interface pricing_fixed_stddev_samp_order_by {price?: (order_by | null)}


/** Streaming cursor of the table "pricing_fixed" */
export interface pricing_fixed_stream_cursor_input {
/** Stream column input with initial value */
initial_value: pricing_fixed_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface pricing_fixed_stream_cursor_value_input {id?: (Scalars['String'] | null),opens_at?: (Scalars['timestamptz'] | null),price?: (Scalars['numeric'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface pricing_fixed_sum_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "pricing_fixed" */
export interface pricing_fixed_sum_order_by {price?: (order_by | null)}

export interface pricing_fixed_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (pricing_fixed_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (pricing_fixed_set_input | null),
/** filter the rows which have to be updated */
where: pricing_fixed_bool_exp}


/** aggregate var_pop on columns */
export interface pricing_fixed_var_pop_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "pricing_fixed" */
export interface pricing_fixed_var_pop_order_by {price?: (order_by | null)}


/** aggregate var_samp on columns */
export interface pricing_fixed_var_samp_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "pricing_fixed" */
export interface pricing_fixed_var_samp_order_by {price?: (order_by | null)}


/** aggregate variance on columns */
export interface pricing_fixed_variance_fieldsGenqlSelection{
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "pricing_fixed" */
export interface pricing_fixed_variance_order_by {price?: (order_by | null)}

export interface query_rootGenqlSelection{
    /** fetch data from the table: "Account" */
    Account?: (AccountGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Account_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Account_order_by[] | null), 
    /** filter the rows returned */
    where?: (Account_bool_exp | null)} })
    /** fetch aggregated fields from the table: "Account" */
    Account_aggregate?: (Account_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Account_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Account_order_by[] | null), 
    /** filter the rows returned */
    where?: (Account_bool_exp | null)} })
    /** fetch data from the table: "Account" using primary key columns */
    Account_by_pk?: (AccountGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table: "Profile" */
    Profile?: (ProfileGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Profile_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Profile_order_by[] | null), 
    /** filter the rows returned */
    where?: (Profile_bool_exp | null)} })
    /** fetch aggregated fields from the table: "Profile" */
    Profile_aggregate?: (Profile_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Profile_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Profile_order_by[] | null), 
    /** filter the rows returned */
    where?: (Profile_bool_exp | null)} })
    /** fetch data from the table: "Profile" using primary key columns */
    Profile_by_pk?: (ProfileGenqlSelection & { __args: {accountId: Scalars['uuid']} })
    /** fetch data from the table: "Wallet" */
    Wallet?: (WalletGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Wallet_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Wallet_order_by[] | null), 
    /** filter the rows returned */
    where?: (Wallet_bool_exp | null)} })
    /** fetch aggregated fields from the table: "Wallet" */
    Wallet_aggregate?: (Wallet_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Wallet_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Wallet_order_by[] | null), 
    /** filter the rows returned */
    where?: (Wallet_bool_exp | null)} })
    /** fetch data from the table: "Wallet" using primary key columns */
    Wallet_by_pk?: (WalletGenqlSelection & { __args: {address: Scalars['String']} })
    /** fetch data from the table: "Whitelist" */
    Whitelist?: (WhitelistGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Whitelist_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Whitelist_order_by[] | null), 
    /** filter the rows returned */
    where?: (Whitelist_bool_exp | null)} })
    /** fetch data from the table: "WhitelistEntries" */
    WhitelistEntries?: (WhitelistEntriesGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (WhitelistEntries_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (WhitelistEntries_order_by[] | null), 
    /** filter the rows returned */
    where?: (WhitelistEntries_bool_exp | null)} })
    /** fetch aggregated fields from the table: "WhitelistEntries" */
    WhitelistEntries_aggregate?: (WhitelistEntries_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (WhitelistEntries_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (WhitelistEntries_order_by[] | null), 
    /** filter the rows returned */
    where?: (WhitelistEntries_bool_exp | null)} })
    /** fetch data from the table: "WhitelistEntries" using primary key columns */
    WhitelistEntries_by_pk?: (WhitelistEntriesGenqlSelection & { __args: {merkleRoot: Scalars['String'], whitelistIndex: Scalars['Int']} })
    /** fetch aggregated fields from the table: "Whitelist" */
    Whitelist_aggregate?: (Whitelist_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Whitelist_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Whitelist_order_by[] | null), 
    /** filter the rows returned */
    where?: (Whitelist_bool_exp | null)} })
    /** fetch data from the table: "Whitelist" using primary key columns */
    Whitelist_by_pk?: (WhitelistGenqlSelection & { __args: {merkleRoot: Scalars['String']} })
    /** fetch data from the table: "action" */
    action?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** fetch aggregated fields from the table: "action" */
    action_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** fetch data from the table: "action" using primary key columns */
    action_by_pk?: (actionGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table: "article" */
    article?: (articleGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article" */
    article_aggregate?: (article_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** fetch data from the table: "article" using primary key columns */
    article_by_pk?: (articleGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "article_generative_token" */
    article_generative_token?: (article_generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_generative_token_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article_generative_token" */
    article_generative_token_aggregate?: (article_generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_generative_token_bool_exp | null)} })
    /** fetch data from the table: "article_generative_token" using primary key columns */
    article_generative_token_by_pk?: (article_generative_tokenGenqlSelection & { __args: {article_id: Scalars['Int'], generative_token_id: Scalars['String']} })
    /** fetch data from the table: "article_ledger" */
    article_ledger?: (article_ledgerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article_ledger" */
    article_ledger_aggregate?: (article_ledger_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** fetch data from the table: "article_ledger" using primary key columns */
    article_ledger_by_pk?: (article_ledgerGenqlSelection & { __args: {article_id: Scalars['Int'], owner_id: Scalars['String']} })
    /** fetch data from the table: "article_revision" */
    article_revision?: (article_revisionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_revision_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_revision_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_revision_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article_revision" */
    article_revision_aggregate?: (article_revision_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_revision_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_revision_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_revision_bool_exp | null)} })
    /** fetch data from the table: "article_revision" using primary key columns */
    article_revision_by_pk?: (article_revisionGenqlSelection & { __args: {article_id: Scalars['Int'], iteration: Scalars['smallint']} })
    /** fetch data from the table: "auction" */
    auction?: (auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** fetch aggregated fields from the table: "auction" */
    auction_aggregate?: (auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** fetch data from the table: "auction_bid" */
    auction_bid?: (auction_bidGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** fetch aggregated fields from the table: "auction_bid" */
    auction_bid_aggregate?: (auction_bid_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** fetch data from the table: "auction_bid" using primary key columns */
    auction_bid_by_pk?: (auction_bidGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table: "auction_bid_table" */
    auction_bid_table?: (auction_bid_tableGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_table_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_table_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_table_bool_exp | null)} })
    /** fetch aggregated fields from the table: "auction_bid_table" */
    auction_bid_table_aggregate?: (auction_bid_table_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_table_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_table_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_table_bool_exp | null)} })
    /** fetch data from the table: "auction_bid_table" using primary key columns */
    auction_bid_table_by_pk?: (auction_bid_tableGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "auction" using primary key columns */
    auction_by_pk?: (auctionGenqlSelection & { __args: {id: Scalars['Int'], version: Scalars['Int']} })
    /** fetch data from the table: "codex" */
    codex?: (codexGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_bool_exp | null)} })
    /** fetch aggregated fields from the table: "codex" */
    codex_aggregate?: (codex_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_bool_exp | null)} })
    /** fetch data from the table: "codex" using primary key columns */
    codex_by_pk?: (codexGenqlSelection & { __args: {id: Scalars['String'], token_version: Scalars['generative_token_version']} })
    /** fetch data from the table: "codex_update_request" */
    codex_update_request?: (codex_update_requestGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_update_request_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_update_request_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_update_request_bool_exp | null)} })
    /** fetch aggregated fields from the table: "codex_update_request" */
    codex_update_request_aggregate?: (codex_update_request_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_update_request_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_update_request_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_update_request_bool_exp | null)} })
    /** fetch data from the table: "codex_update_request" using primary key columns */
    codex_update_request_by_pk?: (codex_update_requestGenqlSelection & { __args: {codex_id: Scalars['String'], token_id: Scalars['String'], token_version: Scalars['generative_token_version']} })
    /** fetch data from the table: "collaboration" */
    collaboration?: (collaborationGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** fetch aggregated fields from the table: "collaboration" */
    collaboration_aggregate?: (collaboration_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** fetch data from the table: "collaboration" using primary key columns */
    collaboration_by_pk?: (collaborationGenqlSelection & { __args: {collaboration_contract_id: Scalars['String'], collaborator_id: Scalars['String']} })
    /** fetch data from the table: "collection_offer" */
    collection_offer?: (collection_offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    /** fetch aggregated fields from the table: "collection_offer" */
    collection_offer_aggregate?: (collection_offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    /** fetch data from the table: "collection_offer" using primary key columns */
    collection_offer_by_pk?: (collection_offerGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** fetch data from the table: "generative_token" */
    generative_token?: (generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** fetch aggregated fields from the table: "generative_token" */
    generative_token_aggregate?: (generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** fetch data from the table: "generative_token" using primary key columns */
    generative_token_by_pk?: (generative_tokenGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table: "gentk_assign" */
    gentk_assign?: (gentk_assignGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (gentk_assign_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (gentk_assign_order_by[] | null), 
    /** filter the rows returned */
    where?: (gentk_assign_bool_exp | null)} })
    /** fetch aggregated fields from the table: "gentk_assign" */
    gentk_assign_aggregate?: (gentk_assign_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (gentk_assign_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (gentk_assign_order_by[] | null), 
    /** filter the rows returned */
    where?: (gentk_assign_bool_exp | null)} })
    /** fetch data from the table: "gentk_assign" using primary key columns */
    gentk_assign_by_pk?: (gentk_assignGenqlSelection & { __args: {gentk_id: Scalars['String'], gentk_issuer_version: Scalars['generative_token_version']} })
    /** fetch data from the table: "ipfs_cid" */
    ipfs_cid?: (ipfs_cidGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (ipfs_cid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (ipfs_cid_order_by[] | null), 
    /** filter the rows returned */
    where?: (ipfs_cid_bool_exp | null)} })
    /** fetch aggregated fields from the table: "ipfs_cid" */
    ipfs_cid_aggregate?: (ipfs_cid_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (ipfs_cid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (ipfs_cid_order_by[] | null), 
    /** filter the rows returned */
    where?: (ipfs_cid_bool_exp | null)} })
    /** fetch data from the table: "ipfs_cid" using primary key columns */
    ipfs_cid_by_pk?: (ipfs_cidGenqlSelection & { __args: {cid: Scalars['String']} })
    /** fetch data from the table: "listing" */
    listing?: (listingGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** fetch aggregated fields from the table: "listing" */
    listing_aggregate?: (listing_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** fetch data from the table: "listing" using primary key columns */
    listing_by_pk?: (listingGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** fetch data from the table: "market_stats" */
    market_stats?: (market_statsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_bool_exp | null)} })
    /** fetch aggregated fields from the table: "market_stats" */
    market_stats_aggregate?: (market_stats_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_bool_exp | null)} })
    /** fetch data from the table: "market_stats" using primary key columns */
    market_stats_by_pk?: (market_statsGenqlSelection & { __args: {token_id: Scalars['String']} })
    /** fetch data from the table: "market_stats_history" */
    market_stats_history?: (market_stats_historyGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** fetch aggregated fields from the table: "market_stats_history" */
    market_stats_history_aggregate?: (market_stats_history_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** fetch data from the table: "market_stats_history" using primary key columns */
    market_stats_history_by_pk?: (market_stats_historyGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "media_image" */
    media_image?: (media_imageGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (media_image_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (media_image_order_by[] | null), 
    /** filter the rows returned */
    where?: (media_image_bool_exp | null)} })
    /** fetch aggregated fields from the table: "media_image" */
    media_image_aggregate?: (media_image_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (media_image_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (media_image_order_by[] | null), 
    /** filter the rows returned */
    where?: (media_image_bool_exp | null)} })
    /** fetch data from the table: "media_image" using primary key columns */
    media_image_by_pk?: (media_imageGenqlSelection & { __args: {cid: Scalars['bpchar']} })
    /** fetch data from the table: "mint_ticket" */
    mint_ticket?: (mint_ticketGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** fetch aggregated fields from the table: "mint_ticket" */
    mint_ticket_aggregate?: (mint_ticket_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** fetch data from the table: "mint_ticket" using primary key columns */
    mint_ticket_by_pk?: (mint_ticketGenqlSelection & { __args: {id: Scalars['String']} })
    /** An array relationship */
    mint_ticket_settings?: (mint_ticket_settingsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** An aggregate relationship */
    mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** fetch data from the table: "mint_ticket_settings" using primary key columns */
    mint_ticket_settings_by_pk?: (mint_ticket_settingsGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table: "moderation_reason" */
    moderation_reason?: (moderation_reasonGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (moderation_reason_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (moderation_reason_order_by[] | null), 
    /** filter the rows returned */
    where?: (moderation_reason_bool_exp | null)} })
    /** fetch aggregated fields from the table: "moderation_reason" */
    moderation_reason_aggregate?: (moderation_reason_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (moderation_reason_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (moderation_reason_order_by[] | null), 
    /** filter the rows returned */
    where?: (moderation_reason_bool_exp | null)} })
    /** fetch data from the table: "moderation_reason" using primary key columns */
    moderation_reason_by_pk?: (moderation_reasonGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table: "objkt" */
    objkt?: (objktGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** fetch aggregated fields from the table: "objkt" */
    objkt_aggregate?: (objkt_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** fetch data from the table: "objkt" using primary key columns */
    objkt_by_pk?: (objktGenqlSelection & { __args: {id: Scalars['String'], issuer_version: Scalars['generative_token_version']} })
    /** fetch data from the table: "offer" */
    offer?: (offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** fetch aggregated fields from the table: "offer" */
    offer_aggregate?: (offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** fetch data from the table: "offer" using primary key columns */
    offer_by_pk?: (offerGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** fetch data from the table: "pricing_dutch_auction" */
    pricing_dutch_auction?: (pricing_dutch_auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_dutch_auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_dutch_auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_dutch_auction_bool_exp | null)} })
    /** fetch aggregated fields from the table: "pricing_dutch_auction" */
    pricing_dutch_auction_aggregate?: (pricing_dutch_auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_dutch_auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_dutch_auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_dutch_auction_bool_exp | null)} })
    /** fetch data from the table: "pricing_dutch_auction" using primary key columns */
    pricing_dutch_auction_by_pk?: (pricing_dutch_auctionGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table: "pricing_fixed" */
    pricing_fixed?: (pricing_fixedGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_fixed_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_fixed_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_fixed_bool_exp | null)} })
    /** fetch aggregated fields from the table: "pricing_fixed" */
    pricing_fixed_aggregate?: (pricing_fixed_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_fixed_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_fixed_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_fixed_bool_exp | null)} })
    /** fetch data from the table: "pricing_fixed" using primary key columns */
    pricing_fixed_by_pk?: (pricing_fixedGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table: "redeemable" */
    redeemable?: (redeemableGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redeemable_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redeemable_order_by[] | null), 
    /** filter the rows returned */
    where?: (redeemable_bool_exp | null)} })
    /** fetch aggregated fields from the table: "redeemable" */
    redeemable_aggregate?: (redeemable_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redeemable_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redeemable_order_by[] | null), 
    /** filter the rows returned */
    where?: (redeemable_bool_exp | null)} })
    /** fetch data from the table: "redeemable" using primary key columns */
    redeemable_by_pk?: (redeemableGenqlSelection & { __args: {address: Scalars['String']} })
    /** fetch data from the table: "redemption" */
    redemption?: (redemptionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** fetch aggregated fields from the table: "redemption" */
    redemption_aggregate?: (redemption_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** fetch data from the table: "redemption" using primary key columns */
    redemption_by_pk?: (redemptionGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "report" */
    report?: (reportGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** fetch aggregated fields from the table: "report" */
    report_aggregate?: (report_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** fetch data from the table: "report" using primary key columns */
    report_by_pk?: (reportGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table: "reserve" */
    reserve?: (reserveGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (reserve_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (reserve_order_by[] | null), 
    /** filter the rows returned */
    where?: (reserve_bool_exp | null)} })
    /** fetch aggregated fields from the table: "reserve" */
    reserve_aggregate?: (reserve_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (reserve_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (reserve_order_by[] | null), 
    /** filter the rows returned */
    where?: (reserve_bool_exp | null)} })
    /** fetch data from the table: "reserve" using primary key columns */
    reserve_by_pk?: (reserveGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "split" */
    split?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** fetch aggregated fields from the table: "split" */
    split_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** fetch data from the table: "split" using primary key columns */
    split_by_pk?: (splitGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "transaction" */
    transaction?: (transactionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** fetch aggregated fields from the table: "transaction" */
    transaction_aggregate?: (transaction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** fetch data from the table: "transaction" using primary key columns */
    transaction_by_pk?: (transactionGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "user" */
    user?: (userGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    /** fetch aggregated fields from the table: "user" */
    user_aggregate?: (user_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    /** fetch data from the table: "user" using primary key columns */
    user_by_pk?: (userGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table: "user_stats" */
    user_stats?: (user_statsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_stats_bool_exp | null)} })
    /** fetch aggregated fields from the table: "user_stats" */
    user_stats_aggregate?: (user_stats_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_stats_bool_exp | null)} })
    /** fetch data from the table: "user_stats" using primary key columns */
    user_stats_by_pk?: (user_statsGenqlSelection & { __args: {user_id: Scalars['String']} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** columns and relationships of "redeemable" */
export interface redeemableGenqlSelection{
    /** An array relationship */
    actions?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An aggregate relationship */
    actions_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    address?: boolean | number
    base_amount?: boolean | number
    created_at?: boolean | number
    fa2?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    max_consumptions_per_token?: boolean | number
    /** An array relationship */
    redemptions?: (redemptionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** An aggregate relationship */
    redemptions_aggregate?: (redemption_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** An array relationship */
    splits?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** An aggregate relationship */
    splits_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "redeemable" */
export interface redeemable_aggregateGenqlSelection{
    aggregate?: redeemable_aggregate_fieldsGenqlSelection
    nodes?: redeemableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface redeemable_aggregate_bool_exp {count?: (redeemable_aggregate_bool_exp_count | null)}

export interface redeemable_aggregate_bool_exp_count {arguments?: (redeemable_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (redeemable_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "redeemable" */
export interface redeemable_aggregate_fieldsGenqlSelection{
    avg?: redeemable_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (redeemable_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: redeemable_max_fieldsGenqlSelection
    min?: redeemable_min_fieldsGenqlSelection
    stddev?: redeemable_stddev_fieldsGenqlSelection
    stddev_pop?: redeemable_stddev_pop_fieldsGenqlSelection
    stddev_samp?: redeemable_stddev_samp_fieldsGenqlSelection
    sum?: redeemable_sum_fieldsGenqlSelection
    var_pop?: redeemable_var_pop_fieldsGenqlSelection
    var_samp?: redeemable_var_samp_fieldsGenqlSelection
    variance?: redeemable_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "redeemable" */
export interface redeemable_aggregate_order_by {avg?: (redeemable_avg_order_by | null),count?: (order_by | null),max?: (redeemable_max_order_by | null),min?: (redeemable_min_order_by | null),stddev?: (redeemable_stddev_order_by | null),stddev_pop?: (redeemable_stddev_pop_order_by | null),stddev_samp?: (redeemable_stddev_samp_order_by | null),sum?: (redeemable_sum_order_by | null),var_pop?: (redeemable_var_pop_order_by | null),var_samp?: (redeemable_var_samp_order_by | null),variance?: (redeemable_variance_order_by | null)}


/** input type for inserting array relation for remote table "redeemable" */
export interface redeemable_arr_rel_insert_input {data: redeemable_insert_input[],
/** upsert condition */
on_conflict?: (redeemable_on_conflict | null)}


/** aggregate avg on columns */
export interface redeemable_avg_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "redeemable" */
export interface redeemable_avg_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}


/** Boolean expression to filter rows from the table "redeemable". All fields are combined with a logical 'AND'. */
export interface redeemable_bool_exp {_and?: (redeemable_bool_exp[] | null),_not?: (redeemable_bool_exp | null),_or?: (redeemable_bool_exp[] | null),actions?: (action_bool_exp | null),actions_aggregate?: (action_aggregate_bool_exp | null),address?: (String_comparison_exp | null),base_amount?: (numeric_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),fa2?: (String_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),max_consumptions_per_token?: (Int_comparison_exp | null),redemptions?: (redemption_bool_exp | null),redemptions_aggregate?: (redemption_aggregate_bool_exp | null),splits?: (split_bool_exp | null),splits_aggregate?: (split_aggregate_bool_exp | null),token_id?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "redeemable" */
export interface redeemable_inc_input {base_amount?: (Scalars['numeric'] | null),max_consumptions_per_token?: (Scalars['Int'] | null)}


/** input type for inserting data into table "redeemable" */
export interface redeemable_insert_input {actions?: (action_arr_rel_insert_input | null),address?: (Scalars['String'] | null),base_amount?: (Scalars['numeric'] | null),created_at?: (Scalars['timestamptz'] | null),fa2?: (Scalars['String'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),max_consumptions_per_token?: (Scalars['Int'] | null),redemptions?: (redemption_arr_rel_insert_input | null),splits?: (split_arr_rel_insert_input | null),token_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface redeemable_max_fieldsGenqlSelection{
    address?: boolean | number
    base_amount?: boolean | number
    created_at?: boolean | number
    fa2?: boolean | number
    max_consumptions_per_token?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "redeemable" */
export interface redeemable_max_order_by {address?: (order_by | null),base_amount?: (order_by | null),created_at?: (order_by | null),fa2?: (order_by | null),max_consumptions_per_token?: (order_by | null),token_id?: (order_by | null)}


/** aggregate min on columns */
export interface redeemable_min_fieldsGenqlSelection{
    address?: boolean | number
    base_amount?: boolean | number
    created_at?: boolean | number
    fa2?: boolean | number
    max_consumptions_per_token?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "redeemable" */
export interface redeemable_min_order_by {address?: (order_by | null),base_amount?: (order_by | null),created_at?: (order_by | null),fa2?: (order_by | null),max_consumptions_per_token?: (order_by | null),token_id?: (order_by | null)}


/** response of any mutation on the table "redeemable" */
export interface redeemable_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: redeemableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "redeemable" */
export interface redeemable_obj_rel_insert_input {data: redeemable_insert_input,
/** upsert condition */
on_conflict?: (redeemable_on_conflict | null)}


/** on_conflict condition type for table "redeemable" */
export interface redeemable_on_conflict {constraint: redeemable_constraint,update_columns?: redeemable_update_column[],where?: (redeemable_bool_exp | null)}


/** Ordering options when selecting data from "redeemable". */
export interface redeemable_order_by {actions_aggregate?: (action_aggregate_order_by | null),address?: (order_by | null),base_amount?: (order_by | null),created_at?: (order_by | null),fa2?: (order_by | null),generative_token?: (generative_token_order_by | null),max_consumptions_per_token?: (order_by | null),redemptions_aggregate?: (redemption_aggregate_order_by | null),splits_aggregate?: (split_aggregate_order_by | null),token_id?: (order_by | null)}


/** primary key columns input for table: redeemable */
export interface redeemable_pk_columns_input {address: Scalars['String']}


/** input type for updating data in table "redeemable" */
export interface redeemable_set_input {address?: (Scalars['String'] | null),base_amount?: (Scalars['numeric'] | null),created_at?: (Scalars['timestamptz'] | null),fa2?: (Scalars['String'] | null),max_consumptions_per_token?: (Scalars['Int'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface redeemable_stddev_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "redeemable" */
export interface redeemable_stddev_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface redeemable_stddev_pop_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "redeemable" */
export interface redeemable_stddev_pop_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface redeemable_stddev_samp_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "redeemable" */
export interface redeemable_stddev_samp_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}


/** Streaming cursor of the table "redeemable" */
export interface redeemable_stream_cursor_input {
/** Stream column input with initial value */
initial_value: redeemable_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface redeemable_stream_cursor_value_input {address?: (Scalars['String'] | null),base_amount?: (Scalars['numeric'] | null),created_at?: (Scalars['timestamptz'] | null),fa2?: (Scalars['String'] | null),max_consumptions_per_token?: (Scalars['Int'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface redeemable_sum_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "redeemable" */
export interface redeemable_sum_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}

export interface redeemable_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (redeemable_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (redeemable_set_input | null),
/** filter the rows which have to be updated */
where: redeemable_bool_exp}


/** aggregate var_pop on columns */
export interface redeemable_var_pop_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "redeemable" */
export interface redeemable_var_pop_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}


/** aggregate var_samp on columns */
export interface redeemable_var_samp_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "redeemable" */
export interface redeemable_var_samp_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}


/** aggregate variance on columns */
export interface redeemable_variance_fieldsGenqlSelection{
    base_amount?: boolean | number
    max_consumptions_per_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "redeemable" */
export interface redeemable_variance_order_by {base_amount?: (order_by | null),max_consumptions_per_token?: (order_by | null)}


/** columns and relationships of "redemption" */
export interface redemptionGenqlSelection{
    amount?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    /** An object relationship */
    objkt?: objktGenqlSelection
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    /** An object relationship */
    redeemable?: redeemableGenqlSelection
    redeemable_address?: boolean | number
    redeemer_id?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "redemption" */
export interface redemption_aggregateGenqlSelection{
    aggregate?: redemption_aggregate_fieldsGenqlSelection
    nodes?: redemptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface redemption_aggregate_bool_exp {count?: (redemption_aggregate_bool_exp_count | null)}

export interface redemption_aggregate_bool_exp_count {arguments?: (redemption_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (redemption_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "redemption" */
export interface redemption_aggregate_fieldsGenqlSelection{
    avg?: redemption_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (redemption_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: redemption_max_fieldsGenqlSelection
    min?: redemption_min_fieldsGenqlSelection
    stddev?: redemption_stddev_fieldsGenqlSelection
    stddev_pop?: redemption_stddev_pop_fieldsGenqlSelection
    stddev_samp?: redemption_stddev_samp_fieldsGenqlSelection
    sum?: redemption_sum_fieldsGenqlSelection
    var_pop?: redemption_var_pop_fieldsGenqlSelection
    var_samp?: redemption_var_samp_fieldsGenqlSelection
    variance?: redemption_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "redemption" */
export interface redemption_aggregate_order_by {avg?: (redemption_avg_order_by | null),count?: (order_by | null),max?: (redemption_max_order_by | null),min?: (redemption_min_order_by | null),stddev?: (redemption_stddev_order_by | null),stddev_pop?: (redemption_stddev_pop_order_by | null),stddev_samp?: (redemption_stddev_samp_order_by | null),sum?: (redemption_sum_order_by | null),var_pop?: (redemption_var_pop_order_by | null),var_samp?: (redemption_var_samp_order_by | null),variance?: (redemption_variance_order_by | null)}


/** input type for inserting array relation for remote table "redemption" */
export interface redemption_arr_rel_insert_input {data: redemption_insert_input[],
/** upsert condition */
on_conflict?: (redemption_on_conflict | null)}


/** aggregate avg on columns */
export interface redemption_avg_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "redemption" */
export interface redemption_avg_order_by {amount?: (order_by | null),id?: (order_by | null)}


/** Boolean expression to filter rows from the table "redemption". All fields are combined with a logical 'AND'. */
export interface redemption_bool_exp {_and?: (redemption_bool_exp[] | null),_not?: (redemption_bool_exp | null),_or?: (redemption_bool_exp[] | null),amount?: (numeric_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),id?: (Int_comparison_exp | null),objkt?: (objkt_bool_exp | null),objkt_id?: (String_comparison_exp | null),objkt_issuer_version?: (generative_token_version_comparison_exp | null),redeemable?: (redeemable_bool_exp | null),redeemable_address?: (String_comparison_exp | null),redeemer_id?: (String_comparison_exp | null),user?: (user_bool_exp | null)}


/** input type for incrementing numeric columns in table "redemption" */
export interface redemption_inc_input {amount?: (Scalars['numeric'] | null),id?: (Scalars['Int'] | null)}


/** input type for inserting data into table "redemption" */
export interface redemption_insert_input {amount?: (Scalars['numeric'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),objkt?: (objkt_obj_rel_insert_input | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),redeemable?: (redeemable_obj_rel_insert_input | null),redeemable_address?: (Scalars['String'] | null),redeemer_id?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface redemption_max_fieldsGenqlSelection{
    amount?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    redeemable_address?: boolean | number
    redeemer_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "redemption" */
export interface redemption_max_order_by {amount?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),redeemable_address?: (order_by | null),redeemer_id?: (order_by | null)}


/** aggregate min on columns */
export interface redemption_min_fieldsGenqlSelection{
    amount?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    redeemable_address?: boolean | number
    redeemer_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "redemption" */
export interface redemption_min_order_by {amount?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),redeemable_address?: (order_by | null),redeemer_id?: (order_by | null)}


/** response of any mutation on the table "redemption" */
export interface redemption_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: redemptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "redemption" */
export interface redemption_on_conflict {constraint: redemption_constraint,update_columns?: redemption_update_column[],where?: (redemption_bool_exp | null)}


/** Ordering options when selecting data from "redemption". */
export interface redemption_order_by {amount?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt?: (objkt_order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),redeemable?: (redeemable_order_by | null),redeemable_address?: (order_by | null),redeemer_id?: (order_by | null),user?: (user_order_by | null)}


/** primary key columns input for table: redemption */
export interface redemption_pk_columns_input {id: Scalars['Int']}


/** input type for updating data in table "redemption" */
export interface redemption_set_input {amount?: (Scalars['numeric'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),redeemable_address?: (Scalars['String'] | null),redeemer_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface redemption_stddev_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "redemption" */
export interface redemption_stddev_order_by {amount?: (order_by | null),id?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface redemption_stddev_pop_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "redemption" */
export interface redemption_stddev_pop_order_by {amount?: (order_by | null),id?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface redemption_stddev_samp_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "redemption" */
export interface redemption_stddev_samp_order_by {amount?: (order_by | null),id?: (order_by | null)}


/** Streaming cursor of the table "redemption" */
export interface redemption_stream_cursor_input {
/** Stream column input with initial value */
initial_value: redemption_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface redemption_stream_cursor_value_input {amount?: (Scalars['numeric'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),redeemable_address?: (Scalars['String'] | null),redeemer_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface redemption_sum_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "redemption" */
export interface redemption_sum_order_by {amount?: (order_by | null),id?: (order_by | null)}

export interface redemption_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (redemption_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (redemption_set_input | null),
/** filter the rows which have to be updated */
where: redemption_bool_exp}


/** aggregate var_pop on columns */
export interface redemption_var_pop_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "redemption" */
export interface redemption_var_pop_order_by {amount?: (order_by | null),id?: (order_by | null)}


/** aggregate var_samp on columns */
export interface redemption_var_samp_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "redemption" */
export interface redemption_var_samp_order_by {amount?: (order_by | null),id?: (order_by | null)}


/** aggregate variance on columns */
export interface redemption_variance_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "redemption" */
export interface redemption_variance_order_by {amount?: (order_by | null),id?: (order_by | null)}


/** columns and relationships of "report" */
export interface reportGenqlSelection{
    created_at?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    /** An object relationship */
    moderation_reason?: moderation_reasonGenqlSelection
    reason_id?: boolean | number
    token_id?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "report" */
export interface report_aggregateGenqlSelection{
    aggregate?: report_aggregate_fieldsGenqlSelection
    nodes?: reportGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface report_aggregate_bool_exp {count?: (report_aggregate_bool_exp_count | null)}

export interface report_aggregate_bool_exp_count {arguments?: (report_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (report_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "report" */
export interface report_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (report_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: report_max_fieldsGenqlSelection
    min?: report_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "report" */
export interface report_aggregate_order_by {count?: (order_by | null),max?: (report_max_order_by | null),min?: (report_min_order_by | null)}


/** input type for inserting array relation for remote table "report" */
export interface report_arr_rel_insert_input {data: report_insert_input[],
/** upsert condition */
on_conflict?: (report_on_conflict | null)}


/** Boolean expression to filter rows from the table "report". All fields are combined with a logical 'AND'. */
export interface report_bool_exp {_and?: (report_bool_exp[] | null),_not?: (report_bool_exp | null),_or?: (report_bool_exp[] | null),created_at?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),id?: (uuid_comparison_exp | null),moderation_reason?: (moderation_reason_bool_exp | null),reason_id?: (String_comparison_exp | null),token_id?: (String_comparison_exp | null),user?: (user_bool_exp | null),user_id?: (String_comparison_exp | null)}


/** input type for inserting data into table "report" */
export interface report_insert_input {created_at?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['uuid'] | null),moderation_reason?: (moderation_reason_obj_rel_insert_input | null),reason_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null),user_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface report_max_fieldsGenqlSelection{
    created_at?: boolean | number
    id?: boolean | number
    reason_id?: boolean | number
    token_id?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "report" */
export interface report_max_order_by {created_at?: (order_by | null),id?: (order_by | null),reason_id?: (order_by | null),token_id?: (order_by | null),user_id?: (order_by | null)}


/** aggregate min on columns */
export interface report_min_fieldsGenqlSelection{
    created_at?: boolean | number
    id?: boolean | number
    reason_id?: boolean | number
    token_id?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "report" */
export interface report_min_order_by {created_at?: (order_by | null),id?: (order_by | null),reason_id?: (order_by | null),token_id?: (order_by | null),user_id?: (order_by | null)}


/** response of any mutation on the table "report" */
export interface report_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: reportGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "report" */
export interface report_on_conflict {constraint: report_constraint,update_columns?: report_update_column[],where?: (report_bool_exp | null)}


/** Ordering options when selecting data from "report". */
export interface report_order_by {created_at?: (order_by | null),generative_token?: (generative_token_order_by | null),id?: (order_by | null),moderation_reason?: (moderation_reason_order_by | null),reason_id?: (order_by | null),token_id?: (order_by | null),user?: (user_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: report */
export interface report_pk_columns_input {id: Scalars['uuid']}


/** input type for updating data in table "report" */
export interface report_set_input {created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),reason_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Streaming cursor of the table "report" */
export interface report_stream_cursor_input {
/** Stream column input with initial value */
initial_value: report_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface report_stream_cursor_value_input {created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['uuid'] | null),reason_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}

export interface report_updates {
/** sets the columns of the filtered rows to the given values */
_set?: (report_set_input | null),
/** filter the rows which have to be updated */
where: report_bool_exp}


/** columns and relationships of "reserve" */
export interface reserveGenqlSelection{
    amount?: boolean | number
    data?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    method?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "reserve" */
export interface reserve_aggregateGenqlSelection{
    aggregate?: reserve_aggregate_fieldsGenqlSelection
    nodes?: reserveGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface reserve_aggregate_bool_exp {count?: (reserve_aggregate_bool_exp_count | null)}

export interface reserve_aggregate_bool_exp_count {arguments?: (reserve_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (reserve_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "reserve" */
export interface reserve_aggregate_fieldsGenqlSelection{
    avg?: reserve_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (reserve_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: reserve_max_fieldsGenqlSelection
    min?: reserve_min_fieldsGenqlSelection
    stddev?: reserve_stddev_fieldsGenqlSelection
    stddev_pop?: reserve_stddev_pop_fieldsGenqlSelection
    stddev_samp?: reserve_stddev_samp_fieldsGenqlSelection
    sum?: reserve_sum_fieldsGenqlSelection
    var_pop?: reserve_var_pop_fieldsGenqlSelection
    var_samp?: reserve_var_samp_fieldsGenqlSelection
    variance?: reserve_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "reserve" */
export interface reserve_aggregate_order_by {avg?: (reserve_avg_order_by | null),count?: (order_by | null),max?: (reserve_max_order_by | null),min?: (reserve_min_order_by | null),stddev?: (reserve_stddev_order_by | null),stddev_pop?: (reserve_stddev_pop_order_by | null),stddev_samp?: (reserve_stddev_samp_order_by | null),sum?: (reserve_sum_order_by | null),var_pop?: (reserve_var_pop_order_by | null),var_samp?: (reserve_var_samp_order_by | null),variance?: (reserve_variance_order_by | null)}


/** append existing jsonb value of filtered columns with new jsonb value */
export interface reserve_append_input {data?: (Scalars['jsonb'] | null)}


/** input type for inserting array relation for remote table "reserve" */
export interface reserve_arr_rel_insert_input {data: reserve_insert_input[],
/** upsert condition */
on_conflict?: (reserve_on_conflict | null)}


/** aggregate avg on columns */
export interface reserve_avg_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "reserve" */
export interface reserve_avg_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}


/** Boolean expression to filter rows from the table "reserve". All fields are combined with a logical 'AND'. */
export interface reserve_bool_exp {_and?: (reserve_bool_exp[] | null),_not?: (reserve_bool_exp | null),_or?: (reserve_bool_exp[] | null),amount?: (numeric_comparison_exp | null),data?: (jsonb_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),id?: (Int_comparison_exp | null),method?: (Int_comparison_exp | null),token_id?: (String_comparison_exp | null)}


/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export interface reserve_delete_at_path_input {data?: (Scalars['String'][] | null)}


/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export interface reserve_delete_elem_input {data?: (Scalars['Int'] | null)}


/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export interface reserve_delete_key_input {data?: (Scalars['String'] | null)}


/** input type for incrementing numeric columns in table "reserve" */
export interface reserve_inc_input {amount?: (Scalars['numeric'] | null),id?: (Scalars['Int'] | null),method?: (Scalars['Int'] | null)}


/** input type for inserting data into table "reserve" */
export interface reserve_insert_input {amount?: (Scalars['numeric'] | null),data?: (Scalars['jsonb'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['Int'] | null),method?: (Scalars['Int'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface reserve_max_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "reserve" */
export interface reserve_max_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null),token_id?: (order_by | null)}


/** aggregate min on columns */
export interface reserve_min_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    token_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "reserve" */
export interface reserve_min_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null),token_id?: (order_by | null)}


/** response of any mutation on the table "reserve" */
export interface reserve_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: reserveGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "reserve" */
export interface reserve_on_conflict {constraint: reserve_constraint,update_columns?: reserve_update_column[],where?: (reserve_bool_exp | null)}


/** Ordering options when selecting data from "reserve". */
export interface reserve_order_by {amount?: (order_by | null),data?: (order_by | null),generative_token?: (generative_token_order_by | null),id?: (order_by | null),method?: (order_by | null),token_id?: (order_by | null)}


/** primary key columns input for table: reserve */
export interface reserve_pk_columns_input {id: Scalars['Int']}


/** prepend existing jsonb value of filtered columns with new jsonb value */
export interface reserve_prepend_input {data?: (Scalars['jsonb'] | null)}


/** input type for updating data in table "reserve" */
export interface reserve_set_input {amount?: (Scalars['numeric'] | null),data?: (Scalars['jsonb'] | null),id?: (Scalars['Int'] | null),method?: (Scalars['Int'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface reserve_stddev_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "reserve" */
export interface reserve_stddev_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface reserve_stddev_pop_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "reserve" */
export interface reserve_stddev_pop_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface reserve_stddev_samp_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "reserve" */
export interface reserve_stddev_samp_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}


/** Streaming cursor of the table "reserve" */
export interface reserve_stream_cursor_input {
/** Stream column input with initial value */
initial_value: reserve_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface reserve_stream_cursor_value_input {amount?: (Scalars['numeric'] | null),data?: (Scalars['jsonb'] | null),id?: (Scalars['Int'] | null),method?: (Scalars['Int'] | null),token_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface reserve_sum_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "reserve" */
export interface reserve_sum_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}

export interface reserve_updates {
/** append existing jsonb value of filtered columns with new jsonb value */
_append?: (reserve_append_input | null),
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
_delete_at_path?: (reserve_delete_at_path_input | null),
/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
_delete_elem?: (reserve_delete_elem_input | null),
/** delete key/value pair or string element. key/value pairs are matched based on their key value */
_delete_key?: (reserve_delete_key_input | null),
/** increments the numeric columns with given value of the filtered values */
_inc?: (reserve_inc_input | null),
/** prepend existing jsonb value of filtered columns with new jsonb value */
_prepend?: (reserve_prepend_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (reserve_set_input | null),
/** filter the rows which have to be updated */
where: reserve_bool_exp}


/** aggregate var_pop on columns */
export interface reserve_var_pop_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "reserve" */
export interface reserve_var_pop_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}


/** aggregate var_samp on columns */
export interface reserve_var_samp_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "reserve" */
export interface reserve_var_samp_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}


/** aggregate variance on columns */
export interface reserve_variance_fieldsGenqlSelection{
    amount?: boolean | number
    id?: boolean | number
    method?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "reserve" */
export interface reserve_variance_order_by {amount?: (order_by | null),id?: (order_by | null),method?: (order_by | null)}


/** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
export interface smallint_comparison_exp {_eq?: (Scalars['smallint'] | null),_gt?: (Scalars['smallint'] | null),_gte?: (Scalars['smallint'] | null),_in?: (Scalars['smallint'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['smallint'] | null),_lte?: (Scalars['smallint'] | null),_neq?: (Scalars['smallint'] | null),_nin?: (Scalars['smallint'][] | null)}


/** columns and relationships of "split" */
export interface splitGenqlSelection{
    /** An object relationship */
    article?: articleGenqlSelection
    article_id?: boolean | number
    /** An object relationship */
    generativeTokenByGenerativeTokenPrimaryId?: generative_tokenGenqlSelection
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    generative_token_primary_id?: boolean | number
    generative_token_secondary_id?: boolean | number
    id?: boolean | number
    /** An object relationship */
    objkt?: objktGenqlSelection
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    pct?: boolean | number
    /** An object relationship */
    redeemable?: redeemableGenqlSelection
    redeemable_address?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "split" */
export interface split_aggregateGenqlSelection{
    aggregate?: split_aggregate_fieldsGenqlSelection
    nodes?: splitGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface split_aggregate_bool_exp {count?: (split_aggregate_bool_exp_count | null)}

export interface split_aggregate_bool_exp_count {arguments?: (split_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (split_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "split" */
export interface split_aggregate_fieldsGenqlSelection{
    avg?: split_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (split_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: split_max_fieldsGenqlSelection
    min?: split_min_fieldsGenqlSelection
    stddev?: split_stddev_fieldsGenqlSelection
    stddev_pop?: split_stddev_pop_fieldsGenqlSelection
    stddev_samp?: split_stddev_samp_fieldsGenqlSelection
    sum?: split_sum_fieldsGenqlSelection
    var_pop?: split_var_pop_fieldsGenqlSelection
    var_samp?: split_var_samp_fieldsGenqlSelection
    variance?: split_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "split" */
export interface split_aggregate_order_by {avg?: (split_avg_order_by | null),count?: (order_by | null),max?: (split_max_order_by | null),min?: (split_min_order_by | null),stddev?: (split_stddev_order_by | null),stddev_pop?: (split_stddev_pop_order_by | null),stddev_samp?: (split_stddev_samp_order_by | null),sum?: (split_sum_order_by | null),var_pop?: (split_var_pop_order_by | null),var_samp?: (split_var_samp_order_by | null),variance?: (split_variance_order_by | null)}


/** input type for inserting array relation for remote table "split" */
export interface split_arr_rel_insert_input {data: split_insert_input[],
/** upsert condition */
on_conflict?: (split_on_conflict | null)}


/** aggregate avg on columns */
export interface split_avg_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "split" */
export interface split_avg_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}


/** Boolean expression to filter rows from the table "split". All fields are combined with a logical 'AND'. */
export interface split_bool_exp {_and?: (split_bool_exp[] | null),_not?: (split_bool_exp | null),_or?: (split_bool_exp[] | null),article?: (article_bool_exp | null),article_id?: (Int_comparison_exp | null),generativeTokenByGenerativeTokenPrimaryId?: (generative_token_bool_exp | null),generative_token?: (generative_token_bool_exp | null),generative_token_primary_id?: (String_comparison_exp | null),generative_token_secondary_id?: (String_comparison_exp | null),id?: (Int_comparison_exp | null),objkt?: (objkt_bool_exp | null),objkt_id?: (String_comparison_exp | null),objkt_issuer_version?: (generative_token_version_comparison_exp | null),pct?: (Int_comparison_exp | null),redeemable?: (redeemable_bool_exp | null),redeemable_address?: (String_comparison_exp | null),user?: (user_bool_exp | null),user_id?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "split" */
export interface split_inc_input {article_id?: (Scalars['Int'] | null),id?: (Scalars['Int'] | null),pct?: (Scalars['Int'] | null)}


/** input type for inserting data into table "split" */
export interface split_insert_input {article?: (article_obj_rel_insert_input | null),article_id?: (Scalars['Int'] | null),generativeTokenByGenerativeTokenPrimaryId?: (generative_token_obj_rel_insert_input | null),generative_token?: (generative_token_obj_rel_insert_input | null),generative_token_primary_id?: (Scalars['String'] | null),generative_token_secondary_id?: (Scalars['String'] | null),id?: (Scalars['Int'] | null),objkt?: (objkt_obj_rel_insert_input | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),pct?: (Scalars['Int'] | null),redeemable?: (redeemable_obj_rel_insert_input | null),redeemable_address?: (Scalars['String'] | null),user?: (user_obj_rel_insert_input | null),user_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface split_max_fieldsGenqlSelection{
    article_id?: boolean | number
    generative_token_primary_id?: boolean | number
    generative_token_secondary_id?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    pct?: boolean | number
    redeemable_address?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "split" */
export interface split_max_order_by {article_id?: (order_by | null),generative_token_primary_id?: (order_by | null),generative_token_secondary_id?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),pct?: (order_by | null),redeemable_address?: (order_by | null),user_id?: (order_by | null)}


/** aggregate min on columns */
export interface split_min_fieldsGenqlSelection{
    article_id?: boolean | number
    generative_token_primary_id?: boolean | number
    generative_token_secondary_id?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    pct?: boolean | number
    redeemable_address?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "split" */
export interface split_min_order_by {article_id?: (order_by | null),generative_token_primary_id?: (order_by | null),generative_token_secondary_id?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),pct?: (order_by | null),redeemable_address?: (order_by | null),user_id?: (order_by | null)}


/** response of any mutation on the table "split" */
export interface split_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: splitGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "split" */
export interface split_on_conflict {constraint: split_constraint,update_columns?: split_update_column[],where?: (split_bool_exp | null)}


/** Ordering options when selecting data from "split". */
export interface split_order_by {article?: (article_order_by | null),article_id?: (order_by | null),generativeTokenByGenerativeTokenPrimaryId?: (generative_token_order_by | null),generative_token?: (generative_token_order_by | null),generative_token_primary_id?: (order_by | null),generative_token_secondary_id?: (order_by | null),id?: (order_by | null),objkt?: (objkt_order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),pct?: (order_by | null),redeemable?: (redeemable_order_by | null),redeemable_address?: (order_by | null),user?: (user_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: split */
export interface split_pk_columns_input {id: Scalars['Int']}


/** input type for updating data in table "split" */
export interface split_set_input {article_id?: (Scalars['Int'] | null),generative_token_primary_id?: (Scalars['String'] | null),generative_token_secondary_id?: (Scalars['String'] | null),id?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),pct?: (Scalars['Int'] | null),redeemable_address?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface split_stddev_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "split" */
export interface split_stddev_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface split_stddev_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "split" */
export interface split_stddev_pop_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface split_stddev_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "split" */
export interface split_stddev_samp_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}


/** Streaming cursor of the table "split" */
export interface split_stream_cursor_input {
/** Stream column input with initial value */
initial_value: split_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface split_stream_cursor_value_input {article_id?: (Scalars['Int'] | null),generative_token_primary_id?: (Scalars['String'] | null),generative_token_secondary_id?: (Scalars['String'] | null),id?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),pct?: (Scalars['Int'] | null),redeemable_address?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface split_sum_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "split" */
export interface split_sum_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}

export interface split_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (split_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (split_set_input | null),
/** filter the rows which have to be updated */
where: split_bool_exp}


/** aggregate var_pop on columns */
export interface split_var_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "split" */
export interface split_var_pop_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}


/** aggregate var_samp on columns */
export interface split_var_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "split" */
export interface split_var_samp_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}


/** aggregate variance on columns */
export interface split_variance_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    pct?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "split" */
export interface split_variance_order_by {article_id?: (order_by | null),id?: (order_by | null),pct?: (order_by | null)}

export interface subscription_rootGenqlSelection{
    /** fetch data from the table: "Account" */
    Account?: (AccountGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Account_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Account_order_by[] | null), 
    /** filter the rows returned */
    where?: (Account_bool_exp | null)} })
    /** fetch aggregated fields from the table: "Account" */
    Account_aggregate?: (Account_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Account_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Account_order_by[] | null), 
    /** filter the rows returned */
    where?: (Account_bool_exp | null)} })
    /** fetch data from the table: "Account" using primary key columns */
    Account_by_pk?: (AccountGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table in a streaming manner: "Account" */
    Account_stream?: (AccountGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (Account_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (Account_bool_exp | null)} })
    /** fetch data from the table: "Profile" */
    Profile?: (ProfileGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Profile_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Profile_order_by[] | null), 
    /** filter the rows returned */
    where?: (Profile_bool_exp | null)} })
    /** fetch aggregated fields from the table: "Profile" */
    Profile_aggregate?: (Profile_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Profile_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Profile_order_by[] | null), 
    /** filter the rows returned */
    where?: (Profile_bool_exp | null)} })
    /** fetch data from the table: "Profile" using primary key columns */
    Profile_by_pk?: (ProfileGenqlSelection & { __args: {accountId: Scalars['uuid']} })
    /** fetch data from the table in a streaming manner: "Profile" */
    Profile_stream?: (ProfileGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (Profile_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (Profile_bool_exp | null)} })
    /** fetch data from the table: "Wallet" */
    Wallet?: (WalletGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Wallet_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Wallet_order_by[] | null), 
    /** filter the rows returned */
    where?: (Wallet_bool_exp | null)} })
    /** fetch aggregated fields from the table: "Wallet" */
    Wallet_aggregate?: (Wallet_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Wallet_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Wallet_order_by[] | null), 
    /** filter the rows returned */
    where?: (Wallet_bool_exp | null)} })
    /** fetch data from the table: "Wallet" using primary key columns */
    Wallet_by_pk?: (WalletGenqlSelection & { __args: {address: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "Wallet" */
    Wallet_stream?: (WalletGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (Wallet_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (Wallet_bool_exp | null)} })
    /** fetch data from the table: "Whitelist" */
    Whitelist?: (WhitelistGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Whitelist_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Whitelist_order_by[] | null), 
    /** filter the rows returned */
    where?: (Whitelist_bool_exp | null)} })
    /** fetch data from the table: "WhitelistEntries" */
    WhitelistEntries?: (WhitelistEntriesGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (WhitelistEntries_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (WhitelistEntries_order_by[] | null), 
    /** filter the rows returned */
    where?: (WhitelistEntries_bool_exp | null)} })
    /** fetch aggregated fields from the table: "WhitelistEntries" */
    WhitelistEntries_aggregate?: (WhitelistEntries_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (WhitelistEntries_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (WhitelistEntries_order_by[] | null), 
    /** filter the rows returned */
    where?: (WhitelistEntries_bool_exp | null)} })
    /** fetch data from the table: "WhitelistEntries" using primary key columns */
    WhitelistEntries_by_pk?: (WhitelistEntriesGenqlSelection & { __args: {merkleRoot: Scalars['String'], whitelistIndex: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "WhitelistEntries" */
    WhitelistEntries_stream?: (WhitelistEntriesGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (WhitelistEntries_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (WhitelistEntries_bool_exp | null)} })
    /** fetch aggregated fields from the table: "Whitelist" */
    Whitelist_aggregate?: (Whitelist_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (Whitelist_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (Whitelist_order_by[] | null), 
    /** filter the rows returned */
    where?: (Whitelist_bool_exp | null)} })
    /** fetch data from the table: "Whitelist" using primary key columns */
    Whitelist_by_pk?: (WhitelistGenqlSelection & { __args: {merkleRoot: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "Whitelist" */
    Whitelist_stream?: (WhitelistGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (Whitelist_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (Whitelist_bool_exp | null)} })
    /** fetch data from the table: "action" */
    action?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** fetch aggregated fields from the table: "action" */
    action_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** fetch data from the table: "action" using primary key columns */
    action_by_pk?: (actionGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table in a streaming manner: "action" */
    action_stream?: (actionGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (action_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** fetch data from the table: "article" */
    article?: (articleGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article" */
    article_aggregate?: (article_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** fetch data from the table: "article" using primary key columns */
    article_by_pk?: (articleGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table: "article_generative_token" */
    article_generative_token?: (article_generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_generative_token_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article_generative_token" */
    article_generative_token_aggregate?: (article_generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_generative_token_bool_exp | null)} })
    /** fetch data from the table: "article_generative_token" using primary key columns */
    article_generative_token_by_pk?: (article_generative_tokenGenqlSelection & { __args: {article_id: Scalars['Int'], generative_token_id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "article_generative_token" */
    article_generative_token_stream?: (article_generative_tokenGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (article_generative_token_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (article_generative_token_bool_exp | null)} })
    /** fetch data from the table: "article_ledger" */
    article_ledger?: (article_ledgerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article_ledger" */
    article_ledger_aggregate?: (article_ledger_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** fetch data from the table: "article_ledger" using primary key columns */
    article_ledger_by_pk?: (article_ledgerGenqlSelection & { __args: {article_id: Scalars['Int'], owner_id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "article_ledger" */
    article_ledger_stream?: (article_ledgerGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (article_ledger_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** fetch data from the table: "article_revision" */
    article_revision?: (article_revisionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_revision_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_revision_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_revision_bool_exp | null)} })
    /** fetch aggregated fields from the table: "article_revision" */
    article_revision_aggregate?: (article_revision_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_revision_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_revision_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_revision_bool_exp | null)} })
    /** fetch data from the table: "article_revision" using primary key columns */
    article_revision_by_pk?: (article_revisionGenqlSelection & { __args: {article_id: Scalars['Int'], iteration: Scalars['smallint']} })
    /** fetch data from the table in a streaming manner: "article_revision" */
    article_revision_stream?: (article_revisionGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (article_revision_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (article_revision_bool_exp | null)} })
    /** fetch data from the table in a streaming manner: "article" */
    article_stream?: (articleGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (article_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** fetch data from the table: "auction" */
    auction?: (auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** fetch aggregated fields from the table: "auction" */
    auction_aggregate?: (auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** fetch data from the table: "auction_bid" */
    auction_bid?: (auction_bidGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** fetch aggregated fields from the table: "auction_bid" */
    auction_bid_aggregate?: (auction_bid_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** fetch data from the table: "auction_bid" using primary key columns */
    auction_bid_by_pk?: (auction_bidGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table in a streaming manner: "auction_bid" */
    auction_bid_stream?: (auction_bidGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (auction_bid_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** fetch data from the table: "auction_bid_table" */
    auction_bid_table?: (auction_bid_tableGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_table_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_table_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_table_bool_exp | null)} })
    /** fetch aggregated fields from the table: "auction_bid_table" */
    auction_bid_table_aggregate?: (auction_bid_table_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_table_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_table_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_table_bool_exp | null)} })
    /** fetch data from the table: "auction_bid_table" using primary key columns */
    auction_bid_table_by_pk?: (auction_bid_tableGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "auction_bid_table" */
    auction_bid_table_stream?: (auction_bid_tableGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (auction_bid_table_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (auction_bid_table_bool_exp | null)} })
    /** fetch data from the table: "auction" using primary key columns */
    auction_by_pk?: (auctionGenqlSelection & { __args: {id: Scalars['Int'], version: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "auction" */
    auction_stream?: (auctionGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (auction_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** fetch data from the table: "codex" */
    codex?: (codexGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_bool_exp | null)} })
    /** fetch aggregated fields from the table: "codex" */
    codex_aggregate?: (codex_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_bool_exp | null)} })
    /** fetch data from the table: "codex" using primary key columns */
    codex_by_pk?: (codexGenqlSelection & { __args: {id: Scalars['String'], token_version: Scalars['generative_token_version']} })
    /** fetch data from the table in a streaming manner: "codex" */
    codex_stream?: (codexGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (codex_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (codex_bool_exp | null)} })
    /** fetch data from the table: "codex_update_request" */
    codex_update_request?: (codex_update_requestGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_update_request_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_update_request_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_update_request_bool_exp | null)} })
    /** fetch aggregated fields from the table: "codex_update_request" */
    codex_update_request_aggregate?: (codex_update_request_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_update_request_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_update_request_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_update_request_bool_exp | null)} })
    /** fetch data from the table: "codex_update_request" using primary key columns */
    codex_update_request_by_pk?: (codex_update_requestGenqlSelection & { __args: {codex_id: Scalars['String'], token_id: Scalars['String'], token_version: Scalars['generative_token_version']} })
    /** fetch data from the table in a streaming manner: "codex_update_request" */
    codex_update_request_stream?: (codex_update_requestGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (codex_update_request_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (codex_update_request_bool_exp | null)} })
    /** fetch data from the table: "collaboration" */
    collaboration?: (collaborationGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** fetch aggregated fields from the table: "collaboration" */
    collaboration_aggregate?: (collaboration_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** fetch data from the table: "collaboration" using primary key columns */
    collaboration_by_pk?: (collaborationGenqlSelection & { __args: {collaboration_contract_id: Scalars['String'], collaborator_id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "collaboration" */
    collaboration_stream?: (collaborationGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (collaboration_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** fetch data from the table: "collection_offer" */
    collection_offer?: (collection_offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    /** fetch aggregated fields from the table: "collection_offer" */
    collection_offer_aggregate?: (collection_offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    /** fetch data from the table: "collection_offer" using primary key columns */
    collection_offer_by_pk?: (collection_offerGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "collection_offer" */
    collection_offer_stream?: (collection_offerGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (collection_offer_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    /** fetch data from the table: "generative_token" */
    generative_token?: (generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** fetch aggregated fields from the table: "generative_token" */
    generative_token_aggregate?: (generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** fetch data from the table: "generative_token" using primary key columns */
    generative_token_by_pk?: (generative_tokenGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "generative_token" */
    generative_token_stream?: (generative_tokenGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (generative_token_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** fetch data from the table: "gentk_assign" */
    gentk_assign?: (gentk_assignGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (gentk_assign_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (gentk_assign_order_by[] | null), 
    /** filter the rows returned */
    where?: (gentk_assign_bool_exp | null)} })
    /** fetch aggregated fields from the table: "gentk_assign" */
    gentk_assign_aggregate?: (gentk_assign_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (gentk_assign_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (gentk_assign_order_by[] | null), 
    /** filter the rows returned */
    where?: (gentk_assign_bool_exp | null)} })
    /** fetch data from the table: "gentk_assign" using primary key columns */
    gentk_assign_by_pk?: (gentk_assignGenqlSelection & { __args: {gentk_id: Scalars['String'], gentk_issuer_version: Scalars['generative_token_version']} })
    /** fetch data from the table in a streaming manner: "gentk_assign" */
    gentk_assign_stream?: (gentk_assignGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (gentk_assign_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (gentk_assign_bool_exp | null)} })
    /** fetch data from the table: "ipfs_cid" */
    ipfs_cid?: (ipfs_cidGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (ipfs_cid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (ipfs_cid_order_by[] | null), 
    /** filter the rows returned */
    where?: (ipfs_cid_bool_exp | null)} })
    /** fetch aggregated fields from the table: "ipfs_cid" */
    ipfs_cid_aggregate?: (ipfs_cid_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (ipfs_cid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (ipfs_cid_order_by[] | null), 
    /** filter the rows returned */
    where?: (ipfs_cid_bool_exp | null)} })
    /** fetch data from the table: "ipfs_cid" using primary key columns */
    ipfs_cid_by_pk?: (ipfs_cidGenqlSelection & { __args: {cid: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "ipfs_cid" */
    ipfs_cid_stream?: (ipfs_cidGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (ipfs_cid_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (ipfs_cid_bool_exp | null)} })
    /** fetch data from the table: "listing" */
    listing?: (listingGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** fetch aggregated fields from the table: "listing" */
    listing_aggregate?: (listing_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** fetch data from the table: "listing" using primary key columns */
    listing_by_pk?: (listingGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "listing" */
    listing_stream?: (listingGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (listing_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** fetch data from the table: "market_stats" */
    market_stats?: (market_statsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_bool_exp | null)} })
    /** fetch aggregated fields from the table: "market_stats" */
    market_stats_aggregate?: (market_stats_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_bool_exp | null)} })
    /** fetch data from the table: "market_stats" using primary key columns */
    market_stats_by_pk?: (market_statsGenqlSelection & { __args: {token_id: Scalars['String']} })
    /** fetch data from the table: "market_stats_history" */
    market_stats_history?: (market_stats_historyGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** fetch aggregated fields from the table: "market_stats_history" */
    market_stats_history_aggregate?: (market_stats_history_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (market_stats_history_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (market_stats_history_order_by[] | null), 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** fetch data from the table: "market_stats_history" using primary key columns */
    market_stats_history_by_pk?: (market_stats_historyGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "market_stats_history" */
    market_stats_history_stream?: (market_stats_historyGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (market_stats_history_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (market_stats_history_bool_exp | null)} })
    /** fetch data from the table in a streaming manner: "market_stats" */
    market_stats_stream?: (market_statsGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (market_stats_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (market_stats_bool_exp | null)} })
    /** fetch data from the table: "media_image" */
    media_image?: (media_imageGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (media_image_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (media_image_order_by[] | null), 
    /** filter the rows returned */
    where?: (media_image_bool_exp | null)} })
    /** fetch aggregated fields from the table: "media_image" */
    media_image_aggregate?: (media_image_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (media_image_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (media_image_order_by[] | null), 
    /** filter the rows returned */
    where?: (media_image_bool_exp | null)} })
    /** fetch data from the table: "media_image" using primary key columns */
    media_image_by_pk?: (media_imageGenqlSelection & { __args: {cid: Scalars['bpchar']} })
    /** fetch data from the table in a streaming manner: "media_image" */
    media_image_stream?: (media_imageGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (media_image_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (media_image_bool_exp | null)} })
    /** fetch data from the table: "mint_ticket" */
    mint_ticket?: (mint_ticketGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** fetch aggregated fields from the table: "mint_ticket" */
    mint_ticket_aggregate?: (mint_ticket_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** fetch data from the table: "mint_ticket" using primary key columns */
    mint_ticket_by_pk?: (mint_ticketGenqlSelection & { __args: {id: Scalars['String']} })
    /** An array relationship */
    mint_ticket_settings?: (mint_ticket_settingsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** An aggregate relationship */
    mint_ticket_settings_aggregate?: (mint_ticket_settings_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_settings_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_settings_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** fetch data from the table: "mint_ticket_settings" using primary key columns */
    mint_ticket_settings_by_pk?: (mint_ticket_settingsGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "mint_ticket_settings" */
    mint_ticket_settings_stream?: (mint_ticket_settingsGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (mint_ticket_settings_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (mint_ticket_settings_bool_exp | null)} })
    /** fetch data from the table in a streaming manner: "mint_ticket" */
    mint_ticket_stream?: (mint_ticketGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (mint_ticket_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** fetch data from the table: "moderation_reason" */
    moderation_reason?: (moderation_reasonGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (moderation_reason_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (moderation_reason_order_by[] | null), 
    /** filter the rows returned */
    where?: (moderation_reason_bool_exp | null)} })
    /** fetch aggregated fields from the table: "moderation_reason" */
    moderation_reason_aggregate?: (moderation_reason_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (moderation_reason_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (moderation_reason_order_by[] | null), 
    /** filter the rows returned */
    where?: (moderation_reason_bool_exp | null)} })
    /** fetch data from the table: "moderation_reason" using primary key columns */
    moderation_reason_by_pk?: (moderation_reasonGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "moderation_reason" */
    moderation_reason_stream?: (moderation_reasonGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (moderation_reason_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (moderation_reason_bool_exp | null)} })
    /** fetch data from the table: "objkt" */
    objkt?: (objktGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** fetch aggregated fields from the table: "objkt" */
    objkt_aggregate?: (objkt_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** fetch data from the table: "objkt" using primary key columns */
    objkt_by_pk?: (objktGenqlSelection & { __args: {id: Scalars['String'], issuer_version: Scalars['generative_token_version']} })
    /** fetch data from the table in a streaming manner: "objkt" */
    objkt_stream?: (objktGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (objkt_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** fetch data from the table: "offer" */
    offer?: (offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** fetch aggregated fields from the table: "offer" */
    offer_aggregate?: (offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** fetch data from the table: "offer" using primary key columns */
    offer_by_pk?: (offerGenqlSelection & { __args: {id: Scalars['String'], version: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "offer" */
    offer_stream?: (offerGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (offer_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** fetch data from the table: "pricing_dutch_auction" */
    pricing_dutch_auction?: (pricing_dutch_auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_dutch_auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_dutch_auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_dutch_auction_bool_exp | null)} })
    /** fetch aggregated fields from the table: "pricing_dutch_auction" */
    pricing_dutch_auction_aggregate?: (pricing_dutch_auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_dutch_auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_dutch_auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_dutch_auction_bool_exp | null)} })
    /** fetch data from the table: "pricing_dutch_auction" using primary key columns */
    pricing_dutch_auction_by_pk?: (pricing_dutch_auctionGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "pricing_dutch_auction" */
    pricing_dutch_auction_stream?: (pricing_dutch_auctionGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (pricing_dutch_auction_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (pricing_dutch_auction_bool_exp | null)} })
    /** fetch data from the table: "pricing_fixed" */
    pricing_fixed?: (pricing_fixedGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_fixed_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_fixed_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_fixed_bool_exp | null)} })
    /** fetch aggregated fields from the table: "pricing_fixed" */
    pricing_fixed_aggregate?: (pricing_fixed_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (pricing_fixed_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (pricing_fixed_order_by[] | null), 
    /** filter the rows returned */
    where?: (pricing_fixed_bool_exp | null)} })
    /** fetch data from the table: "pricing_fixed" using primary key columns */
    pricing_fixed_by_pk?: (pricing_fixedGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "pricing_fixed" */
    pricing_fixed_stream?: (pricing_fixedGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (pricing_fixed_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (pricing_fixed_bool_exp | null)} })
    /** fetch data from the table: "redeemable" */
    redeemable?: (redeemableGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redeemable_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redeemable_order_by[] | null), 
    /** filter the rows returned */
    where?: (redeemable_bool_exp | null)} })
    /** fetch aggregated fields from the table: "redeemable" */
    redeemable_aggregate?: (redeemable_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redeemable_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redeemable_order_by[] | null), 
    /** filter the rows returned */
    where?: (redeemable_bool_exp | null)} })
    /** fetch data from the table: "redeemable" using primary key columns */
    redeemable_by_pk?: (redeemableGenqlSelection & { __args: {address: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "redeemable" */
    redeemable_stream?: (redeemableGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (redeemable_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (redeemable_bool_exp | null)} })
    /** fetch data from the table: "redemption" */
    redemption?: (redemptionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** fetch aggregated fields from the table: "redemption" */
    redemption_aggregate?: (redemption_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** fetch data from the table: "redemption" using primary key columns */
    redemption_by_pk?: (redemptionGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "redemption" */
    redemption_stream?: (redemptionGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (redemption_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** fetch data from the table: "report" */
    report?: (reportGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** fetch aggregated fields from the table: "report" */
    report_aggregate?: (report_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** fetch data from the table: "report" using primary key columns */
    report_by_pk?: (reportGenqlSelection & { __args: {id: Scalars['uuid']} })
    /** fetch data from the table in a streaming manner: "report" */
    report_stream?: (reportGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (report_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** fetch data from the table: "reserve" */
    reserve?: (reserveGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (reserve_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (reserve_order_by[] | null), 
    /** filter the rows returned */
    where?: (reserve_bool_exp | null)} })
    /** fetch aggregated fields from the table: "reserve" */
    reserve_aggregate?: (reserve_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (reserve_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (reserve_order_by[] | null), 
    /** filter the rows returned */
    where?: (reserve_bool_exp | null)} })
    /** fetch data from the table: "reserve" using primary key columns */
    reserve_by_pk?: (reserveGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "reserve" */
    reserve_stream?: (reserveGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (reserve_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (reserve_bool_exp | null)} })
    /** fetch data from the table: "split" */
    split?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** fetch aggregated fields from the table: "split" */
    split_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** fetch data from the table: "split" using primary key columns */
    split_by_pk?: (splitGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "split" */
    split_stream?: (splitGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (split_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** fetch data from the table: "transaction" */
    transaction?: (transactionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** fetch aggregated fields from the table: "transaction" */
    transaction_aggregate?: (transaction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (transaction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (transaction_order_by[] | null), 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** fetch data from the table: "transaction" using primary key columns */
    transaction_by_pk?: (transactionGenqlSelection & { __args: {id: Scalars['Int']} })
    /** fetch data from the table in a streaming manner: "transaction" */
    transaction_stream?: (transactionGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (transaction_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (transaction_bool_exp | null)} })
    /** fetch data from the table: "user" */
    user?: (userGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    /** fetch aggregated fields from the table: "user" */
    user_aggregate?: (user_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    /** fetch data from the table: "user" using primary key columns */
    user_by_pk?: (userGenqlSelection & { __args: {id: Scalars['String']} })
    /** fetch data from the table: "user_stats" */
    user_stats?: (user_statsGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_stats_bool_exp | null)} })
    /** fetch aggregated fields from the table: "user_stats" */
    user_stats_aggregate?: (user_stats_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (user_stats_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (user_stats_order_by[] | null), 
    /** filter the rows returned */
    where?: (user_stats_bool_exp | null)} })
    /** fetch data from the table: "user_stats" using primary key columns */
    user_stats_by_pk?: (user_statsGenqlSelection & { __args: {user_id: Scalars['String']} })
    /** fetch data from the table in a streaming manner: "user_stats" */
    user_stats_stream?: (user_statsGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (user_stats_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (user_stats_bool_exp | null)} })
    /** fetch data from the table in a streaming manner: "user" */
    user_stream?: (userGenqlSelection & { __args: {
    /** maximum number of rows returned in a single batch */
    batch_size: Scalars['Int'], 
    /** cursor to stream the results returned by the query */
    cursor: (user_stream_cursor_input | null)[], 
    /** filter the rows returned */
    where?: (user_bool_exp | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export interface timestamptz_comparison_exp {_eq?: (Scalars['timestamptz'] | null),_gt?: (Scalars['timestamptz'] | null),_gte?: (Scalars['timestamptz'] | null),_in?: (Scalars['timestamptz'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['timestamptz'] | null),_lte?: (Scalars['timestamptz'] | null),_neq?: (Scalars['timestamptz'] | null),_nin?: (Scalars['timestamptz'][] | null)}


/** columns and relationships of "transaction" */
export interface transactionGenqlSelection{
    /** An object relationship */
    article?: articleGenqlSelection
    article_id?: boolean | number
    created_at?: boolean | number
    /** An object relationship */
    generative_token?: generative_tokenGenqlSelection
    id?: boolean | number
    /** An object relationship */
    objkt?: objktGenqlSelection
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    op_hash?: boolean | number
    price?: boolean | number
    ticket_id?: boolean | number
    token_id?: boolean | number
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "transaction" */
export interface transaction_aggregateGenqlSelection{
    aggregate?: transaction_aggregate_fieldsGenqlSelection
    nodes?: transactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface transaction_aggregate_bool_exp {count?: (transaction_aggregate_bool_exp_count | null)}

export interface transaction_aggregate_bool_exp_count {arguments?: (transaction_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (transaction_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "transaction" */
export interface transaction_aggregate_fieldsGenqlSelection{
    avg?: transaction_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (transaction_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: transaction_max_fieldsGenqlSelection
    min?: transaction_min_fieldsGenqlSelection
    stddev?: transaction_stddev_fieldsGenqlSelection
    stddev_pop?: transaction_stddev_pop_fieldsGenqlSelection
    stddev_samp?: transaction_stddev_samp_fieldsGenqlSelection
    sum?: transaction_sum_fieldsGenqlSelection
    var_pop?: transaction_var_pop_fieldsGenqlSelection
    var_samp?: transaction_var_samp_fieldsGenqlSelection
    variance?: transaction_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "transaction" */
export interface transaction_aggregate_order_by {avg?: (transaction_avg_order_by | null),count?: (order_by | null),max?: (transaction_max_order_by | null),min?: (transaction_min_order_by | null),stddev?: (transaction_stddev_order_by | null),stddev_pop?: (transaction_stddev_pop_order_by | null),stddev_samp?: (transaction_stddev_samp_order_by | null),sum?: (transaction_sum_order_by | null),var_pop?: (transaction_var_pop_order_by | null),var_samp?: (transaction_var_samp_order_by | null),variance?: (transaction_variance_order_by | null)}


/** input type for inserting array relation for remote table "transaction" */
export interface transaction_arr_rel_insert_input {data: transaction_insert_input[],
/** upsert condition */
on_conflict?: (transaction_on_conflict | null)}


/** aggregate avg on columns */
export interface transaction_avg_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by avg() on columns of table "transaction" */
export interface transaction_avg_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** Boolean expression to filter rows from the table "transaction". All fields are combined with a logical 'AND'. */
export interface transaction_bool_exp {_and?: (transaction_bool_exp[] | null),_not?: (transaction_bool_exp | null),_or?: (transaction_bool_exp[] | null),article?: (article_bool_exp | null),article_id?: (Int_comparison_exp | null),created_at?: (timestamptz_comparison_exp | null),generative_token?: (generative_token_bool_exp | null),id?: (Int_comparison_exp | null),objkt?: (objkt_bool_exp | null),objkt_id?: (String_comparison_exp | null),objkt_issuer_version?: (generative_token_version_comparison_exp | null),op_hash?: (String_comparison_exp | null),price?: (numeric_comparison_exp | null),ticket_id?: (String_comparison_exp | null),token_id?: (String_comparison_exp | null),type?: (transaction_type_enum_comparison_exp | null)}


/** input type for incrementing numeric columns in table "transaction" */
export interface transaction_inc_input {article_id?: (Scalars['Int'] | null),id?: (Scalars['Int'] | null),price?: (Scalars['numeric'] | null)}


/** input type for inserting data into table "transaction" */
export interface transaction_insert_input {article?: (article_obj_rel_insert_input | null),article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),generative_token?: (generative_token_obj_rel_insert_input | null),id?: (Scalars['Int'] | null),objkt?: (objkt_obj_rel_insert_input | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),op_hash?: (Scalars['String'] | null),price?: (Scalars['numeric'] | null),ticket_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),type?: (Scalars['transaction_type_enum'] | null)}


/** aggregate max on columns */
export interface transaction_max_fieldsGenqlSelection{
    article_id?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    op_hash?: boolean | number
    price?: boolean | number
    ticket_id?: boolean | number
    token_id?: boolean | number
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "transaction" */
export interface transaction_max_order_by {article_id?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),op_hash?: (order_by | null),price?: (order_by | null),ticket_id?: (order_by | null),token_id?: (order_by | null),type?: (order_by | null)}


/** aggregate min on columns */
export interface transaction_min_fieldsGenqlSelection{
    article_id?: boolean | number
    created_at?: boolean | number
    id?: boolean | number
    objkt_id?: boolean | number
    objkt_issuer_version?: boolean | number
    op_hash?: boolean | number
    price?: boolean | number
    ticket_id?: boolean | number
    token_id?: boolean | number
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "transaction" */
export interface transaction_min_order_by {article_id?: (order_by | null),created_at?: (order_by | null),id?: (order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),op_hash?: (order_by | null),price?: (order_by | null),ticket_id?: (order_by | null),token_id?: (order_by | null),type?: (order_by | null)}


/** response of any mutation on the table "transaction" */
export interface transaction_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: transactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** on_conflict condition type for table "transaction" */
export interface transaction_on_conflict {constraint: transaction_constraint,update_columns?: transaction_update_column[],where?: (transaction_bool_exp | null)}


/** Ordering options when selecting data from "transaction". */
export interface transaction_order_by {article?: (article_order_by | null),article_id?: (order_by | null),created_at?: (order_by | null),generative_token?: (generative_token_order_by | null),id?: (order_by | null),objkt?: (objkt_order_by | null),objkt_id?: (order_by | null),objkt_issuer_version?: (order_by | null),op_hash?: (order_by | null),price?: (order_by | null),ticket_id?: (order_by | null),token_id?: (order_by | null),type?: (order_by | null)}


/** primary key columns input for table: transaction */
export interface transaction_pk_columns_input {id: Scalars['Int']}


/** input type for updating data in table "transaction" */
export interface transaction_set_input {article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),op_hash?: (Scalars['String'] | null),price?: (Scalars['numeric'] | null),ticket_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),type?: (Scalars['transaction_type_enum'] | null)}


/** aggregate stddev on columns */
export interface transaction_stddev_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev() on columns of table "transaction" */
export interface transaction_stddev_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** aggregate stddev_pop on columns */
export interface transaction_stddev_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_pop() on columns of table "transaction" */
export interface transaction_stddev_pop_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** aggregate stddev_samp on columns */
export interface transaction_stddev_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by stddev_samp() on columns of table "transaction" */
export interface transaction_stddev_samp_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** Streaming cursor of the table "transaction" */
export interface transaction_stream_cursor_input {
/** Stream column input with initial value */
initial_value: transaction_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface transaction_stream_cursor_value_input {article_id?: (Scalars['Int'] | null),created_at?: (Scalars['timestamptz'] | null),id?: (Scalars['Int'] | null),objkt_id?: (Scalars['String'] | null),objkt_issuer_version?: (Scalars['generative_token_version'] | null),op_hash?: (Scalars['String'] | null),price?: (Scalars['numeric'] | null),ticket_id?: (Scalars['String'] | null),token_id?: (Scalars['String'] | null),type?: (Scalars['transaction_type_enum'] | null)}


/** aggregate sum on columns */
export interface transaction_sum_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by sum() on columns of table "transaction" */
export interface transaction_sum_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** Boolean expression to compare columns of type "transaction_type_enum". All fields are combined with logical 'AND'. */
export interface transaction_type_enum_comparison_exp {_eq?: (Scalars['transaction_type_enum'] | null),_gt?: (Scalars['transaction_type_enum'] | null),_gte?: (Scalars['transaction_type_enum'] | null),_in?: (Scalars['transaction_type_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['transaction_type_enum'] | null),_lte?: (Scalars['transaction_type_enum'] | null),_neq?: (Scalars['transaction_type_enum'] | null),_nin?: (Scalars['transaction_type_enum'][] | null)}

export interface transaction_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (transaction_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (transaction_set_input | null),
/** filter the rows which have to be updated */
where: transaction_bool_exp}


/** aggregate var_pop on columns */
export interface transaction_var_pop_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_pop() on columns of table "transaction" */
export interface transaction_var_pop_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** aggregate var_samp on columns */
export interface transaction_var_samp_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by var_samp() on columns of table "transaction" */
export interface transaction_var_samp_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** aggregate variance on columns */
export interface transaction_variance_fieldsGenqlSelection{
    article_id?: boolean | number
    id?: boolean | number
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by variance() on columns of table "transaction" */
export interface transaction_variance_order_by {article_id?: (order_by | null),id?: (order_by | null),price?: (order_by | null)}


/** columns and relationships of "user" */
export interface userGenqlSelection{
    /** An array relationship */
    actions?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An array relationship */
    actionsByIssuerId?: (actionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An aggregate relationship */
    actionsByIssuerId_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An aggregate relationship */
    actions_aggregate?: (action_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (action_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (action_order_by[] | null), 
    /** filter the rows returned */
    where?: (action_bool_exp | null)} })
    /** An array relationship */
    article_ledgers?: (article_ledgerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** An aggregate relationship */
    article_ledgers_aggregate?: (article_ledger_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_ledger_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_ledger_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_ledger_bool_exp | null)} })
    /** An array relationship */
    articles?: (articleGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** An aggregate relationship */
    articles_aggregate?: (article_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (article_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (article_order_by[] | null), 
    /** filter the rows returned */
    where?: (article_bool_exp | null)} })
    /** An array relationship */
    auction_bids?: (auction_bidGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** An aggregate relationship */
    auction_bids_aggregate?: (auction_bid_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_bid_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_bid_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bid_bool_exp | null)} })
    /** An array relationship */
    auctions?: (auctionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    /** An aggregate relationship */
    auctions_aggregate?: (auction_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (auction_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (auction_order_by[] | null), 
    /** filter the rows returned */
    where?: (auction_bool_exp | null)} })
    authorizations?: boolean | number
    avatarMediaId?: boolean | number
    avatar_uri?: boolean | number
    /** An array relationship */
    codexes?: (codexGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_bool_exp | null)} })
    /** An aggregate relationship */
    codexes_aggregate?: (codex_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (codex_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (codex_order_by[] | null), 
    /** filter the rows returned */
    where?: (codex_bool_exp | null)} })
    /** An array relationship */
    collaborations?: (collaborationGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** An array relationship */
    collaborationsByCollaboratorId?: (collaborationGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** An aggregate relationship */
    collaborationsByCollaboratorId_aggregate?: (collaboration_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** An aggregate relationship */
    collaborations_aggregate?: (collaboration_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collaboration_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collaboration_order_by[] | null), 
    /** filter the rows returned */
    where?: (collaboration_bool_exp | null)} })
    /** An array relationship */
    collection_offers?: (collection_offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    /** An aggregate relationship */
    collection_offers_aggregate?: (collection_offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (collection_offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (collection_offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (collection_offer_bool_exp | null)} })
    created_at?: boolean | number
    description?: boolean | number
    flag?: boolean | number
    /** An array relationship */
    generative_tokens?: (generative_tokenGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    /** An aggregate relationship */
    generative_tokens_aggregate?: (generative_token_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (generative_token_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (generative_token_order_by[] | null), 
    /** filter the rows returned */
    where?: (generative_token_bool_exp | null)} })
    id?: boolean | number
    /** An array relationship */
    listings?: (listingGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An array relationship */
    listingsByAcceptedById?: (listingGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An aggregate relationship */
    listingsByAcceptedById_aggregate?: (listing_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An aggregate relationship */
    listings_aggregate?: (listing_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (listing_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (listing_order_by[] | null), 
    /** filter the rows returned */
    where?: (listing_bool_exp | null)} })
    /** An object relationship */
    media_image?: media_imageGenqlSelection
    metadata?: { __args: {
    /** JSON select path */
    path?: (Scalars['String'] | null)} } | boolean | number
    metadata_uri?: boolean | number
    /** An array relationship */
    mint_tickets?: (mint_ticketGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** An aggregate relationship */
    mint_tickets_aggregate?: (mint_ticket_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (mint_ticket_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (mint_ticket_order_by[] | null), 
    /** filter the rows returned */
    where?: (mint_ticket_bool_exp | null)} })
    /** An object relationship */
    moderation_reason?: moderation_reasonGenqlSelection
    moderation_reason_id?: boolean | number
    name?: boolean | number
    /** An array relationship */
    objkts?: (objktGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** An array relationship */
    objktsByOwnerId?: (objktGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** An aggregate relationship */
    objktsByOwnerId_aggregate?: (objkt_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** An aggregate relationship */
    objkts_aggregate?: (objkt_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (objkt_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (objkt_order_by[] | null), 
    /** filter the rows returned */
    where?: (objkt_bool_exp | null)} })
    /** An array relationship */
    offers?: (offerGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** An aggregate relationship */
    offers_aggregate?: (offer_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (offer_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (offer_order_by[] | null), 
    /** filter the rows returned */
    where?: (offer_bool_exp | null)} })
    /** An array relationship */
    redemptions?: (redemptionGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** An aggregate relationship */
    redemptions_aggregate?: (redemption_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (redemption_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (redemption_order_by[] | null), 
    /** filter the rows returned */
    where?: (redemption_bool_exp | null)} })
    /** An array relationship */
    reports?: (reportGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** An aggregate relationship */
    reports_aggregate?: (report_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (report_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (report_order_by[] | null), 
    /** filter the rows returned */
    where?: (report_bool_exp | null)} })
    /** An array relationship */
    splits?: (splitGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    /** An aggregate relationship */
    splits_aggregate?: (split_aggregateGenqlSelection & { __args?: {
    /** distinct select on columns */
    distinct_on?: (split_select_column[] | null), 
    /** limit the number of rows returned */
    limit?: (Scalars['Int'] | null), 
    /** skip the first n rows. Use only with order_by */
    offset?: (Scalars['Int'] | null), 
    /** sort the rows by one or more columns */
    order_by?: (split_order_by[] | null), 
    /** filter the rows returned */
    where?: (split_bool_exp | null)} })
    type?: boolean | number
    updated_at?: boolean | number
    /** An object relationship */
    user_stat?: user_statsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "user" */
export interface user_aggregateGenqlSelection{
    aggregate?: user_aggregate_fieldsGenqlSelection
    nodes?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface user_aggregate_bool_exp {count?: (user_aggregate_bool_exp_count | null)}

export interface user_aggregate_bool_exp_count {arguments?: (user_select_column[] | null),distinct?: (Scalars['Boolean'] | null),filter?: (user_bool_exp | null),predicate: Int_comparison_exp}


/** aggregate fields of "user" */
export interface user_aggregate_fieldsGenqlSelection{
    count?: { __args: {columns?: (user_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: user_max_fieldsGenqlSelection
    min?: user_min_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by aggregate values of table "user" */
export interface user_aggregate_order_by {count?: (order_by | null),max?: (user_max_order_by | null),min?: (user_min_order_by | null)}


/** append existing jsonb value of filtered columns with new jsonb value */
export interface user_append_input {metadata?: (Scalars['jsonb'] | null)}


/** input type for inserting array relation for remote table "user" */
export interface user_arr_rel_insert_input {data: user_insert_input[],
/** upsert condition */
on_conflict?: (user_on_conflict | null)}


/** Boolean expression to filter rows from the table "user". All fields are combined with a logical 'AND'. */
export interface user_bool_exp {_and?: (user_bool_exp[] | null),_not?: (user_bool_exp | null),_or?: (user_bool_exp[] | null),actions?: (action_bool_exp | null),actionsByIssuerId?: (action_bool_exp | null),actionsByIssuerId_aggregate?: (action_aggregate_bool_exp | null),actions_aggregate?: (action_aggregate_bool_exp | null),article_ledgers?: (article_ledger_bool_exp | null),article_ledgers_aggregate?: (article_ledger_aggregate_bool_exp | null),articles?: (article_bool_exp | null),articles_aggregate?: (article_aggregate_bool_exp | null),auction_bids?: (auction_bid_bool_exp | null),auction_bids_aggregate?: (auction_bid_aggregate_bool_exp | null),auctions?: (auction_bool_exp | null),auctions_aggregate?: (auction_aggregate_bool_exp | null),authorizations?: (_int2_comparison_exp | null),avatarMediaId?: (bpchar_comparison_exp | null),avatar_uri?: (String_comparison_exp | null),codexes?: (codex_bool_exp | null),codexes_aggregate?: (codex_aggregate_bool_exp | null),collaborations?: (collaboration_bool_exp | null),collaborationsByCollaboratorId?: (collaboration_bool_exp | null),collaborationsByCollaboratorId_aggregate?: (collaboration_aggregate_bool_exp | null),collaborations_aggregate?: (collaboration_aggregate_bool_exp | null),collection_offers?: (collection_offer_bool_exp | null),collection_offers_aggregate?: (collection_offer_aggregate_bool_exp | null),created_at?: (timestamptz_comparison_exp | null),description?: (String_comparison_exp | null),flag?: (user_flag_enum_comparison_exp | null),generative_tokens?: (generative_token_bool_exp | null),generative_tokens_aggregate?: (generative_token_aggregate_bool_exp | null),id?: (String_comparison_exp | null),listings?: (listing_bool_exp | null),listingsByAcceptedById?: (listing_bool_exp | null),listingsByAcceptedById_aggregate?: (listing_aggregate_bool_exp | null),listings_aggregate?: (listing_aggregate_bool_exp | null),media_image?: (media_image_bool_exp | null),metadata?: (jsonb_comparison_exp | null),metadata_uri?: (String_comparison_exp | null),mint_tickets?: (mint_ticket_bool_exp | null),mint_tickets_aggregate?: (mint_ticket_aggregate_bool_exp | null),moderation_reason?: (moderation_reason_bool_exp | null),moderation_reason_id?: (String_comparison_exp | null),name?: (String_comparison_exp | null),objkts?: (objkt_bool_exp | null),objktsByOwnerId?: (objkt_bool_exp | null),objktsByOwnerId_aggregate?: (objkt_aggregate_bool_exp | null),objkts_aggregate?: (objkt_aggregate_bool_exp | null),offers?: (offer_bool_exp | null),offers_aggregate?: (offer_aggregate_bool_exp | null),redemptions?: (redemption_bool_exp | null),redemptions_aggregate?: (redemption_aggregate_bool_exp | null),reports?: (report_bool_exp | null),reports_aggregate?: (report_aggregate_bool_exp | null),splits?: (split_bool_exp | null),splits_aggregate?: (split_aggregate_bool_exp | null),type?: (user_type_enum_comparison_exp | null),updated_at?: (timestamptz_comparison_exp | null),user_stat?: (user_stats_bool_exp | null)}


/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export interface user_delete_at_path_input {metadata?: (Scalars['String'][] | null)}


/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export interface user_delete_elem_input {metadata?: (Scalars['Int'] | null)}


/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export interface user_delete_key_input {metadata?: (Scalars['String'] | null)}


/** Boolean expression to compare columns of type "user_flag_enum". All fields are combined with logical 'AND'. */
export interface user_flag_enum_comparison_exp {_eq?: (Scalars['user_flag_enum'] | null),_gt?: (Scalars['user_flag_enum'] | null),_gte?: (Scalars['user_flag_enum'] | null),_in?: (Scalars['user_flag_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['user_flag_enum'] | null),_lte?: (Scalars['user_flag_enum'] | null),_neq?: (Scalars['user_flag_enum'] | null),_nin?: (Scalars['user_flag_enum'][] | null)}


/** input type for inserting data into table "user" */
export interface user_insert_input {actions?: (action_arr_rel_insert_input | null),actionsByIssuerId?: (action_arr_rel_insert_input | null),article_ledgers?: (article_ledger_arr_rel_insert_input | null),articles?: (article_arr_rel_insert_input | null),auction_bids?: (auction_bid_arr_rel_insert_input | null),auctions?: (auction_arr_rel_insert_input | null),authorizations?: (Scalars['_int2'] | null),avatarMediaId?: (Scalars['bpchar'] | null),avatar_uri?: (Scalars['String'] | null),codexes?: (codex_arr_rel_insert_input | null),collaborations?: (collaboration_arr_rel_insert_input | null),collaborationsByCollaboratorId?: (collaboration_arr_rel_insert_input | null),collection_offers?: (collection_offer_arr_rel_insert_input | null),created_at?: (Scalars['timestamptz'] | null),description?: (Scalars['String'] | null),flag?: (Scalars['user_flag_enum'] | null),generative_tokens?: (generative_token_arr_rel_insert_input | null),id?: (Scalars['String'] | null),listings?: (listing_arr_rel_insert_input | null),listingsByAcceptedById?: (listing_arr_rel_insert_input | null),media_image?: (media_image_obj_rel_insert_input | null),metadata?: (Scalars['jsonb'] | null),metadata_uri?: (Scalars['String'] | null),mint_tickets?: (mint_ticket_arr_rel_insert_input | null),moderation_reason?: (moderation_reason_obj_rel_insert_input | null),moderation_reason_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),objkts?: (objkt_arr_rel_insert_input | null),objktsByOwnerId?: (objkt_arr_rel_insert_input | null),offers?: (offer_arr_rel_insert_input | null),redemptions?: (redemption_arr_rel_insert_input | null),reports?: (report_arr_rel_insert_input | null),splits?: (split_arr_rel_insert_input | null),type?: (Scalars['user_type_enum'] | null),updated_at?: (Scalars['timestamptz'] | null),user_stat?: (user_stats_obj_rel_insert_input | null)}


/** aggregate max on columns */
export interface user_max_fieldsGenqlSelection{
    avatarMediaId?: boolean | number
    avatar_uri?: boolean | number
    created_at?: boolean | number
    description?: boolean | number
    flag?: boolean | number
    id?: boolean | number
    metadata_uri?: boolean | number
    moderation_reason_id?: boolean | number
    name?: boolean | number
    type?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by max() on columns of table "user" */
export interface user_max_order_by {avatarMediaId?: (order_by | null),avatar_uri?: (order_by | null),created_at?: (order_by | null),description?: (order_by | null),flag?: (order_by | null),id?: (order_by | null),metadata_uri?: (order_by | null),moderation_reason_id?: (order_by | null),name?: (order_by | null),type?: (order_by | null),updated_at?: (order_by | null)}


/** aggregate min on columns */
export interface user_min_fieldsGenqlSelection{
    avatarMediaId?: boolean | number
    avatar_uri?: boolean | number
    created_at?: boolean | number
    description?: boolean | number
    flag?: boolean | number
    id?: boolean | number
    metadata_uri?: boolean | number
    moderation_reason_id?: boolean | number
    name?: boolean | number
    type?: boolean | number
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** order by min() on columns of table "user" */
export interface user_min_order_by {avatarMediaId?: (order_by | null),avatar_uri?: (order_by | null),created_at?: (order_by | null),description?: (order_by | null),flag?: (order_by | null),id?: (order_by | null),metadata_uri?: (order_by | null),moderation_reason_id?: (order_by | null),name?: (order_by | null),type?: (order_by | null),updated_at?: (order_by | null)}


/** response of any mutation on the table "user" */
export interface user_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: userGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "user" */
export interface user_obj_rel_insert_input {data: user_insert_input,
/** upsert condition */
on_conflict?: (user_on_conflict | null)}


/** on_conflict condition type for table "user" */
export interface user_on_conflict {constraint: user_constraint,update_columns?: user_update_column[],where?: (user_bool_exp | null)}


/** Ordering options when selecting data from "user". */
export interface user_order_by {actionsByIssuerId_aggregate?: (action_aggregate_order_by | null),actions_aggregate?: (action_aggregate_order_by | null),article_ledgers_aggregate?: (article_ledger_aggregate_order_by | null),articles_aggregate?: (article_aggregate_order_by | null),auction_bids_aggregate?: (auction_bid_aggregate_order_by | null),auctions_aggregate?: (auction_aggregate_order_by | null),authorizations?: (order_by | null),avatarMediaId?: (order_by | null),avatar_uri?: (order_by | null),codexes_aggregate?: (codex_aggregate_order_by | null),collaborationsByCollaboratorId_aggregate?: (collaboration_aggregate_order_by | null),collaborations_aggregate?: (collaboration_aggregate_order_by | null),collection_offers_aggregate?: (collection_offer_aggregate_order_by | null),created_at?: (order_by | null),description?: (order_by | null),flag?: (order_by | null),generative_tokens_aggregate?: (generative_token_aggregate_order_by | null),id?: (order_by | null),listingsByAcceptedById_aggregate?: (listing_aggregate_order_by | null),listings_aggregate?: (listing_aggregate_order_by | null),media_image?: (media_image_order_by | null),metadata?: (order_by | null),metadata_uri?: (order_by | null),mint_tickets_aggregate?: (mint_ticket_aggregate_order_by | null),moderation_reason?: (moderation_reason_order_by | null),moderation_reason_id?: (order_by | null),name?: (order_by | null),objktsByOwnerId_aggregate?: (objkt_aggregate_order_by | null),objkts_aggregate?: (objkt_aggregate_order_by | null),offers_aggregate?: (offer_aggregate_order_by | null),redemptions_aggregate?: (redemption_aggregate_order_by | null),reports_aggregate?: (report_aggregate_order_by | null),splits_aggregate?: (split_aggregate_order_by | null),type?: (order_by | null),updated_at?: (order_by | null),user_stat?: (user_stats_order_by | null)}


/** primary key columns input for table: user */
export interface user_pk_columns_input {id: Scalars['String']}


/** prepend existing jsonb value of filtered columns with new jsonb value */
export interface user_prepend_input {metadata?: (Scalars['jsonb'] | null)}


/** input type for updating data in table "user" */
export interface user_set_input {authorizations?: (Scalars['_int2'] | null),avatarMediaId?: (Scalars['bpchar'] | null),avatar_uri?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),description?: (Scalars['String'] | null),flag?: (Scalars['user_flag_enum'] | null),id?: (Scalars['String'] | null),metadata?: (Scalars['jsonb'] | null),metadata_uri?: (Scalars['String'] | null),moderation_reason_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),type?: (Scalars['user_type_enum'] | null),updated_at?: (Scalars['timestamptz'] | null)}


/** columns and relationships of "user_stats" */
export interface user_statsGenqlSelection{
    from?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    to?: boolean | number
    /** An object relationship */
    user?: userGenqlSelection
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregated selection of "user_stats" */
export interface user_stats_aggregateGenqlSelection{
    aggregate?: user_stats_aggregate_fieldsGenqlSelection
    nodes?: user_statsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate fields of "user_stats" */
export interface user_stats_aggregate_fieldsGenqlSelection{
    avg?: user_stats_avg_fieldsGenqlSelection
    count?: { __args: {columns?: (user_stats_select_column[] | null), distinct?: (Scalars['Boolean'] | null)} } | boolean | number
    max?: user_stats_max_fieldsGenqlSelection
    min?: user_stats_min_fieldsGenqlSelection
    stddev?: user_stats_stddev_fieldsGenqlSelection
    stddev_pop?: user_stats_stddev_pop_fieldsGenqlSelection
    stddev_samp?: user_stats_stddev_samp_fieldsGenqlSelection
    sum?: user_stats_sum_fieldsGenqlSelection
    var_pop?: user_stats_var_pop_fieldsGenqlSelection
    var_samp?: user_stats_var_samp_fieldsGenqlSelection
    variance?: user_stats_variance_fieldsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate avg on columns */
export interface user_stats_avg_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Boolean expression to filter rows from the table "user_stats". All fields are combined with a logical 'AND'. */
export interface user_stats_bool_exp {_and?: (user_stats_bool_exp[] | null),_not?: (user_stats_bool_exp | null),_or?: (user_stats_bool_exp[] | null),from?: (timestamptz_comparison_exp | null),prim_volume_nb?: (bigint_comparison_exp | null),prim_volume_nb24?: (bigint_comparison_exp | null),prim_volume_nb30d?: (bigint_comparison_exp | null),prim_volume_nb7d?: (bigint_comparison_exp | null),prim_volume_tz?: (bigint_comparison_exp | null),prim_volume_tz24?: (bigint_comparison_exp | null),prim_volume_tz30d?: (bigint_comparison_exp | null),prim_volume_tz7d?: (bigint_comparison_exp | null),sec_volume_nb?: (bigint_comparison_exp | null),sec_volume_nb24?: (bigint_comparison_exp | null),sec_volume_nb30d?: (bigint_comparison_exp | null),sec_volume_nb7d?: (bigint_comparison_exp | null),sec_volume_tz?: (bigint_comparison_exp | null),sec_volume_tz24?: (bigint_comparison_exp | null),sec_volume_tz30d?: (bigint_comparison_exp | null),sec_volume_tz7d?: (bigint_comparison_exp | null),to?: (timestamptz_comparison_exp | null),user?: (user_bool_exp | null),user_id?: (String_comparison_exp | null)}


/** input type for incrementing numeric columns in table "user_stats" */
export interface user_stats_inc_input {prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_nb24?: (Scalars['bigint'] | null),prim_volume_nb30d?: (Scalars['bigint'] | null),prim_volume_nb7d?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),prim_volume_tz24?: (Scalars['bigint'] | null),prim_volume_tz30d?: (Scalars['bigint'] | null),prim_volume_tz7d?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_nb24?: (Scalars['bigint'] | null),sec_volume_nb30d?: (Scalars['bigint'] | null),sec_volume_nb7d?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null),sec_volume_tz24?: (Scalars['bigint'] | null),sec_volume_tz30d?: (Scalars['bigint'] | null),sec_volume_tz7d?: (Scalars['bigint'] | null)}


/** input type for inserting data into table "user_stats" */
export interface user_stats_insert_input {from?: (Scalars['timestamptz'] | null),prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_nb24?: (Scalars['bigint'] | null),prim_volume_nb30d?: (Scalars['bigint'] | null),prim_volume_nb7d?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),prim_volume_tz24?: (Scalars['bigint'] | null),prim_volume_tz30d?: (Scalars['bigint'] | null),prim_volume_tz7d?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_nb24?: (Scalars['bigint'] | null),sec_volume_nb30d?: (Scalars['bigint'] | null),sec_volume_nb7d?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null),sec_volume_tz24?: (Scalars['bigint'] | null),sec_volume_tz30d?: (Scalars['bigint'] | null),sec_volume_tz7d?: (Scalars['bigint'] | null),to?: (Scalars['timestamptz'] | null),user?: (user_obj_rel_insert_input | null),user_id?: (Scalars['String'] | null)}


/** aggregate max on columns */
export interface user_stats_max_fieldsGenqlSelection{
    from?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    to?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate min on columns */
export interface user_stats_min_fieldsGenqlSelection{
    from?: boolean | number
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    to?: boolean | number
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** response of any mutation on the table "user_stats" */
export interface user_stats_mutation_responseGenqlSelection{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | number
    /** data from the rows affected by the mutation */
    returning?: user_statsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** input type for inserting object relation for remote table "user_stats" */
export interface user_stats_obj_rel_insert_input {data: user_stats_insert_input,
/** upsert condition */
on_conflict?: (user_stats_on_conflict | null)}


/** on_conflict condition type for table "user_stats" */
export interface user_stats_on_conflict {constraint: user_stats_constraint,update_columns?: user_stats_update_column[],where?: (user_stats_bool_exp | null)}


/** Ordering options when selecting data from "user_stats". */
export interface user_stats_order_by {from?: (order_by | null),prim_volume_nb?: (order_by | null),prim_volume_nb24?: (order_by | null),prim_volume_nb30d?: (order_by | null),prim_volume_nb7d?: (order_by | null),prim_volume_tz?: (order_by | null),prim_volume_tz24?: (order_by | null),prim_volume_tz30d?: (order_by | null),prim_volume_tz7d?: (order_by | null),sec_volume_nb?: (order_by | null),sec_volume_nb24?: (order_by | null),sec_volume_nb30d?: (order_by | null),sec_volume_nb7d?: (order_by | null),sec_volume_tz?: (order_by | null),sec_volume_tz24?: (order_by | null),sec_volume_tz30d?: (order_by | null),sec_volume_tz7d?: (order_by | null),to?: (order_by | null),user?: (user_order_by | null),user_id?: (order_by | null)}


/** primary key columns input for table: user_stats */
export interface user_stats_pk_columns_input {user_id: Scalars['String']}


/** input type for updating data in table "user_stats" */
export interface user_stats_set_input {from?: (Scalars['timestamptz'] | null),prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_nb24?: (Scalars['bigint'] | null),prim_volume_nb30d?: (Scalars['bigint'] | null),prim_volume_nb7d?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),prim_volume_tz24?: (Scalars['bigint'] | null),prim_volume_tz30d?: (Scalars['bigint'] | null),prim_volume_tz7d?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_nb24?: (Scalars['bigint'] | null),sec_volume_nb30d?: (Scalars['bigint'] | null),sec_volume_nb7d?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null),sec_volume_tz24?: (Scalars['bigint'] | null),sec_volume_tz30d?: (Scalars['bigint'] | null),sec_volume_tz7d?: (Scalars['bigint'] | null),to?: (Scalars['timestamptz'] | null),user_id?: (Scalars['String'] | null)}


/** aggregate stddev on columns */
export interface user_stats_stddev_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_pop on columns */
export interface user_stats_stddev_pop_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate stddev_samp on columns */
export interface user_stats_stddev_samp_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Streaming cursor of the table "user_stats" */
export interface user_stats_stream_cursor_input {
/** Stream column input with initial value */
initial_value: user_stats_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface user_stats_stream_cursor_value_input {from?: (Scalars['timestamptz'] | null),prim_volume_nb?: (Scalars['bigint'] | null),prim_volume_nb24?: (Scalars['bigint'] | null),prim_volume_nb30d?: (Scalars['bigint'] | null),prim_volume_nb7d?: (Scalars['bigint'] | null),prim_volume_tz?: (Scalars['bigint'] | null),prim_volume_tz24?: (Scalars['bigint'] | null),prim_volume_tz30d?: (Scalars['bigint'] | null),prim_volume_tz7d?: (Scalars['bigint'] | null),sec_volume_nb?: (Scalars['bigint'] | null),sec_volume_nb24?: (Scalars['bigint'] | null),sec_volume_nb30d?: (Scalars['bigint'] | null),sec_volume_nb7d?: (Scalars['bigint'] | null),sec_volume_tz?: (Scalars['bigint'] | null),sec_volume_tz24?: (Scalars['bigint'] | null),sec_volume_tz30d?: (Scalars['bigint'] | null),sec_volume_tz7d?: (Scalars['bigint'] | null),to?: (Scalars['timestamptz'] | null),user_id?: (Scalars['String'] | null)}


/** aggregate sum on columns */
export interface user_stats_sum_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface user_stats_updates {
/** increments the numeric columns with given value of the filtered values */
_inc?: (user_stats_inc_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (user_stats_set_input | null),
/** filter the rows which have to be updated */
where: user_stats_bool_exp}


/** aggregate var_pop on columns */
export interface user_stats_var_pop_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate var_samp on columns */
export interface user_stats_var_samp_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** aggregate variance on columns */
export interface user_stats_variance_fieldsGenqlSelection{
    prim_volume_nb?: boolean | number
    prim_volume_nb24?: boolean | number
    prim_volume_nb30d?: boolean | number
    prim_volume_nb7d?: boolean | number
    prim_volume_tz?: boolean | number
    prim_volume_tz24?: boolean | number
    prim_volume_tz30d?: boolean | number
    prim_volume_tz7d?: boolean | number
    sec_volume_nb?: boolean | number
    sec_volume_nb24?: boolean | number
    sec_volume_nb30d?: boolean | number
    sec_volume_nb7d?: boolean | number
    sec_volume_tz?: boolean | number
    sec_volume_tz24?: boolean | number
    sec_volume_tz30d?: boolean | number
    sec_volume_tz7d?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Streaming cursor of the table "user" */
export interface user_stream_cursor_input {
/** Stream column input with initial value */
initial_value: user_stream_cursor_value_input,
/** cursor ordering */
ordering?: (cursor_ordering | null)}


/** Initial value of the column from where the streaming should start */
export interface user_stream_cursor_value_input {authorizations?: (Scalars['_int2'] | null),avatarMediaId?: (Scalars['bpchar'] | null),avatar_uri?: (Scalars['String'] | null),created_at?: (Scalars['timestamptz'] | null),description?: (Scalars['String'] | null),flag?: (Scalars['user_flag_enum'] | null),id?: (Scalars['String'] | null),metadata?: (Scalars['jsonb'] | null),metadata_uri?: (Scalars['String'] | null),moderation_reason_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),type?: (Scalars['user_type_enum'] | null),updated_at?: (Scalars['timestamptz'] | null)}


/** Boolean expression to compare columns of type "user_type_enum". All fields are combined with logical 'AND'. */
export interface user_type_enum_comparison_exp {_eq?: (Scalars['user_type_enum'] | null),_gt?: (Scalars['user_type_enum'] | null),_gte?: (Scalars['user_type_enum'] | null),_in?: (Scalars['user_type_enum'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['user_type_enum'] | null),_lte?: (Scalars['user_type_enum'] | null),_neq?: (Scalars['user_type_enum'] | null),_nin?: (Scalars['user_type_enum'][] | null)}

export interface user_updates {
/** append existing jsonb value of filtered columns with new jsonb value */
_append?: (user_append_input | null),
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
_delete_at_path?: (user_delete_at_path_input | null),
/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
_delete_elem?: (user_delete_elem_input | null),
/** delete key/value pair or string element. key/value pairs are matched based on their key value */
_delete_key?: (user_delete_key_input | null),
/** prepend existing jsonb value of filtered columns with new jsonb value */
_prepend?: (user_prepend_input | null),
/** sets the columns of the filtered rows to the given values */
_set?: (user_set_input | null),
/** filter the rows which have to be updated */
where: user_bool_exp}


/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export interface uuid_comparison_exp {_eq?: (Scalars['uuid'] | null),_gt?: (Scalars['uuid'] | null),_gte?: (Scalars['uuid'] | null),_in?: (Scalars['uuid'][] | null),_is_null?: (Scalars['Boolean'] | null),_lt?: (Scalars['uuid'] | null),_lte?: (Scalars['uuid'] | null),_neq?: (Scalars['uuid'] | null),_nin?: (Scalars['uuid'][] | null)}

export type QueryGenqlSelection = query_rootGenqlSelection
export type MutationGenqlSelection = mutation_rootGenqlSelection
export type SubscriptionGenqlSelection = subscription_rootGenqlSelection


    const Account_possibleTypes: string[] = ['Account']
    export const isAccount = (obj?: { __typename?: any } | null): obj is Account => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccount"')
      return Account_possibleTypes.includes(obj.__typename)
    }
    


    const Account_aggregate_possibleTypes: string[] = ['Account_aggregate']
    export const isAccount_aggregate = (obj?: { __typename?: any } | null): obj is Account_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccount_aggregate"')
      return Account_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const Account_aggregate_fields_possibleTypes: string[] = ['Account_aggregate_fields']
    export const isAccount_aggregate_fields = (obj?: { __typename?: any } | null): obj is Account_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccount_aggregate_fields"')
      return Account_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Account_max_fields_possibleTypes: string[] = ['Account_max_fields']
    export const isAccount_max_fields = (obj?: { __typename?: any } | null): obj is Account_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccount_max_fields"')
      return Account_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Account_min_fields_possibleTypes: string[] = ['Account_min_fields']
    export const isAccount_min_fields = (obj?: { __typename?: any } | null): obj is Account_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccount_min_fields"')
      return Account_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Account_mutation_response_possibleTypes: string[] = ['Account_mutation_response']
    export const isAccount_mutation_response = (obj?: { __typename?: any } | null): obj is Account_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccount_mutation_response"')
      return Account_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const Profile_possibleTypes: string[] = ['Profile']
    export const isProfile = (obj?: { __typename?: any } | null): obj is Profile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfile"')
      return Profile_possibleTypes.includes(obj.__typename)
    }
    


    const Profile_aggregate_possibleTypes: string[] = ['Profile_aggregate']
    export const isProfile_aggregate = (obj?: { __typename?: any } | null): obj is Profile_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfile_aggregate"')
      return Profile_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const Profile_aggregate_fields_possibleTypes: string[] = ['Profile_aggregate_fields']
    export const isProfile_aggregate_fields = (obj?: { __typename?: any } | null): obj is Profile_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfile_aggregate_fields"')
      return Profile_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Profile_max_fields_possibleTypes: string[] = ['Profile_max_fields']
    export const isProfile_max_fields = (obj?: { __typename?: any } | null): obj is Profile_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfile_max_fields"')
      return Profile_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Profile_min_fields_possibleTypes: string[] = ['Profile_min_fields']
    export const isProfile_min_fields = (obj?: { __typename?: any } | null): obj is Profile_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfile_min_fields"')
      return Profile_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Profile_mutation_response_possibleTypes: string[] = ['Profile_mutation_response']
    export const isProfile_mutation_response = (obj?: { __typename?: any } | null): obj is Profile_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfile_mutation_response"')
      return Profile_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const SetWhitelistOutput_possibleTypes: string[] = ['SetWhitelistOutput']
    export const isSetWhitelistOutput = (obj?: { __typename?: any } | null): obj is SetWhitelistOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetWhitelistOutput"')
      return SetWhitelistOutput_possibleTypes.includes(obj.__typename)
    }
    


    const Wallet_possibleTypes: string[] = ['Wallet']
    export const isWallet = (obj?: { __typename?: any } | null): obj is Wallet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWallet"')
      return Wallet_possibleTypes.includes(obj.__typename)
    }
    


    const Wallet_aggregate_possibleTypes: string[] = ['Wallet_aggregate']
    export const isWallet_aggregate = (obj?: { __typename?: any } | null): obj is Wallet_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWallet_aggregate"')
      return Wallet_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const Wallet_aggregate_fields_possibleTypes: string[] = ['Wallet_aggregate_fields']
    export const isWallet_aggregate_fields = (obj?: { __typename?: any } | null): obj is Wallet_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWallet_aggregate_fields"')
      return Wallet_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Wallet_max_fields_possibleTypes: string[] = ['Wallet_max_fields']
    export const isWallet_max_fields = (obj?: { __typename?: any } | null): obj is Wallet_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWallet_max_fields"')
      return Wallet_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Wallet_min_fields_possibleTypes: string[] = ['Wallet_min_fields']
    export const isWallet_min_fields = (obj?: { __typename?: any } | null): obj is Wallet_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWallet_min_fields"')
      return Wallet_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Wallet_mutation_response_possibleTypes: string[] = ['Wallet_mutation_response']
    export const isWallet_mutation_response = (obj?: { __typename?: any } | null): obj is Wallet_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWallet_mutation_response"')
      return Wallet_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const Whitelist_possibleTypes: string[] = ['Whitelist']
    export const isWhitelist = (obj?: { __typename?: any } | null): obj is Whitelist => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelist"')
      return Whitelist_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_possibleTypes: string[] = ['WhitelistEntries']
    export const isWhitelistEntries = (obj?: { __typename?: any } | null): obj is WhitelistEntries => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries"')
      return WhitelistEntries_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_aggregate_possibleTypes: string[] = ['WhitelistEntries_aggregate']
    export const isWhitelistEntries_aggregate = (obj?: { __typename?: any } | null): obj is WhitelistEntries_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_aggregate"')
      return WhitelistEntries_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_aggregate_fields_possibleTypes: string[] = ['WhitelistEntries_aggregate_fields']
    export const isWhitelistEntries_aggregate_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_aggregate_fields"')
      return WhitelistEntries_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_avg_fields_possibleTypes: string[] = ['WhitelistEntries_avg_fields']
    export const isWhitelistEntries_avg_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_avg_fields"')
      return WhitelistEntries_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_max_fields_possibleTypes: string[] = ['WhitelistEntries_max_fields']
    export const isWhitelistEntries_max_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_max_fields"')
      return WhitelistEntries_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_min_fields_possibleTypes: string[] = ['WhitelistEntries_min_fields']
    export const isWhitelistEntries_min_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_min_fields"')
      return WhitelistEntries_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_mutation_response_possibleTypes: string[] = ['WhitelistEntries_mutation_response']
    export const isWhitelistEntries_mutation_response = (obj?: { __typename?: any } | null): obj is WhitelistEntries_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_mutation_response"')
      return WhitelistEntries_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_stddev_fields_possibleTypes: string[] = ['WhitelistEntries_stddev_fields']
    export const isWhitelistEntries_stddev_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_stddev_fields"')
      return WhitelistEntries_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_stddev_pop_fields_possibleTypes: string[] = ['WhitelistEntries_stddev_pop_fields']
    export const isWhitelistEntries_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_stddev_pop_fields"')
      return WhitelistEntries_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_stddev_samp_fields_possibleTypes: string[] = ['WhitelistEntries_stddev_samp_fields']
    export const isWhitelistEntries_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_stddev_samp_fields"')
      return WhitelistEntries_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_sum_fields_possibleTypes: string[] = ['WhitelistEntries_sum_fields']
    export const isWhitelistEntries_sum_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_sum_fields"')
      return WhitelistEntries_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_var_pop_fields_possibleTypes: string[] = ['WhitelistEntries_var_pop_fields']
    export const isWhitelistEntries_var_pop_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_var_pop_fields"')
      return WhitelistEntries_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_var_samp_fields_possibleTypes: string[] = ['WhitelistEntries_var_samp_fields']
    export const isWhitelistEntries_var_samp_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_var_samp_fields"')
      return WhitelistEntries_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelistEntries_variance_fields_possibleTypes: string[] = ['WhitelistEntries_variance_fields']
    export const isWhitelistEntries_variance_fields = (obj?: { __typename?: any } | null): obj is WhitelistEntries_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelistEntries_variance_fields"')
      return WhitelistEntries_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Whitelist_aggregate_possibleTypes: string[] = ['Whitelist_aggregate']
    export const isWhitelist_aggregate = (obj?: { __typename?: any } | null): obj is Whitelist_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelist_aggregate"')
      return Whitelist_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const Whitelist_aggregate_fields_possibleTypes: string[] = ['Whitelist_aggregate_fields']
    export const isWhitelist_aggregate_fields = (obj?: { __typename?: any } | null): obj is Whitelist_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelist_aggregate_fields"')
      return Whitelist_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Whitelist_max_fields_possibleTypes: string[] = ['Whitelist_max_fields']
    export const isWhitelist_max_fields = (obj?: { __typename?: any } | null): obj is Whitelist_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelist_max_fields"')
      return Whitelist_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Whitelist_min_fields_possibleTypes: string[] = ['Whitelist_min_fields']
    export const isWhitelist_min_fields = (obj?: { __typename?: any } | null): obj is Whitelist_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelist_min_fields"')
      return Whitelist_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const Whitelist_mutation_response_possibleTypes: string[] = ['Whitelist_mutation_response']
    export const isWhitelist_mutation_response = (obj?: { __typename?: any } | null): obj is Whitelist_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelist_mutation_response"')
      return Whitelist_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const action_possibleTypes: string[] = ['action']
    export const isaction = (obj?: { __typename?: any } | null): obj is action => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction"')
      return action_possibleTypes.includes(obj.__typename)
    }
    


    const action_aggregate_possibleTypes: string[] = ['action_aggregate']
    export const isaction_aggregate = (obj?: { __typename?: any } | null): obj is action_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_aggregate"')
      return action_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const action_aggregate_fields_possibleTypes: string[] = ['action_aggregate_fields']
    export const isaction_aggregate_fields = (obj?: { __typename?: any } | null): obj is action_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_aggregate_fields"')
      return action_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_avg_fields_possibleTypes: string[] = ['action_avg_fields']
    export const isaction_avg_fields = (obj?: { __typename?: any } | null): obj is action_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_avg_fields"')
      return action_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_max_fields_possibleTypes: string[] = ['action_max_fields']
    export const isaction_max_fields = (obj?: { __typename?: any } | null): obj is action_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_max_fields"')
      return action_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_min_fields_possibleTypes: string[] = ['action_min_fields']
    export const isaction_min_fields = (obj?: { __typename?: any } | null): obj is action_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_min_fields"')
      return action_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_mutation_response_possibleTypes: string[] = ['action_mutation_response']
    export const isaction_mutation_response = (obj?: { __typename?: any } | null): obj is action_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_mutation_response"')
      return action_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const action_stddev_fields_possibleTypes: string[] = ['action_stddev_fields']
    export const isaction_stddev_fields = (obj?: { __typename?: any } | null): obj is action_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_stddev_fields"')
      return action_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_stddev_pop_fields_possibleTypes: string[] = ['action_stddev_pop_fields']
    export const isaction_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is action_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_stddev_pop_fields"')
      return action_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_stddev_samp_fields_possibleTypes: string[] = ['action_stddev_samp_fields']
    export const isaction_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is action_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_stddev_samp_fields"')
      return action_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_sum_fields_possibleTypes: string[] = ['action_sum_fields']
    export const isaction_sum_fields = (obj?: { __typename?: any } | null): obj is action_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_sum_fields"')
      return action_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_var_pop_fields_possibleTypes: string[] = ['action_var_pop_fields']
    export const isaction_var_pop_fields = (obj?: { __typename?: any } | null): obj is action_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_var_pop_fields"')
      return action_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_var_samp_fields_possibleTypes: string[] = ['action_var_samp_fields']
    export const isaction_var_samp_fields = (obj?: { __typename?: any } | null): obj is action_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_var_samp_fields"')
      return action_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const action_variance_fields_possibleTypes: string[] = ['action_variance_fields']
    export const isaction_variance_fields = (obj?: { __typename?: any } | null): obj is action_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaction_variance_fields"')
      return action_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_possibleTypes: string[] = ['article']
    export const isarticle = (obj?: { __typename?: any } | null): obj is article => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle"')
      return article_possibleTypes.includes(obj.__typename)
    }
    


    const article_aggregate_possibleTypes: string[] = ['article_aggregate']
    export const isarticle_aggregate = (obj?: { __typename?: any } | null): obj is article_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_aggregate"')
      return article_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const article_aggregate_fields_possibleTypes: string[] = ['article_aggregate_fields']
    export const isarticle_aggregate_fields = (obj?: { __typename?: any } | null): obj is article_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_aggregate_fields"')
      return article_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_avg_fields_possibleTypes: string[] = ['article_avg_fields']
    export const isarticle_avg_fields = (obj?: { __typename?: any } | null): obj is article_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_avg_fields"')
      return article_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_possibleTypes: string[] = ['article_generative_token']
    export const isarticle_generative_token = (obj?: { __typename?: any } | null): obj is article_generative_token => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token"')
      return article_generative_token_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_aggregate_possibleTypes: string[] = ['article_generative_token_aggregate']
    export const isarticle_generative_token_aggregate = (obj?: { __typename?: any } | null): obj is article_generative_token_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_aggregate"')
      return article_generative_token_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_aggregate_fields_possibleTypes: string[] = ['article_generative_token_aggregate_fields']
    export const isarticle_generative_token_aggregate_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_aggregate_fields"')
      return article_generative_token_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_avg_fields_possibleTypes: string[] = ['article_generative_token_avg_fields']
    export const isarticle_generative_token_avg_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_avg_fields"')
      return article_generative_token_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_max_fields_possibleTypes: string[] = ['article_generative_token_max_fields']
    export const isarticle_generative_token_max_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_max_fields"')
      return article_generative_token_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_min_fields_possibleTypes: string[] = ['article_generative_token_min_fields']
    export const isarticle_generative_token_min_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_min_fields"')
      return article_generative_token_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_mutation_response_possibleTypes: string[] = ['article_generative_token_mutation_response']
    export const isarticle_generative_token_mutation_response = (obj?: { __typename?: any } | null): obj is article_generative_token_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_mutation_response"')
      return article_generative_token_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_stddev_fields_possibleTypes: string[] = ['article_generative_token_stddev_fields']
    export const isarticle_generative_token_stddev_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_stddev_fields"')
      return article_generative_token_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_stddev_pop_fields_possibleTypes: string[] = ['article_generative_token_stddev_pop_fields']
    export const isarticle_generative_token_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_stddev_pop_fields"')
      return article_generative_token_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_stddev_samp_fields_possibleTypes: string[] = ['article_generative_token_stddev_samp_fields']
    export const isarticle_generative_token_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_stddev_samp_fields"')
      return article_generative_token_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_sum_fields_possibleTypes: string[] = ['article_generative_token_sum_fields']
    export const isarticle_generative_token_sum_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_sum_fields"')
      return article_generative_token_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_var_pop_fields_possibleTypes: string[] = ['article_generative_token_var_pop_fields']
    export const isarticle_generative_token_var_pop_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_var_pop_fields"')
      return article_generative_token_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_var_samp_fields_possibleTypes: string[] = ['article_generative_token_var_samp_fields']
    export const isarticle_generative_token_var_samp_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_var_samp_fields"')
      return article_generative_token_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_generative_token_variance_fields_possibleTypes: string[] = ['article_generative_token_variance_fields']
    export const isarticle_generative_token_variance_fields = (obj?: { __typename?: any } | null): obj is article_generative_token_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_generative_token_variance_fields"')
      return article_generative_token_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_possibleTypes: string[] = ['article_ledger']
    export const isarticle_ledger = (obj?: { __typename?: any } | null): obj is article_ledger => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger"')
      return article_ledger_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_aggregate_possibleTypes: string[] = ['article_ledger_aggregate']
    export const isarticle_ledger_aggregate = (obj?: { __typename?: any } | null): obj is article_ledger_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_aggregate"')
      return article_ledger_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_aggregate_fields_possibleTypes: string[] = ['article_ledger_aggregate_fields']
    export const isarticle_ledger_aggregate_fields = (obj?: { __typename?: any } | null): obj is article_ledger_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_aggregate_fields"')
      return article_ledger_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_avg_fields_possibleTypes: string[] = ['article_ledger_avg_fields']
    export const isarticle_ledger_avg_fields = (obj?: { __typename?: any } | null): obj is article_ledger_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_avg_fields"')
      return article_ledger_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_max_fields_possibleTypes: string[] = ['article_ledger_max_fields']
    export const isarticle_ledger_max_fields = (obj?: { __typename?: any } | null): obj is article_ledger_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_max_fields"')
      return article_ledger_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_min_fields_possibleTypes: string[] = ['article_ledger_min_fields']
    export const isarticle_ledger_min_fields = (obj?: { __typename?: any } | null): obj is article_ledger_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_min_fields"')
      return article_ledger_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_mutation_response_possibleTypes: string[] = ['article_ledger_mutation_response']
    export const isarticle_ledger_mutation_response = (obj?: { __typename?: any } | null): obj is article_ledger_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_mutation_response"')
      return article_ledger_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_stddev_fields_possibleTypes: string[] = ['article_ledger_stddev_fields']
    export const isarticle_ledger_stddev_fields = (obj?: { __typename?: any } | null): obj is article_ledger_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_stddev_fields"')
      return article_ledger_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_stddev_pop_fields_possibleTypes: string[] = ['article_ledger_stddev_pop_fields']
    export const isarticle_ledger_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is article_ledger_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_stddev_pop_fields"')
      return article_ledger_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_stddev_samp_fields_possibleTypes: string[] = ['article_ledger_stddev_samp_fields']
    export const isarticle_ledger_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is article_ledger_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_stddev_samp_fields"')
      return article_ledger_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_sum_fields_possibleTypes: string[] = ['article_ledger_sum_fields']
    export const isarticle_ledger_sum_fields = (obj?: { __typename?: any } | null): obj is article_ledger_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_sum_fields"')
      return article_ledger_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_var_pop_fields_possibleTypes: string[] = ['article_ledger_var_pop_fields']
    export const isarticle_ledger_var_pop_fields = (obj?: { __typename?: any } | null): obj is article_ledger_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_var_pop_fields"')
      return article_ledger_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_var_samp_fields_possibleTypes: string[] = ['article_ledger_var_samp_fields']
    export const isarticle_ledger_var_samp_fields = (obj?: { __typename?: any } | null): obj is article_ledger_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_var_samp_fields"')
      return article_ledger_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_ledger_variance_fields_possibleTypes: string[] = ['article_ledger_variance_fields']
    export const isarticle_ledger_variance_fields = (obj?: { __typename?: any } | null): obj is article_ledger_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_ledger_variance_fields"')
      return article_ledger_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_max_fields_possibleTypes: string[] = ['article_max_fields']
    export const isarticle_max_fields = (obj?: { __typename?: any } | null): obj is article_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_max_fields"')
      return article_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_min_fields_possibleTypes: string[] = ['article_min_fields']
    export const isarticle_min_fields = (obj?: { __typename?: any } | null): obj is article_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_min_fields"')
      return article_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_mutation_response_possibleTypes: string[] = ['article_mutation_response']
    export const isarticle_mutation_response = (obj?: { __typename?: any } | null): obj is article_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_mutation_response"')
      return article_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_possibleTypes: string[] = ['article_revision']
    export const isarticle_revision = (obj?: { __typename?: any } | null): obj is article_revision => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision"')
      return article_revision_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_aggregate_possibleTypes: string[] = ['article_revision_aggregate']
    export const isarticle_revision_aggregate = (obj?: { __typename?: any } | null): obj is article_revision_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_aggregate"')
      return article_revision_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_aggregate_fields_possibleTypes: string[] = ['article_revision_aggregate_fields']
    export const isarticle_revision_aggregate_fields = (obj?: { __typename?: any } | null): obj is article_revision_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_aggregate_fields"')
      return article_revision_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_avg_fields_possibleTypes: string[] = ['article_revision_avg_fields']
    export const isarticle_revision_avg_fields = (obj?: { __typename?: any } | null): obj is article_revision_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_avg_fields"')
      return article_revision_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_max_fields_possibleTypes: string[] = ['article_revision_max_fields']
    export const isarticle_revision_max_fields = (obj?: { __typename?: any } | null): obj is article_revision_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_max_fields"')
      return article_revision_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_min_fields_possibleTypes: string[] = ['article_revision_min_fields']
    export const isarticle_revision_min_fields = (obj?: { __typename?: any } | null): obj is article_revision_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_min_fields"')
      return article_revision_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_mutation_response_possibleTypes: string[] = ['article_revision_mutation_response']
    export const isarticle_revision_mutation_response = (obj?: { __typename?: any } | null): obj is article_revision_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_mutation_response"')
      return article_revision_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_stddev_fields_possibleTypes: string[] = ['article_revision_stddev_fields']
    export const isarticle_revision_stddev_fields = (obj?: { __typename?: any } | null): obj is article_revision_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_stddev_fields"')
      return article_revision_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_stddev_pop_fields_possibleTypes: string[] = ['article_revision_stddev_pop_fields']
    export const isarticle_revision_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is article_revision_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_stddev_pop_fields"')
      return article_revision_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_stddev_samp_fields_possibleTypes: string[] = ['article_revision_stddev_samp_fields']
    export const isarticle_revision_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is article_revision_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_stddev_samp_fields"')
      return article_revision_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_sum_fields_possibleTypes: string[] = ['article_revision_sum_fields']
    export const isarticle_revision_sum_fields = (obj?: { __typename?: any } | null): obj is article_revision_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_sum_fields"')
      return article_revision_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_var_pop_fields_possibleTypes: string[] = ['article_revision_var_pop_fields']
    export const isarticle_revision_var_pop_fields = (obj?: { __typename?: any } | null): obj is article_revision_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_var_pop_fields"')
      return article_revision_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_var_samp_fields_possibleTypes: string[] = ['article_revision_var_samp_fields']
    export const isarticle_revision_var_samp_fields = (obj?: { __typename?: any } | null): obj is article_revision_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_var_samp_fields"')
      return article_revision_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_revision_variance_fields_possibleTypes: string[] = ['article_revision_variance_fields']
    export const isarticle_revision_variance_fields = (obj?: { __typename?: any } | null): obj is article_revision_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_revision_variance_fields"')
      return article_revision_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_stddev_fields_possibleTypes: string[] = ['article_stddev_fields']
    export const isarticle_stddev_fields = (obj?: { __typename?: any } | null): obj is article_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_stddev_fields"')
      return article_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_stddev_pop_fields_possibleTypes: string[] = ['article_stddev_pop_fields']
    export const isarticle_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is article_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_stddev_pop_fields"')
      return article_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_stddev_samp_fields_possibleTypes: string[] = ['article_stddev_samp_fields']
    export const isarticle_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is article_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_stddev_samp_fields"')
      return article_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_sum_fields_possibleTypes: string[] = ['article_sum_fields']
    export const isarticle_sum_fields = (obj?: { __typename?: any } | null): obj is article_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_sum_fields"')
      return article_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_var_pop_fields_possibleTypes: string[] = ['article_var_pop_fields']
    export const isarticle_var_pop_fields = (obj?: { __typename?: any } | null): obj is article_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_var_pop_fields"')
      return article_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_var_samp_fields_possibleTypes: string[] = ['article_var_samp_fields']
    export const isarticle_var_samp_fields = (obj?: { __typename?: any } | null): obj is article_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_var_samp_fields"')
      return article_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const article_variance_fields_possibleTypes: string[] = ['article_variance_fields']
    export const isarticle_variance_fields = (obj?: { __typename?: any } | null): obj is article_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isarticle_variance_fields"')
      return article_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_possibleTypes: string[] = ['auction']
    export const isauction = (obj?: { __typename?: any } | null): obj is auction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction"')
      return auction_possibleTypes.includes(obj.__typename)
    }
    


    const auction_aggregate_possibleTypes: string[] = ['auction_aggregate']
    export const isauction_aggregate = (obj?: { __typename?: any } | null): obj is auction_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_aggregate"')
      return auction_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const auction_aggregate_fields_possibleTypes: string[] = ['auction_aggregate_fields']
    export const isauction_aggregate_fields = (obj?: { __typename?: any } | null): obj is auction_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_aggregate_fields"')
      return auction_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_avg_fields_possibleTypes: string[] = ['auction_avg_fields']
    export const isauction_avg_fields = (obj?: { __typename?: any } | null): obj is auction_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_avg_fields"')
      return auction_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_possibleTypes: string[] = ['auction_bid']
    export const isauction_bid = (obj?: { __typename?: any } | null): obj is auction_bid => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid"')
      return auction_bid_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_aggregate_possibleTypes: string[] = ['auction_bid_aggregate']
    export const isauction_bid_aggregate = (obj?: { __typename?: any } | null): obj is auction_bid_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_aggregate"')
      return auction_bid_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_aggregate_fields_possibleTypes: string[] = ['auction_bid_aggregate_fields']
    export const isauction_bid_aggregate_fields = (obj?: { __typename?: any } | null): obj is auction_bid_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_aggregate_fields"')
      return auction_bid_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_avg_fields_possibleTypes: string[] = ['auction_bid_avg_fields']
    export const isauction_bid_avg_fields = (obj?: { __typename?: any } | null): obj is auction_bid_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_avg_fields"')
      return auction_bid_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_max_fields_possibleTypes: string[] = ['auction_bid_max_fields']
    export const isauction_bid_max_fields = (obj?: { __typename?: any } | null): obj is auction_bid_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_max_fields"')
      return auction_bid_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_min_fields_possibleTypes: string[] = ['auction_bid_min_fields']
    export const isauction_bid_min_fields = (obj?: { __typename?: any } | null): obj is auction_bid_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_min_fields"')
      return auction_bid_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_mutation_response_possibleTypes: string[] = ['auction_bid_mutation_response']
    export const isauction_bid_mutation_response = (obj?: { __typename?: any } | null): obj is auction_bid_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_mutation_response"')
      return auction_bid_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_stddev_fields_possibleTypes: string[] = ['auction_bid_stddev_fields']
    export const isauction_bid_stddev_fields = (obj?: { __typename?: any } | null): obj is auction_bid_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_stddev_fields"')
      return auction_bid_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_stddev_pop_fields_possibleTypes: string[] = ['auction_bid_stddev_pop_fields']
    export const isauction_bid_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is auction_bid_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_stddev_pop_fields"')
      return auction_bid_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_stddev_samp_fields_possibleTypes: string[] = ['auction_bid_stddev_samp_fields']
    export const isauction_bid_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is auction_bid_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_stddev_samp_fields"')
      return auction_bid_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_sum_fields_possibleTypes: string[] = ['auction_bid_sum_fields']
    export const isauction_bid_sum_fields = (obj?: { __typename?: any } | null): obj is auction_bid_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_sum_fields"')
      return auction_bid_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_possibleTypes: string[] = ['auction_bid_table']
    export const isauction_bid_table = (obj?: { __typename?: any } | null): obj is auction_bid_table => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table"')
      return auction_bid_table_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_aggregate_possibleTypes: string[] = ['auction_bid_table_aggregate']
    export const isauction_bid_table_aggregate = (obj?: { __typename?: any } | null): obj is auction_bid_table_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_aggregate"')
      return auction_bid_table_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_aggregate_fields_possibleTypes: string[] = ['auction_bid_table_aggregate_fields']
    export const isauction_bid_table_aggregate_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_aggregate_fields"')
      return auction_bid_table_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_avg_fields_possibleTypes: string[] = ['auction_bid_table_avg_fields']
    export const isauction_bid_table_avg_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_avg_fields"')
      return auction_bid_table_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_max_fields_possibleTypes: string[] = ['auction_bid_table_max_fields']
    export const isauction_bid_table_max_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_max_fields"')
      return auction_bid_table_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_min_fields_possibleTypes: string[] = ['auction_bid_table_min_fields']
    export const isauction_bid_table_min_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_min_fields"')
      return auction_bid_table_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_mutation_response_possibleTypes: string[] = ['auction_bid_table_mutation_response']
    export const isauction_bid_table_mutation_response = (obj?: { __typename?: any } | null): obj is auction_bid_table_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_mutation_response"')
      return auction_bid_table_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_stddev_fields_possibleTypes: string[] = ['auction_bid_table_stddev_fields']
    export const isauction_bid_table_stddev_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_stddev_fields"')
      return auction_bid_table_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_stddev_pop_fields_possibleTypes: string[] = ['auction_bid_table_stddev_pop_fields']
    export const isauction_bid_table_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_stddev_pop_fields"')
      return auction_bid_table_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_stddev_samp_fields_possibleTypes: string[] = ['auction_bid_table_stddev_samp_fields']
    export const isauction_bid_table_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_stddev_samp_fields"')
      return auction_bid_table_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_sum_fields_possibleTypes: string[] = ['auction_bid_table_sum_fields']
    export const isauction_bid_table_sum_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_sum_fields"')
      return auction_bid_table_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_var_pop_fields_possibleTypes: string[] = ['auction_bid_table_var_pop_fields']
    export const isauction_bid_table_var_pop_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_var_pop_fields"')
      return auction_bid_table_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_var_samp_fields_possibleTypes: string[] = ['auction_bid_table_var_samp_fields']
    export const isauction_bid_table_var_samp_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_var_samp_fields"')
      return auction_bid_table_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_table_variance_fields_possibleTypes: string[] = ['auction_bid_table_variance_fields']
    export const isauction_bid_table_variance_fields = (obj?: { __typename?: any } | null): obj is auction_bid_table_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_table_variance_fields"')
      return auction_bid_table_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_var_pop_fields_possibleTypes: string[] = ['auction_bid_var_pop_fields']
    export const isauction_bid_var_pop_fields = (obj?: { __typename?: any } | null): obj is auction_bid_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_var_pop_fields"')
      return auction_bid_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_var_samp_fields_possibleTypes: string[] = ['auction_bid_var_samp_fields']
    export const isauction_bid_var_samp_fields = (obj?: { __typename?: any } | null): obj is auction_bid_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_var_samp_fields"')
      return auction_bid_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_bid_variance_fields_possibleTypes: string[] = ['auction_bid_variance_fields']
    export const isauction_bid_variance_fields = (obj?: { __typename?: any } | null): obj is auction_bid_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_bid_variance_fields"')
      return auction_bid_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_max_fields_possibleTypes: string[] = ['auction_max_fields']
    export const isauction_max_fields = (obj?: { __typename?: any } | null): obj is auction_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_max_fields"')
      return auction_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_min_fields_possibleTypes: string[] = ['auction_min_fields']
    export const isauction_min_fields = (obj?: { __typename?: any } | null): obj is auction_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_min_fields"')
      return auction_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_mutation_response_possibleTypes: string[] = ['auction_mutation_response']
    export const isauction_mutation_response = (obj?: { __typename?: any } | null): obj is auction_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_mutation_response"')
      return auction_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const auction_stddev_fields_possibleTypes: string[] = ['auction_stddev_fields']
    export const isauction_stddev_fields = (obj?: { __typename?: any } | null): obj is auction_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_stddev_fields"')
      return auction_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_stddev_pop_fields_possibleTypes: string[] = ['auction_stddev_pop_fields']
    export const isauction_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is auction_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_stddev_pop_fields"')
      return auction_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_stddev_samp_fields_possibleTypes: string[] = ['auction_stddev_samp_fields']
    export const isauction_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is auction_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_stddev_samp_fields"')
      return auction_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_sum_fields_possibleTypes: string[] = ['auction_sum_fields']
    export const isauction_sum_fields = (obj?: { __typename?: any } | null): obj is auction_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_sum_fields"')
      return auction_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_var_pop_fields_possibleTypes: string[] = ['auction_var_pop_fields']
    export const isauction_var_pop_fields = (obj?: { __typename?: any } | null): obj is auction_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_var_pop_fields"')
      return auction_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_var_samp_fields_possibleTypes: string[] = ['auction_var_samp_fields']
    export const isauction_var_samp_fields = (obj?: { __typename?: any } | null): obj is auction_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_var_samp_fields"')
      return auction_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const auction_variance_fields_possibleTypes: string[] = ['auction_variance_fields']
    export const isauction_variance_fields = (obj?: { __typename?: any } | null): obj is auction_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isauction_variance_fields"')
      return auction_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const codex_possibleTypes: string[] = ['codex']
    export const iscodex = (obj?: { __typename?: any } | null): obj is codex => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex"')
      return codex_possibleTypes.includes(obj.__typename)
    }
    


    const codex_aggregate_possibleTypes: string[] = ['codex_aggregate']
    export const iscodex_aggregate = (obj?: { __typename?: any } | null): obj is codex_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_aggregate"')
      return codex_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const codex_aggregate_fields_possibleTypes: string[] = ['codex_aggregate_fields']
    export const iscodex_aggregate_fields = (obj?: { __typename?: any } | null): obj is codex_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_aggregate_fields"')
      return codex_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const codex_max_fields_possibleTypes: string[] = ['codex_max_fields']
    export const iscodex_max_fields = (obj?: { __typename?: any } | null): obj is codex_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_max_fields"')
      return codex_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const codex_min_fields_possibleTypes: string[] = ['codex_min_fields']
    export const iscodex_min_fields = (obj?: { __typename?: any } | null): obj is codex_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_min_fields"')
      return codex_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const codex_mutation_response_possibleTypes: string[] = ['codex_mutation_response']
    export const iscodex_mutation_response = (obj?: { __typename?: any } | null): obj is codex_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_mutation_response"')
      return codex_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const codex_update_request_possibleTypes: string[] = ['codex_update_request']
    export const iscodex_update_request = (obj?: { __typename?: any } | null): obj is codex_update_request => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_update_request"')
      return codex_update_request_possibleTypes.includes(obj.__typename)
    }
    


    const codex_update_request_aggregate_possibleTypes: string[] = ['codex_update_request_aggregate']
    export const iscodex_update_request_aggregate = (obj?: { __typename?: any } | null): obj is codex_update_request_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_update_request_aggregate"')
      return codex_update_request_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const codex_update_request_aggregate_fields_possibleTypes: string[] = ['codex_update_request_aggregate_fields']
    export const iscodex_update_request_aggregate_fields = (obj?: { __typename?: any } | null): obj is codex_update_request_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_update_request_aggregate_fields"')
      return codex_update_request_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const codex_update_request_max_fields_possibleTypes: string[] = ['codex_update_request_max_fields']
    export const iscodex_update_request_max_fields = (obj?: { __typename?: any } | null): obj is codex_update_request_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_update_request_max_fields"')
      return codex_update_request_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const codex_update_request_min_fields_possibleTypes: string[] = ['codex_update_request_min_fields']
    export const iscodex_update_request_min_fields = (obj?: { __typename?: any } | null): obj is codex_update_request_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_update_request_min_fields"')
      return codex_update_request_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const codex_update_request_mutation_response_possibleTypes: string[] = ['codex_update_request_mutation_response']
    export const iscodex_update_request_mutation_response = (obj?: { __typename?: any } | null): obj is codex_update_request_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscodex_update_request_mutation_response"')
      return codex_update_request_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const collaboration_possibleTypes: string[] = ['collaboration']
    export const iscollaboration = (obj?: { __typename?: any } | null): obj is collaboration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollaboration"')
      return collaboration_possibleTypes.includes(obj.__typename)
    }
    


    const collaboration_aggregate_possibleTypes: string[] = ['collaboration_aggregate']
    export const iscollaboration_aggregate = (obj?: { __typename?: any } | null): obj is collaboration_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollaboration_aggregate"')
      return collaboration_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const collaboration_aggregate_fields_possibleTypes: string[] = ['collaboration_aggregate_fields']
    export const iscollaboration_aggregate_fields = (obj?: { __typename?: any } | null): obj is collaboration_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollaboration_aggregate_fields"')
      return collaboration_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collaboration_max_fields_possibleTypes: string[] = ['collaboration_max_fields']
    export const iscollaboration_max_fields = (obj?: { __typename?: any } | null): obj is collaboration_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollaboration_max_fields"')
      return collaboration_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collaboration_min_fields_possibleTypes: string[] = ['collaboration_min_fields']
    export const iscollaboration_min_fields = (obj?: { __typename?: any } | null): obj is collaboration_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollaboration_min_fields"')
      return collaboration_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collaboration_mutation_response_possibleTypes: string[] = ['collaboration_mutation_response']
    export const iscollaboration_mutation_response = (obj?: { __typename?: any } | null): obj is collaboration_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollaboration_mutation_response"')
      return collaboration_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_possibleTypes: string[] = ['collection_offer']
    export const iscollection_offer = (obj?: { __typename?: any } | null): obj is collection_offer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer"')
      return collection_offer_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_aggregate_possibleTypes: string[] = ['collection_offer_aggregate']
    export const iscollection_offer_aggregate = (obj?: { __typename?: any } | null): obj is collection_offer_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_aggregate"')
      return collection_offer_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_aggregate_fields_possibleTypes: string[] = ['collection_offer_aggregate_fields']
    export const iscollection_offer_aggregate_fields = (obj?: { __typename?: any } | null): obj is collection_offer_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_aggregate_fields"')
      return collection_offer_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_avg_fields_possibleTypes: string[] = ['collection_offer_avg_fields']
    export const iscollection_offer_avg_fields = (obj?: { __typename?: any } | null): obj is collection_offer_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_avg_fields"')
      return collection_offer_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_max_fields_possibleTypes: string[] = ['collection_offer_max_fields']
    export const iscollection_offer_max_fields = (obj?: { __typename?: any } | null): obj is collection_offer_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_max_fields"')
      return collection_offer_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_min_fields_possibleTypes: string[] = ['collection_offer_min_fields']
    export const iscollection_offer_min_fields = (obj?: { __typename?: any } | null): obj is collection_offer_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_min_fields"')
      return collection_offer_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_mutation_response_possibleTypes: string[] = ['collection_offer_mutation_response']
    export const iscollection_offer_mutation_response = (obj?: { __typename?: any } | null): obj is collection_offer_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_mutation_response"')
      return collection_offer_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_stddev_fields_possibleTypes: string[] = ['collection_offer_stddev_fields']
    export const iscollection_offer_stddev_fields = (obj?: { __typename?: any } | null): obj is collection_offer_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_stddev_fields"')
      return collection_offer_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_stddev_pop_fields_possibleTypes: string[] = ['collection_offer_stddev_pop_fields']
    export const iscollection_offer_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is collection_offer_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_stddev_pop_fields"')
      return collection_offer_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_stddev_samp_fields_possibleTypes: string[] = ['collection_offer_stddev_samp_fields']
    export const iscollection_offer_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is collection_offer_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_stddev_samp_fields"')
      return collection_offer_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_sum_fields_possibleTypes: string[] = ['collection_offer_sum_fields']
    export const iscollection_offer_sum_fields = (obj?: { __typename?: any } | null): obj is collection_offer_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_sum_fields"')
      return collection_offer_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_var_pop_fields_possibleTypes: string[] = ['collection_offer_var_pop_fields']
    export const iscollection_offer_var_pop_fields = (obj?: { __typename?: any } | null): obj is collection_offer_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_var_pop_fields"')
      return collection_offer_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_var_samp_fields_possibleTypes: string[] = ['collection_offer_var_samp_fields']
    export const iscollection_offer_var_samp_fields = (obj?: { __typename?: any } | null): obj is collection_offer_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_var_samp_fields"')
      return collection_offer_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const collection_offer_variance_fields_possibleTypes: string[] = ['collection_offer_variance_fields']
    export const iscollection_offer_variance_fields = (obj?: { __typename?: any } | null): obj is collection_offer_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscollection_offer_variance_fields"')
      return collection_offer_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_possibleTypes: string[] = ['generative_token']
    export const isgenerative_token = (obj?: { __typename?: any } | null): obj is generative_token => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token"')
      return generative_token_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_aggregate_possibleTypes: string[] = ['generative_token_aggregate']
    export const isgenerative_token_aggregate = (obj?: { __typename?: any } | null): obj is generative_token_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_aggregate"')
      return generative_token_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_aggregate_fields_possibleTypes: string[] = ['generative_token_aggregate_fields']
    export const isgenerative_token_aggregate_fields = (obj?: { __typename?: any } | null): obj is generative_token_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_aggregate_fields"')
      return generative_token_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_avg_fields_possibleTypes: string[] = ['generative_token_avg_fields']
    export const isgenerative_token_avg_fields = (obj?: { __typename?: any } | null): obj is generative_token_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_avg_fields"')
      return generative_token_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_max_fields_possibleTypes: string[] = ['generative_token_max_fields']
    export const isgenerative_token_max_fields = (obj?: { __typename?: any } | null): obj is generative_token_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_max_fields"')
      return generative_token_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_min_fields_possibleTypes: string[] = ['generative_token_min_fields']
    export const isgenerative_token_min_fields = (obj?: { __typename?: any } | null): obj is generative_token_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_min_fields"')
      return generative_token_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_mutation_response_possibleTypes: string[] = ['generative_token_mutation_response']
    export const isgenerative_token_mutation_response = (obj?: { __typename?: any } | null): obj is generative_token_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_mutation_response"')
      return generative_token_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_stddev_fields_possibleTypes: string[] = ['generative_token_stddev_fields']
    export const isgenerative_token_stddev_fields = (obj?: { __typename?: any } | null): obj is generative_token_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_stddev_fields"')
      return generative_token_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_stddev_pop_fields_possibleTypes: string[] = ['generative_token_stddev_pop_fields']
    export const isgenerative_token_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is generative_token_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_stddev_pop_fields"')
      return generative_token_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_stddev_samp_fields_possibleTypes: string[] = ['generative_token_stddev_samp_fields']
    export const isgenerative_token_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is generative_token_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_stddev_samp_fields"')
      return generative_token_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_sum_fields_possibleTypes: string[] = ['generative_token_sum_fields']
    export const isgenerative_token_sum_fields = (obj?: { __typename?: any } | null): obj is generative_token_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_sum_fields"')
      return generative_token_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_var_pop_fields_possibleTypes: string[] = ['generative_token_var_pop_fields']
    export const isgenerative_token_var_pop_fields = (obj?: { __typename?: any } | null): obj is generative_token_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_var_pop_fields"')
      return generative_token_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_var_samp_fields_possibleTypes: string[] = ['generative_token_var_samp_fields']
    export const isgenerative_token_var_samp_fields = (obj?: { __typename?: any } | null): obj is generative_token_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_var_samp_fields"')
      return generative_token_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const generative_token_variance_fields_possibleTypes: string[] = ['generative_token_variance_fields']
    export const isgenerative_token_variance_fields = (obj?: { __typename?: any } | null): obj is generative_token_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerative_token_variance_fields"')
      return generative_token_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_possibleTypes: string[] = ['gentk_assign']
    export const isgentk_assign = (obj?: { __typename?: any } | null): obj is gentk_assign => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign"')
      return gentk_assign_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_aggregate_possibleTypes: string[] = ['gentk_assign_aggregate']
    export const isgentk_assign_aggregate = (obj?: { __typename?: any } | null): obj is gentk_assign_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_aggregate"')
      return gentk_assign_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_aggregate_fields_possibleTypes: string[] = ['gentk_assign_aggregate_fields']
    export const isgentk_assign_aggregate_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_aggregate_fields"')
      return gentk_assign_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_avg_fields_possibleTypes: string[] = ['gentk_assign_avg_fields']
    export const isgentk_assign_avg_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_avg_fields"')
      return gentk_assign_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_max_fields_possibleTypes: string[] = ['gentk_assign_max_fields']
    export const isgentk_assign_max_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_max_fields"')
      return gentk_assign_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_min_fields_possibleTypes: string[] = ['gentk_assign_min_fields']
    export const isgentk_assign_min_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_min_fields"')
      return gentk_assign_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_mutation_response_possibleTypes: string[] = ['gentk_assign_mutation_response']
    export const isgentk_assign_mutation_response = (obj?: { __typename?: any } | null): obj is gentk_assign_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_mutation_response"')
      return gentk_assign_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_stddev_fields_possibleTypes: string[] = ['gentk_assign_stddev_fields']
    export const isgentk_assign_stddev_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_stddev_fields"')
      return gentk_assign_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_stddev_pop_fields_possibleTypes: string[] = ['gentk_assign_stddev_pop_fields']
    export const isgentk_assign_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_stddev_pop_fields"')
      return gentk_assign_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_stddev_samp_fields_possibleTypes: string[] = ['gentk_assign_stddev_samp_fields']
    export const isgentk_assign_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_stddev_samp_fields"')
      return gentk_assign_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_sum_fields_possibleTypes: string[] = ['gentk_assign_sum_fields']
    export const isgentk_assign_sum_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_sum_fields"')
      return gentk_assign_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_var_pop_fields_possibleTypes: string[] = ['gentk_assign_var_pop_fields']
    export const isgentk_assign_var_pop_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_var_pop_fields"')
      return gentk_assign_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_var_samp_fields_possibleTypes: string[] = ['gentk_assign_var_samp_fields']
    export const isgentk_assign_var_samp_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_var_samp_fields"')
      return gentk_assign_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const gentk_assign_variance_fields_possibleTypes: string[] = ['gentk_assign_variance_fields']
    export const isgentk_assign_variance_fields = (obj?: { __typename?: any } | null): obj is gentk_assign_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgentk_assign_variance_fields"')
      return gentk_assign_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const ipfs_cid_possibleTypes: string[] = ['ipfs_cid']
    export const isipfs_cid = (obj?: { __typename?: any } | null): obj is ipfs_cid => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isipfs_cid"')
      return ipfs_cid_possibleTypes.includes(obj.__typename)
    }
    


    const ipfs_cid_aggregate_possibleTypes: string[] = ['ipfs_cid_aggregate']
    export const isipfs_cid_aggregate = (obj?: { __typename?: any } | null): obj is ipfs_cid_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isipfs_cid_aggregate"')
      return ipfs_cid_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const ipfs_cid_aggregate_fields_possibleTypes: string[] = ['ipfs_cid_aggregate_fields']
    export const isipfs_cid_aggregate_fields = (obj?: { __typename?: any } | null): obj is ipfs_cid_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isipfs_cid_aggregate_fields"')
      return ipfs_cid_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const ipfs_cid_max_fields_possibleTypes: string[] = ['ipfs_cid_max_fields']
    export const isipfs_cid_max_fields = (obj?: { __typename?: any } | null): obj is ipfs_cid_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isipfs_cid_max_fields"')
      return ipfs_cid_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const ipfs_cid_min_fields_possibleTypes: string[] = ['ipfs_cid_min_fields']
    export const isipfs_cid_min_fields = (obj?: { __typename?: any } | null): obj is ipfs_cid_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isipfs_cid_min_fields"')
      return ipfs_cid_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const ipfs_cid_mutation_response_possibleTypes: string[] = ['ipfs_cid_mutation_response']
    export const isipfs_cid_mutation_response = (obj?: { __typename?: any } | null): obj is ipfs_cid_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isipfs_cid_mutation_response"')
      return ipfs_cid_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const listing_possibleTypes: string[] = ['listing']
    export const islisting = (obj?: { __typename?: any } | null): obj is listing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting"')
      return listing_possibleTypes.includes(obj.__typename)
    }
    


    const listing_aggregate_possibleTypes: string[] = ['listing_aggregate']
    export const islisting_aggregate = (obj?: { __typename?: any } | null): obj is listing_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_aggregate"')
      return listing_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const listing_aggregate_fields_possibleTypes: string[] = ['listing_aggregate_fields']
    export const islisting_aggregate_fields = (obj?: { __typename?: any } | null): obj is listing_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_aggregate_fields"')
      return listing_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_avg_fields_possibleTypes: string[] = ['listing_avg_fields']
    export const islisting_avg_fields = (obj?: { __typename?: any } | null): obj is listing_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_avg_fields"')
      return listing_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_max_fields_possibleTypes: string[] = ['listing_max_fields']
    export const islisting_max_fields = (obj?: { __typename?: any } | null): obj is listing_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_max_fields"')
      return listing_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_min_fields_possibleTypes: string[] = ['listing_min_fields']
    export const islisting_min_fields = (obj?: { __typename?: any } | null): obj is listing_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_min_fields"')
      return listing_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_mutation_response_possibleTypes: string[] = ['listing_mutation_response']
    export const islisting_mutation_response = (obj?: { __typename?: any } | null): obj is listing_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_mutation_response"')
      return listing_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const listing_stddev_fields_possibleTypes: string[] = ['listing_stddev_fields']
    export const islisting_stddev_fields = (obj?: { __typename?: any } | null): obj is listing_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_stddev_fields"')
      return listing_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_stddev_pop_fields_possibleTypes: string[] = ['listing_stddev_pop_fields']
    export const islisting_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is listing_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_stddev_pop_fields"')
      return listing_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_stddev_samp_fields_possibleTypes: string[] = ['listing_stddev_samp_fields']
    export const islisting_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is listing_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_stddev_samp_fields"')
      return listing_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_sum_fields_possibleTypes: string[] = ['listing_sum_fields']
    export const islisting_sum_fields = (obj?: { __typename?: any } | null): obj is listing_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_sum_fields"')
      return listing_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_var_pop_fields_possibleTypes: string[] = ['listing_var_pop_fields']
    export const islisting_var_pop_fields = (obj?: { __typename?: any } | null): obj is listing_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_var_pop_fields"')
      return listing_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_var_samp_fields_possibleTypes: string[] = ['listing_var_samp_fields']
    export const islisting_var_samp_fields = (obj?: { __typename?: any } | null): obj is listing_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_var_samp_fields"')
      return listing_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const listing_variance_fields_possibleTypes: string[] = ['listing_variance_fields']
    export const islisting_variance_fields = (obj?: { __typename?: any } | null): obj is listing_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "islisting_variance_fields"')
      return listing_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_possibleTypes: string[] = ['market_stats']
    export const ismarket_stats = (obj?: { __typename?: any } | null): obj is market_stats => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats"')
      return market_stats_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_aggregate_possibleTypes: string[] = ['market_stats_aggregate']
    export const ismarket_stats_aggregate = (obj?: { __typename?: any } | null): obj is market_stats_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_aggregate"')
      return market_stats_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_aggregate_fields_possibleTypes: string[] = ['market_stats_aggregate_fields']
    export const ismarket_stats_aggregate_fields = (obj?: { __typename?: any } | null): obj is market_stats_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_aggregate_fields"')
      return market_stats_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_avg_fields_possibleTypes: string[] = ['market_stats_avg_fields']
    export const ismarket_stats_avg_fields = (obj?: { __typename?: any } | null): obj is market_stats_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_avg_fields"')
      return market_stats_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_possibleTypes: string[] = ['market_stats_history']
    export const ismarket_stats_history = (obj?: { __typename?: any } | null): obj is market_stats_history => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history"')
      return market_stats_history_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_aggregate_possibleTypes: string[] = ['market_stats_history_aggregate']
    export const ismarket_stats_history_aggregate = (obj?: { __typename?: any } | null): obj is market_stats_history_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_aggregate"')
      return market_stats_history_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_aggregate_fields_possibleTypes: string[] = ['market_stats_history_aggregate_fields']
    export const ismarket_stats_history_aggregate_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_aggregate_fields"')
      return market_stats_history_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_avg_fields_possibleTypes: string[] = ['market_stats_history_avg_fields']
    export const ismarket_stats_history_avg_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_avg_fields"')
      return market_stats_history_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_max_fields_possibleTypes: string[] = ['market_stats_history_max_fields']
    export const ismarket_stats_history_max_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_max_fields"')
      return market_stats_history_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_min_fields_possibleTypes: string[] = ['market_stats_history_min_fields']
    export const ismarket_stats_history_min_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_min_fields"')
      return market_stats_history_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_mutation_response_possibleTypes: string[] = ['market_stats_history_mutation_response']
    export const ismarket_stats_history_mutation_response = (obj?: { __typename?: any } | null): obj is market_stats_history_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_mutation_response"')
      return market_stats_history_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_stddev_fields_possibleTypes: string[] = ['market_stats_history_stddev_fields']
    export const ismarket_stats_history_stddev_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_stddev_fields"')
      return market_stats_history_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_stddev_pop_fields_possibleTypes: string[] = ['market_stats_history_stddev_pop_fields']
    export const ismarket_stats_history_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_stddev_pop_fields"')
      return market_stats_history_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_stddev_samp_fields_possibleTypes: string[] = ['market_stats_history_stddev_samp_fields']
    export const ismarket_stats_history_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_stddev_samp_fields"')
      return market_stats_history_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_sum_fields_possibleTypes: string[] = ['market_stats_history_sum_fields']
    export const ismarket_stats_history_sum_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_sum_fields"')
      return market_stats_history_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_var_pop_fields_possibleTypes: string[] = ['market_stats_history_var_pop_fields']
    export const ismarket_stats_history_var_pop_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_var_pop_fields"')
      return market_stats_history_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_var_samp_fields_possibleTypes: string[] = ['market_stats_history_var_samp_fields']
    export const ismarket_stats_history_var_samp_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_var_samp_fields"')
      return market_stats_history_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_history_variance_fields_possibleTypes: string[] = ['market_stats_history_variance_fields']
    export const ismarket_stats_history_variance_fields = (obj?: { __typename?: any } | null): obj is market_stats_history_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_history_variance_fields"')
      return market_stats_history_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_max_fields_possibleTypes: string[] = ['market_stats_max_fields']
    export const ismarket_stats_max_fields = (obj?: { __typename?: any } | null): obj is market_stats_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_max_fields"')
      return market_stats_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_min_fields_possibleTypes: string[] = ['market_stats_min_fields']
    export const ismarket_stats_min_fields = (obj?: { __typename?: any } | null): obj is market_stats_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_min_fields"')
      return market_stats_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_mutation_response_possibleTypes: string[] = ['market_stats_mutation_response']
    export const ismarket_stats_mutation_response = (obj?: { __typename?: any } | null): obj is market_stats_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_mutation_response"')
      return market_stats_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_stddev_fields_possibleTypes: string[] = ['market_stats_stddev_fields']
    export const ismarket_stats_stddev_fields = (obj?: { __typename?: any } | null): obj is market_stats_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_stddev_fields"')
      return market_stats_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_stddev_pop_fields_possibleTypes: string[] = ['market_stats_stddev_pop_fields']
    export const ismarket_stats_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is market_stats_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_stddev_pop_fields"')
      return market_stats_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_stddev_samp_fields_possibleTypes: string[] = ['market_stats_stddev_samp_fields']
    export const ismarket_stats_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is market_stats_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_stddev_samp_fields"')
      return market_stats_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_sum_fields_possibleTypes: string[] = ['market_stats_sum_fields']
    export const ismarket_stats_sum_fields = (obj?: { __typename?: any } | null): obj is market_stats_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_sum_fields"')
      return market_stats_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_var_pop_fields_possibleTypes: string[] = ['market_stats_var_pop_fields']
    export const ismarket_stats_var_pop_fields = (obj?: { __typename?: any } | null): obj is market_stats_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_var_pop_fields"')
      return market_stats_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_var_samp_fields_possibleTypes: string[] = ['market_stats_var_samp_fields']
    export const ismarket_stats_var_samp_fields = (obj?: { __typename?: any } | null): obj is market_stats_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_var_samp_fields"')
      return market_stats_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const market_stats_variance_fields_possibleTypes: string[] = ['market_stats_variance_fields']
    export const ismarket_stats_variance_fields = (obj?: { __typename?: any } | null): obj is market_stats_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismarket_stats_variance_fields"')
      return market_stats_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_possibleTypes: string[] = ['media_image']
    export const ismedia_image = (obj?: { __typename?: any } | null): obj is media_image => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image"')
      return media_image_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_aggregate_possibleTypes: string[] = ['media_image_aggregate']
    export const ismedia_image_aggregate = (obj?: { __typename?: any } | null): obj is media_image_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_aggregate"')
      return media_image_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_aggregate_fields_possibleTypes: string[] = ['media_image_aggregate_fields']
    export const ismedia_image_aggregate_fields = (obj?: { __typename?: any } | null): obj is media_image_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_aggregate_fields"')
      return media_image_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_avg_fields_possibleTypes: string[] = ['media_image_avg_fields']
    export const ismedia_image_avg_fields = (obj?: { __typename?: any } | null): obj is media_image_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_avg_fields"')
      return media_image_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_max_fields_possibleTypes: string[] = ['media_image_max_fields']
    export const ismedia_image_max_fields = (obj?: { __typename?: any } | null): obj is media_image_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_max_fields"')
      return media_image_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_min_fields_possibleTypes: string[] = ['media_image_min_fields']
    export const ismedia_image_min_fields = (obj?: { __typename?: any } | null): obj is media_image_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_min_fields"')
      return media_image_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_mutation_response_possibleTypes: string[] = ['media_image_mutation_response']
    export const ismedia_image_mutation_response = (obj?: { __typename?: any } | null): obj is media_image_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_mutation_response"')
      return media_image_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_stddev_fields_possibleTypes: string[] = ['media_image_stddev_fields']
    export const ismedia_image_stddev_fields = (obj?: { __typename?: any } | null): obj is media_image_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_stddev_fields"')
      return media_image_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_stddev_pop_fields_possibleTypes: string[] = ['media_image_stddev_pop_fields']
    export const ismedia_image_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is media_image_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_stddev_pop_fields"')
      return media_image_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_stddev_samp_fields_possibleTypes: string[] = ['media_image_stddev_samp_fields']
    export const ismedia_image_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is media_image_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_stddev_samp_fields"')
      return media_image_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_sum_fields_possibleTypes: string[] = ['media_image_sum_fields']
    export const ismedia_image_sum_fields = (obj?: { __typename?: any } | null): obj is media_image_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_sum_fields"')
      return media_image_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_var_pop_fields_possibleTypes: string[] = ['media_image_var_pop_fields']
    export const ismedia_image_var_pop_fields = (obj?: { __typename?: any } | null): obj is media_image_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_var_pop_fields"')
      return media_image_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_var_samp_fields_possibleTypes: string[] = ['media_image_var_samp_fields']
    export const ismedia_image_var_samp_fields = (obj?: { __typename?: any } | null): obj is media_image_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_var_samp_fields"')
      return media_image_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const media_image_variance_fields_possibleTypes: string[] = ['media_image_variance_fields']
    export const ismedia_image_variance_fields = (obj?: { __typename?: any } | null): obj is media_image_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismedia_image_variance_fields"')
      return media_image_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_possibleTypes: string[] = ['mint_ticket']
    export const ismint_ticket = (obj?: { __typename?: any } | null): obj is mint_ticket => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket"')
      return mint_ticket_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_aggregate_possibleTypes: string[] = ['mint_ticket_aggregate']
    export const ismint_ticket_aggregate = (obj?: { __typename?: any } | null): obj is mint_ticket_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_aggregate"')
      return mint_ticket_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_aggregate_fields_possibleTypes: string[] = ['mint_ticket_aggregate_fields']
    export const ismint_ticket_aggregate_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_aggregate_fields"')
      return mint_ticket_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_avg_fields_possibleTypes: string[] = ['mint_ticket_avg_fields']
    export const ismint_ticket_avg_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_avg_fields"')
      return mint_ticket_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_max_fields_possibleTypes: string[] = ['mint_ticket_max_fields']
    export const ismint_ticket_max_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_max_fields"')
      return mint_ticket_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_min_fields_possibleTypes: string[] = ['mint_ticket_min_fields']
    export const ismint_ticket_min_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_min_fields"')
      return mint_ticket_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_mutation_response_possibleTypes: string[] = ['mint_ticket_mutation_response']
    export const ismint_ticket_mutation_response = (obj?: { __typename?: any } | null): obj is mint_ticket_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_mutation_response"')
      return mint_ticket_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_possibleTypes: string[] = ['mint_ticket_settings']
    export const ismint_ticket_settings = (obj?: { __typename?: any } | null): obj is mint_ticket_settings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings"')
      return mint_ticket_settings_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_aggregate_possibleTypes: string[] = ['mint_ticket_settings_aggregate']
    export const ismint_ticket_settings_aggregate = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_aggregate"')
      return mint_ticket_settings_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_aggregate_fields_possibleTypes: string[] = ['mint_ticket_settings_aggregate_fields']
    export const ismint_ticket_settings_aggregate_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_aggregate_fields"')
      return mint_ticket_settings_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_avg_fields_possibleTypes: string[] = ['mint_ticket_settings_avg_fields']
    export const ismint_ticket_settings_avg_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_avg_fields"')
      return mint_ticket_settings_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_max_fields_possibleTypes: string[] = ['mint_ticket_settings_max_fields']
    export const ismint_ticket_settings_max_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_max_fields"')
      return mint_ticket_settings_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_min_fields_possibleTypes: string[] = ['mint_ticket_settings_min_fields']
    export const ismint_ticket_settings_min_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_min_fields"')
      return mint_ticket_settings_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_mutation_response_possibleTypes: string[] = ['mint_ticket_settings_mutation_response']
    export const ismint_ticket_settings_mutation_response = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_mutation_response"')
      return mint_ticket_settings_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_stddev_fields_possibleTypes: string[] = ['mint_ticket_settings_stddev_fields']
    export const ismint_ticket_settings_stddev_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_stddev_fields"')
      return mint_ticket_settings_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_stddev_pop_fields_possibleTypes: string[] = ['mint_ticket_settings_stddev_pop_fields']
    export const ismint_ticket_settings_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_stddev_pop_fields"')
      return mint_ticket_settings_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_stddev_samp_fields_possibleTypes: string[] = ['mint_ticket_settings_stddev_samp_fields']
    export const ismint_ticket_settings_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_stddev_samp_fields"')
      return mint_ticket_settings_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_sum_fields_possibleTypes: string[] = ['mint_ticket_settings_sum_fields']
    export const ismint_ticket_settings_sum_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_sum_fields"')
      return mint_ticket_settings_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_var_pop_fields_possibleTypes: string[] = ['mint_ticket_settings_var_pop_fields']
    export const ismint_ticket_settings_var_pop_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_var_pop_fields"')
      return mint_ticket_settings_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_var_samp_fields_possibleTypes: string[] = ['mint_ticket_settings_var_samp_fields']
    export const ismint_ticket_settings_var_samp_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_var_samp_fields"')
      return mint_ticket_settings_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_settings_variance_fields_possibleTypes: string[] = ['mint_ticket_settings_variance_fields']
    export const ismint_ticket_settings_variance_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_settings_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_settings_variance_fields"')
      return mint_ticket_settings_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_stddev_fields_possibleTypes: string[] = ['mint_ticket_stddev_fields']
    export const ismint_ticket_stddev_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_stddev_fields"')
      return mint_ticket_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_stddev_pop_fields_possibleTypes: string[] = ['mint_ticket_stddev_pop_fields']
    export const ismint_ticket_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_stddev_pop_fields"')
      return mint_ticket_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_stddev_samp_fields_possibleTypes: string[] = ['mint_ticket_stddev_samp_fields']
    export const ismint_ticket_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_stddev_samp_fields"')
      return mint_ticket_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_sum_fields_possibleTypes: string[] = ['mint_ticket_sum_fields']
    export const ismint_ticket_sum_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_sum_fields"')
      return mint_ticket_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_var_pop_fields_possibleTypes: string[] = ['mint_ticket_var_pop_fields']
    export const ismint_ticket_var_pop_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_var_pop_fields"')
      return mint_ticket_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_var_samp_fields_possibleTypes: string[] = ['mint_ticket_var_samp_fields']
    export const ismint_ticket_var_samp_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_var_samp_fields"')
      return mint_ticket_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const mint_ticket_variance_fields_possibleTypes: string[] = ['mint_ticket_variance_fields']
    export const ismint_ticket_variance_fields = (obj?: { __typename?: any } | null): obj is mint_ticket_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismint_ticket_variance_fields"')
      return mint_ticket_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const moderation_reason_possibleTypes: string[] = ['moderation_reason']
    export const ismoderation_reason = (obj?: { __typename?: any } | null): obj is moderation_reason => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismoderation_reason"')
      return moderation_reason_possibleTypes.includes(obj.__typename)
    }
    


    const moderation_reason_aggregate_possibleTypes: string[] = ['moderation_reason_aggregate']
    export const ismoderation_reason_aggregate = (obj?: { __typename?: any } | null): obj is moderation_reason_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismoderation_reason_aggregate"')
      return moderation_reason_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const moderation_reason_aggregate_fields_possibleTypes: string[] = ['moderation_reason_aggregate_fields']
    export const ismoderation_reason_aggregate_fields = (obj?: { __typename?: any } | null): obj is moderation_reason_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismoderation_reason_aggregate_fields"')
      return moderation_reason_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const moderation_reason_max_fields_possibleTypes: string[] = ['moderation_reason_max_fields']
    export const ismoderation_reason_max_fields = (obj?: { __typename?: any } | null): obj is moderation_reason_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismoderation_reason_max_fields"')
      return moderation_reason_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const moderation_reason_min_fields_possibleTypes: string[] = ['moderation_reason_min_fields']
    export const ismoderation_reason_min_fields = (obj?: { __typename?: any } | null): obj is moderation_reason_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismoderation_reason_min_fields"')
      return moderation_reason_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const moderation_reason_mutation_response_possibleTypes: string[] = ['moderation_reason_mutation_response']
    export const ismoderation_reason_mutation_response = (obj?: { __typename?: any } | null): obj is moderation_reason_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismoderation_reason_mutation_response"')
      return moderation_reason_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const mutation_root_possibleTypes: string[] = ['mutation_root']
    export const ismutation_root = (obj?: { __typename?: any } | null): obj is mutation_root => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismutation_root"')
      return mutation_root_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_possibleTypes: string[] = ['objkt']
    export const isobjkt = (obj?: { __typename?: any } | null): obj is objkt => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt"')
      return objkt_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_aggregate_possibleTypes: string[] = ['objkt_aggregate']
    export const isobjkt_aggregate = (obj?: { __typename?: any } | null): obj is objkt_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_aggregate"')
      return objkt_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_aggregate_fields_possibleTypes: string[] = ['objkt_aggregate_fields']
    export const isobjkt_aggregate_fields = (obj?: { __typename?: any } | null): obj is objkt_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_aggregate_fields"')
      return objkt_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_avg_fields_possibleTypes: string[] = ['objkt_avg_fields']
    export const isobjkt_avg_fields = (obj?: { __typename?: any } | null): obj is objkt_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_avg_fields"')
      return objkt_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_max_fields_possibleTypes: string[] = ['objkt_max_fields']
    export const isobjkt_max_fields = (obj?: { __typename?: any } | null): obj is objkt_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_max_fields"')
      return objkt_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_min_fields_possibleTypes: string[] = ['objkt_min_fields']
    export const isobjkt_min_fields = (obj?: { __typename?: any } | null): obj is objkt_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_min_fields"')
      return objkt_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_mutation_response_possibleTypes: string[] = ['objkt_mutation_response']
    export const isobjkt_mutation_response = (obj?: { __typename?: any } | null): obj is objkt_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_mutation_response"')
      return objkt_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_stddev_fields_possibleTypes: string[] = ['objkt_stddev_fields']
    export const isobjkt_stddev_fields = (obj?: { __typename?: any } | null): obj is objkt_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_stddev_fields"')
      return objkt_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_stddev_pop_fields_possibleTypes: string[] = ['objkt_stddev_pop_fields']
    export const isobjkt_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is objkt_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_stddev_pop_fields"')
      return objkt_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_stddev_samp_fields_possibleTypes: string[] = ['objkt_stddev_samp_fields']
    export const isobjkt_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is objkt_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_stddev_samp_fields"')
      return objkt_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_sum_fields_possibleTypes: string[] = ['objkt_sum_fields']
    export const isobjkt_sum_fields = (obj?: { __typename?: any } | null): obj is objkt_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_sum_fields"')
      return objkt_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_var_pop_fields_possibleTypes: string[] = ['objkt_var_pop_fields']
    export const isobjkt_var_pop_fields = (obj?: { __typename?: any } | null): obj is objkt_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_var_pop_fields"')
      return objkt_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_var_samp_fields_possibleTypes: string[] = ['objkt_var_samp_fields']
    export const isobjkt_var_samp_fields = (obj?: { __typename?: any } | null): obj is objkt_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_var_samp_fields"')
      return objkt_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const objkt_variance_fields_possibleTypes: string[] = ['objkt_variance_fields']
    export const isobjkt_variance_fields = (obj?: { __typename?: any } | null): obj is objkt_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isobjkt_variance_fields"')
      return objkt_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_possibleTypes: string[] = ['offer']
    export const isoffer = (obj?: { __typename?: any } | null): obj is offer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer"')
      return offer_possibleTypes.includes(obj.__typename)
    }
    


    const offer_aggregate_possibleTypes: string[] = ['offer_aggregate']
    export const isoffer_aggregate = (obj?: { __typename?: any } | null): obj is offer_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_aggregate"')
      return offer_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const offer_aggregate_fields_possibleTypes: string[] = ['offer_aggregate_fields']
    export const isoffer_aggregate_fields = (obj?: { __typename?: any } | null): obj is offer_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_aggregate_fields"')
      return offer_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_avg_fields_possibleTypes: string[] = ['offer_avg_fields']
    export const isoffer_avg_fields = (obj?: { __typename?: any } | null): obj is offer_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_avg_fields"')
      return offer_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_max_fields_possibleTypes: string[] = ['offer_max_fields']
    export const isoffer_max_fields = (obj?: { __typename?: any } | null): obj is offer_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_max_fields"')
      return offer_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_min_fields_possibleTypes: string[] = ['offer_min_fields']
    export const isoffer_min_fields = (obj?: { __typename?: any } | null): obj is offer_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_min_fields"')
      return offer_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_mutation_response_possibleTypes: string[] = ['offer_mutation_response']
    export const isoffer_mutation_response = (obj?: { __typename?: any } | null): obj is offer_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_mutation_response"')
      return offer_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const offer_stddev_fields_possibleTypes: string[] = ['offer_stddev_fields']
    export const isoffer_stddev_fields = (obj?: { __typename?: any } | null): obj is offer_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_stddev_fields"')
      return offer_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_stddev_pop_fields_possibleTypes: string[] = ['offer_stddev_pop_fields']
    export const isoffer_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is offer_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_stddev_pop_fields"')
      return offer_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_stddev_samp_fields_possibleTypes: string[] = ['offer_stddev_samp_fields']
    export const isoffer_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is offer_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_stddev_samp_fields"')
      return offer_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_sum_fields_possibleTypes: string[] = ['offer_sum_fields']
    export const isoffer_sum_fields = (obj?: { __typename?: any } | null): obj is offer_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_sum_fields"')
      return offer_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_var_pop_fields_possibleTypes: string[] = ['offer_var_pop_fields']
    export const isoffer_var_pop_fields = (obj?: { __typename?: any } | null): obj is offer_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_var_pop_fields"')
      return offer_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_var_samp_fields_possibleTypes: string[] = ['offer_var_samp_fields']
    export const isoffer_var_samp_fields = (obj?: { __typename?: any } | null): obj is offer_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_var_samp_fields"')
      return offer_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const offer_variance_fields_possibleTypes: string[] = ['offer_variance_fields']
    export const isoffer_variance_fields = (obj?: { __typename?: any } | null): obj is offer_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isoffer_variance_fields"')
      return offer_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_possibleTypes: string[] = ['pricing_dutch_auction']
    export const ispricing_dutch_auction = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction"')
      return pricing_dutch_auction_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_aggregate_possibleTypes: string[] = ['pricing_dutch_auction_aggregate']
    export const ispricing_dutch_auction_aggregate = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_aggregate"')
      return pricing_dutch_auction_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_aggregate_fields_possibleTypes: string[] = ['pricing_dutch_auction_aggregate_fields']
    export const ispricing_dutch_auction_aggregate_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_aggregate_fields"')
      return pricing_dutch_auction_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_avg_fields_possibleTypes: string[] = ['pricing_dutch_auction_avg_fields']
    export const ispricing_dutch_auction_avg_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_avg_fields"')
      return pricing_dutch_auction_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_max_fields_possibleTypes: string[] = ['pricing_dutch_auction_max_fields']
    export const ispricing_dutch_auction_max_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_max_fields"')
      return pricing_dutch_auction_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_min_fields_possibleTypes: string[] = ['pricing_dutch_auction_min_fields']
    export const ispricing_dutch_auction_min_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_min_fields"')
      return pricing_dutch_auction_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_mutation_response_possibleTypes: string[] = ['pricing_dutch_auction_mutation_response']
    export const ispricing_dutch_auction_mutation_response = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_mutation_response"')
      return pricing_dutch_auction_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_stddev_fields_possibleTypes: string[] = ['pricing_dutch_auction_stddev_fields']
    export const ispricing_dutch_auction_stddev_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_stddev_fields"')
      return pricing_dutch_auction_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_stddev_pop_fields_possibleTypes: string[] = ['pricing_dutch_auction_stddev_pop_fields']
    export const ispricing_dutch_auction_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_stddev_pop_fields"')
      return pricing_dutch_auction_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_stddev_samp_fields_possibleTypes: string[] = ['pricing_dutch_auction_stddev_samp_fields']
    export const ispricing_dutch_auction_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_stddev_samp_fields"')
      return pricing_dutch_auction_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_sum_fields_possibleTypes: string[] = ['pricing_dutch_auction_sum_fields']
    export const ispricing_dutch_auction_sum_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_sum_fields"')
      return pricing_dutch_auction_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_var_pop_fields_possibleTypes: string[] = ['pricing_dutch_auction_var_pop_fields']
    export const ispricing_dutch_auction_var_pop_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_var_pop_fields"')
      return pricing_dutch_auction_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_var_samp_fields_possibleTypes: string[] = ['pricing_dutch_auction_var_samp_fields']
    export const ispricing_dutch_auction_var_samp_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_var_samp_fields"')
      return pricing_dutch_auction_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_dutch_auction_variance_fields_possibleTypes: string[] = ['pricing_dutch_auction_variance_fields']
    export const ispricing_dutch_auction_variance_fields = (obj?: { __typename?: any } | null): obj is pricing_dutch_auction_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_dutch_auction_variance_fields"')
      return pricing_dutch_auction_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_possibleTypes: string[] = ['pricing_fixed']
    export const ispricing_fixed = (obj?: { __typename?: any } | null): obj is pricing_fixed => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed"')
      return pricing_fixed_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_aggregate_possibleTypes: string[] = ['pricing_fixed_aggregate']
    export const ispricing_fixed_aggregate = (obj?: { __typename?: any } | null): obj is pricing_fixed_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_aggregate"')
      return pricing_fixed_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_aggregate_fields_possibleTypes: string[] = ['pricing_fixed_aggregate_fields']
    export const ispricing_fixed_aggregate_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_aggregate_fields"')
      return pricing_fixed_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_avg_fields_possibleTypes: string[] = ['pricing_fixed_avg_fields']
    export const ispricing_fixed_avg_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_avg_fields"')
      return pricing_fixed_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_max_fields_possibleTypes: string[] = ['pricing_fixed_max_fields']
    export const ispricing_fixed_max_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_max_fields"')
      return pricing_fixed_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_min_fields_possibleTypes: string[] = ['pricing_fixed_min_fields']
    export const ispricing_fixed_min_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_min_fields"')
      return pricing_fixed_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_mutation_response_possibleTypes: string[] = ['pricing_fixed_mutation_response']
    export const ispricing_fixed_mutation_response = (obj?: { __typename?: any } | null): obj is pricing_fixed_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_mutation_response"')
      return pricing_fixed_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_stddev_fields_possibleTypes: string[] = ['pricing_fixed_stddev_fields']
    export const ispricing_fixed_stddev_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_stddev_fields"')
      return pricing_fixed_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_stddev_pop_fields_possibleTypes: string[] = ['pricing_fixed_stddev_pop_fields']
    export const ispricing_fixed_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_stddev_pop_fields"')
      return pricing_fixed_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_stddev_samp_fields_possibleTypes: string[] = ['pricing_fixed_stddev_samp_fields']
    export const ispricing_fixed_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_stddev_samp_fields"')
      return pricing_fixed_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_sum_fields_possibleTypes: string[] = ['pricing_fixed_sum_fields']
    export const ispricing_fixed_sum_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_sum_fields"')
      return pricing_fixed_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_var_pop_fields_possibleTypes: string[] = ['pricing_fixed_var_pop_fields']
    export const ispricing_fixed_var_pop_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_var_pop_fields"')
      return pricing_fixed_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_var_samp_fields_possibleTypes: string[] = ['pricing_fixed_var_samp_fields']
    export const ispricing_fixed_var_samp_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_var_samp_fields"')
      return pricing_fixed_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const pricing_fixed_variance_fields_possibleTypes: string[] = ['pricing_fixed_variance_fields']
    export const ispricing_fixed_variance_fields = (obj?: { __typename?: any } | null): obj is pricing_fixed_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ispricing_fixed_variance_fields"')
      return pricing_fixed_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const query_root_possibleTypes: string[] = ['query_root']
    export const isquery_root = (obj?: { __typename?: any } | null): obj is query_root => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isquery_root"')
      return query_root_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_possibleTypes: string[] = ['redeemable']
    export const isredeemable = (obj?: { __typename?: any } | null): obj is redeemable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable"')
      return redeemable_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_aggregate_possibleTypes: string[] = ['redeemable_aggregate']
    export const isredeemable_aggregate = (obj?: { __typename?: any } | null): obj is redeemable_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_aggregate"')
      return redeemable_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_aggregate_fields_possibleTypes: string[] = ['redeemable_aggregate_fields']
    export const isredeemable_aggregate_fields = (obj?: { __typename?: any } | null): obj is redeemable_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_aggregate_fields"')
      return redeemable_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_avg_fields_possibleTypes: string[] = ['redeemable_avg_fields']
    export const isredeemable_avg_fields = (obj?: { __typename?: any } | null): obj is redeemable_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_avg_fields"')
      return redeemable_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_max_fields_possibleTypes: string[] = ['redeemable_max_fields']
    export const isredeemable_max_fields = (obj?: { __typename?: any } | null): obj is redeemable_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_max_fields"')
      return redeemable_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_min_fields_possibleTypes: string[] = ['redeemable_min_fields']
    export const isredeemable_min_fields = (obj?: { __typename?: any } | null): obj is redeemable_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_min_fields"')
      return redeemable_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_mutation_response_possibleTypes: string[] = ['redeemable_mutation_response']
    export const isredeemable_mutation_response = (obj?: { __typename?: any } | null): obj is redeemable_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_mutation_response"')
      return redeemable_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_stddev_fields_possibleTypes: string[] = ['redeemable_stddev_fields']
    export const isredeemable_stddev_fields = (obj?: { __typename?: any } | null): obj is redeemable_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_stddev_fields"')
      return redeemable_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_stddev_pop_fields_possibleTypes: string[] = ['redeemable_stddev_pop_fields']
    export const isredeemable_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is redeemable_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_stddev_pop_fields"')
      return redeemable_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_stddev_samp_fields_possibleTypes: string[] = ['redeemable_stddev_samp_fields']
    export const isredeemable_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is redeemable_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_stddev_samp_fields"')
      return redeemable_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_sum_fields_possibleTypes: string[] = ['redeemable_sum_fields']
    export const isredeemable_sum_fields = (obj?: { __typename?: any } | null): obj is redeemable_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_sum_fields"')
      return redeemable_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_var_pop_fields_possibleTypes: string[] = ['redeemable_var_pop_fields']
    export const isredeemable_var_pop_fields = (obj?: { __typename?: any } | null): obj is redeemable_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_var_pop_fields"')
      return redeemable_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_var_samp_fields_possibleTypes: string[] = ['redeemable_var_samp_fields']
    export const isredeemable_var_samp_fields = (obj?: { __typename?: any } | null): obj is redeemable_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_var_samp_fields"')
      return redeemable_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redeemable_variance_fields_possibleTypes: string[] = ['redeemable_variance_fields']
    export const isredeemable_variance_fields = (obj?: { __typename?: any } | null): obj is redeemable_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredeemable_variance_fields"')
      return redeemable_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_possibleTypes: string[] = ['redemption']
    export const isredemption = (obj?: { __typename?: any } | null): obj is redemption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption"')
      return redemption_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_aggregate_possibleTypes: string[] = ['redemption_aggregate']
    export const isredemption_aggregate = (obj?: { __typename?: any } | null): obj is redemption_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_aggregate"')
      return redemption_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_aggregate_fields_possibleTypes: string[] = ['redemption_aggregate_fields']
    export const isredemption_aggregate_fields = (obj?: { __typename?: any } | null): obj is redemption_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_aggregate_fields"')
      return redemption_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_avg_fields_possibleTypes: string[] = ['redemption_avg_fields']
    export const isredemption_avg_fields = (obj?: { __typename?: any } | null): obj is redemption_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_avg_fields"')
      return redemption_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_max_fields_possibleTypes: string[] = ['redemption_max_fields']
    export const isredemption_max_fields = (obj?: { __typename?: any } | null): obj is redemption_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_max_fields"')
      return redemption_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_min_fields_possibleTypes: string[] = ['redemption_min_fields']
    export const isredemption_min_fields = (obj?: { __typename?: any } | null): obj is redemption_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_min_fields"')
      return redemption_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_mutation_response_possibleTypes: string[] = ['redemption_mutation_response']
    export const isredemption_mutation_response = (obj?: { __typename?: any } | null): obj is redemption_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_mutation_response"')
      return redemption_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_stddev_fields_possibleTypes: string[] = ['redemption_stddev_fields']
    export const isredemption_stddev_fields = (obj?: { __typename?: any } | null): obj is redemption_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_stddev_fields"')
      return redemption_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_stddev_pop_fields_possibleTypes: string[] = ['redemption_stddev_pop_fields']
    export const isredemption_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is redemption_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_stddev_pop_fields"')
      return redemption_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_stddev_samp_fields_possibleTypes: string[] = ['redemption_stddev_samp_fields']
    export const isredemption_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is redemption_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_stddev_samp_fields"')
      return redemption_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_sum_fields_possibleTypes: string[] = ['redemption_sum_fields']
    export const isredemption_sum_fields = (obj?: { __typename?: any } | null): obj is redemption_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_sum_fields"')
      return redemption_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_var_pop_fields_possibleTypes: string[] = ['redemption_var_pop_fields']
    export const isredemption_var_pop_fields = (obj?: { __typename?: any } | null): obj is redemption_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_var_pop_fields"')
      return redemption_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_var_samp_fields_possibleTypes: string[] = ['redemption_var_samp_fields']
    export const isredemption_var_samp_fields = (obj?: { __typename?: any } | null): obj is redemption_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_var_samp_fields"')
      return redemption_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const redemption_variance_fields_possibleTypes: string[] = ['redemption_variance_fields']
    export const isredemption_variance_fields = (obj?: { __typename?: any } | null): obj is redemption_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isredemption_variance_fields"')
      return redemption_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const report_possibleTypes: string[] = ['report']
    export const isreport = (obj?: { __typename?: any } | null): obj is report => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreport"')
      return report_possibleTypes.includes(obj.__typename)
    }
    


    const report_aggregate_possibleTypes: string[] = ['report_aggregate']
    export const isreport_aggregate = (obj?: { __typename?: any } | null): obj is report_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreport_aggregate"')
      return report_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const report_aggregate_fields_possibleTypes: string[] = ['report_aggregate_fields']
    export const isreport_aggregate_fields = (obj?: { __typename?: any } | null): obj is report_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreport_aggregate_fields"')
      return report_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const report_max_fields_possibleTypes: string[] = ['report_max_fields']
    export const isreport_max_fields = (obj?: { __typename?: any } | null): obj is report_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreport_max_fields"')
      return report_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const report_min_fields_possibleTypes: string[] = ['report_min_fields']
    export const isreport_min_fields = (obj?: { __typename?: any } | null): obj is report_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreport_min_fields"')
      return report_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const report_mutation_response_possibleTypes: string[] = ['report_mutation_response']
    export const isreport_mutation_response = (obj?: { __typename?: any } | null): obj is report_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreport_mutation_response"')
      return report_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_possibleTypes: string[] = ['reserve']
    export const isreserve = (obj?: { __typename?: any } | null): obj is reserve => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve"')
      return reserve_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_aggregate_possibleTypes: string[] = ['reserve_aggregate']
    export const isreserve_aggregate = (obj?: { __typename?: any } | null): obj is reserve_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_aggregate"')
      return reserve_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_aggregate_fields_possibleTypes: string[] = ['reserve_aggregate_fields']
    export const isreserve_aggregate_fields = (obj?: { __typename?: any } | null): obj is reserve_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_aggregate_fields"')
      return reserve_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_avg_fields_possibleTypes: string[] = ['reserve_avg_fields']
    export const isreserve_avg_fields = (obj?: { __typename?: any } | null): obj is reserve_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_avg_fields"')
      return reserve_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_max_fields_possibleTypes: string[] = ['reserve_max_fields']
    export const isreserve_max_fields = (obj?: { __typename?: any } | null): obj is reserve_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_max_fields"')
      return reserve_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_min_fields_possibleTypes: string[] = ['reserve_min_fields']
    export const isreserve_min_fields = (obj?: { __typename?: any } | null): obj is reserve_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_min_fields"')
      return reserve_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_mutation_response_possibleTypes: string[] = ['reserve_mutation_response']
    export const isreserve_mutation_response = (obj?: { __typename?: any } | null): obj is reserve_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_mutation_response"')
      return reserve_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_stddev_fields_possibleTypes: string[] = ['reserve_stddev_fields']
    export const isreserve_stddev_fields = (obj?: { __typename?: any } | null): obj is reserve_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_stddev_fields"')
      return reserve_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_stddev_pop_fields_possibleTypes: string[] = ['reserve_stddev_pop_fields']
    export const isreserve_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is reserve_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_stddev_pop_fields"')
      return reserve_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_stddev_samp_fields_possibleTypes: string[] = ['reserve_stddev_samp_fields']
    export const isreserve_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is reserve_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_stddev_samp_fields"')
      return reserve_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_sum_fields_possibleTypes: string[] = ['reserve_sum_fields']
    export const isreserve_sum_fields = (obj?: { __typename?: any } | null): obj is reserve_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_sum_fields"')
      return reserve_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_var_pop_fields_possibleTypes: string[] = ['reserve_var_pop_fields']
    export const isreserve_var_pop_fields = (obj?: { __typename?: any } | null): obj is reserve_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_var_pop_fields"')
      return reserve_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_var_samp_fields_possibleTypes: string[] = ['reserve_var_samp_fields']
    export const isreserve_var_samp_fields = (obj?: { __typename?: any } | null): obj is reserve_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_var_samp_fields"')
      return reserve_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const reserve_variance_fields_possibleTypes: string[] = ['reserve_variance_fields']
    export const isreserve_variance_fields = (obj?: { __typename?: any } | null): obj is reserve_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isreserve_variance_fields"')
      return reserve_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_possibleTypes: string[] = ['split']
    export const issplit = (obj?: { __typename?: any } | null): obj is split => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit"')
      return split_possibleTypes.includes(obj.__typename)
    }
    


    const split_aggregate_possibleTypes: string[] = ['split_aggregate']
    export const issplit_aggregate = (obj?: { __typename?: any } | null): obj is split_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_aggregate"')
      return split_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const split_aggregate_fields_possibleTypes: string[] = ['split_aggregate_fields']
    export const issplit_aggregate_fields = (obj?: { __typename?: any } | null): obj is split_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_aggregate_fields"')
      return split_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_avg_fields_possibleTypes: string[] = ['split_avg_fields']
    export const issplit_avg_fields = (obj?: { __typename?: any } | null): obj is split_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_avg_fields"')
      return split_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_max_fields_possibleTypes: string[] = ['split_max_fields']
    export const issplit_max_fields = (obj?: { __typename?: any } | null): obj is split_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_max_fields"')
      return split_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_min_fields_possibleTypes: string[] = ['split_min_fields']
    export const issplit_min_fields = (obj?: { __typename?: any } | null): obj is split_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_min_fields"')
      return split_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_mutation_response_possibleTypes: string[] = ['split_mutation_response']
    export const issplit_mutation_response = (obj?: { __typename?: any } | null): obj is split_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_mutation_response"')
      return split_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const split_stddev_fields_possibleTypes: string[] = ['split_stddev_fields']
    export const issplit_stddev_fields = (obj?: { __typename?: any } | null): obj is split_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_stddev_fields"')
      return split_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_stddev_pop_fields_possibleTypes: string[] = ['split_stddev_pop_fields']
    export const issplit_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is split_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_stddev_pop_fields"')
      return split_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_stddev_samp_fields_possibleTypes: string[] = ['split_stddev_samp_fields']
    export const issplit_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is split_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_stddev_samp_fields"')
      return split_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_sum_fields_possibleTypes: string[] = ['split_sum_fields']
    export const issplit_sum_fields = (obj?: { __typename?: any } | null): obj is split_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_sum_fields"')
      return split_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_var_pop_fields_possibleTypes: string[] = ['split_var_pop_fields']
    export const issplit_var_pop_fields = (obj?: { __typename?: any } | null): obj is split_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_var_pop_fields"')
      return split_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_var_samp_fields_possibleTypes: string[] = ['split_var_samp_fields']
    export const issplit_var_samp_fields = (obj?: { __typename?: any } | null): obj is split_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_var_samp_fields"')
      return split_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const split_variance_fields_possibleTypes: string[] = ['split_variance_fields']
    export const issplit_variance_fields = (obj?: { __typename?: any } | null): obj is split_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issplit_variance_fields"')
      return split_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const subscription_root_possibleTypes: string[] = ['subscription_root']
    export const issubscription_root = (obj?: { __typename?: any } | null): obj is subscription_root => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issubscription_root"')
      return subscription_root_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_possibleTypes: string[] = ['transaction']
    export const istransaction = (obj?: { __typename?: any } | null): obj is transaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction"')
      return transaction_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_aggregate_possibleTypes: string[] = ['transaction_aggregate']
    export const istransaction_aggregate = (obj?: { __typename?: any } | null): obj is transaction_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_aggregate"')
      return transaction_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_aggregate_fields_possibleTypes: string[] = ['transaction_aggregate_fields']
    export const istransaction_aggregate_fields = (obj?: { __typename?: any } | null): obj is transaction_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_aggregate_fields"')
      return transaction_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_avg_fields_possibleTypes: string[] = ['transaction_avg_fields']
    export const istransaction_avg_fields = (obj?: { __typename?: any } | null): obj is transaction_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_avg_fields"')
      return transaction_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_max_fields_possibleTypes: string[] = ['transaction_max_fields']
    export const istransaction_max_fields = (obj?: { __typename?: any } | null): obj is transaction_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_max_fields"')
      return transaction_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_min_fields_possibleTypes: string[] = ['transaction_min_fields']
    export const istransaction_min_fields = (obj?: { __typename?: any } | null): obj is transaction_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_min_fields"')
      return transaction_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_mutation_response_possibleTypes: string[] = ['transaction_mutation_response']
    export const istransaction_mutation_response = (obj?: { __typename?: any } | null): obj is transaction_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_mutation_response"')
      return transaction_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_stddev_fields_possibleTypes: string[] = ['transaction_stddev_fields']
    export const istransaction_stddev_fields = (obj?: { __typename?: any } | null): obj is transaction_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_stddev_fields"')
      return transaction_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_stddev_pop_fields_possibleTypes: string[] = ['transaction_stddev_pop_fields']
    export const istransaction_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is transaction_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_stddev_pop_fields"')
      return transaction_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_stddev_samp_fields_possibleTypes: string[] = ['transaction_stddev_samp_fields']
    export const istransaction_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is transaction_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_stddev_samp_fields"')
      return transaction_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_sum_fields_possibleTypes: string[] = ['transaction_sum_fields']
    export const istransaction_sum_fields = (obj?: { __typename?: any } | null): obj is transaction_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_sum_fields"')
      return transaction_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_var_pop_fields_possibleTypes: string[] = ['transaction_var_pop_fields']
    export const istransaction_var_pop_fields = (obj?: { __typename?: any } | null): obj is transaction_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_var_pop_fields"')
      return transaction_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_var_samp_fields_possibleTypes: string[] = ['transaction_var_samp_fields']
    export const istransaction_var_samp_fields = (obj?: { __typename?: any } | null): obj is transaction_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_var_samp_fields"')
      return transaction_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const transaction_variance_fields_possibleTypes: string[] = ['transaction_variance_fields']
    export const istransaction_variance_fields = (obj?: { __typename?: any } | null): obj is transaction_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istransaction_variance_fields"')
      return transaction_variance_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_possibleTypes: string[] = ['user']
    export const isuser = (obj?: { __typename?: any } | null): obj is user => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser"')
      return user_possibleTypes.includes(obj.__typename)
    }
    


    const user_aggregate_possibleTypes: string[] = ['user_aggregate']
    export const isuser_aggregate = (obj?: { __typename?: any } | null): obj is user_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_aggregate"')
      return user_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const user_aggregate_fields_possibleTypes: string[] = ['user_aggregate_fields']
    export const isuser_aggregate_fields = (obj?: { __typename?: any } | null): obj is user_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_aggregate_fields"')
      return user_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_max_fields_possibleTypes: string[] = ['user_max_fields']
    export const isuser_max_fields = (obj?: { __typename?: any } | null): obj is user_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_max_fields"')
      return user_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_min_fields_possibleTypes: string[] = ['user_min_fields']
    export const isuser_min_fields = (obj?: { __typename?: any } | null): obj is user_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_min_fields"')
      return user_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_mutation_response_possibleTypes: string[] = ['user_mutation_response']
    export const isuser_mutation_response = (obj?: { __typename?: any } | null): obj is user_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_mutation_response"')
      return user_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_possibleTypes: string[] = ['user_stats']
    export const isuser_stats = (obj?: { __typename?: any } | null): obj is user_stats => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats"')
      return user_stats_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_aggregate_possibleTypes: string[] = ['user_stats_aggregate']
    export const isuser_stats_aggregate = (obj?: { __typename?: any } | null): obj is user_stats_aggregate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_aggregate"')
      return user_stats_aggregate_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_aggregate_fields_possibleTypes: string[] = ['user_stats_aggregate_fields']
    export const isuser_stats_aggregate_fields = (obj?: { __typename?: any } | null): obj is user_stats_aggregate_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_aggregate_fields"')
      return user_stats_aggregate_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_avg_fields_possibleTypes: string[] = ['user_stats_avg_fields']
    export const isuser_stats_avg_fields = (obj?: { __typename?: any } | null): obj is user_stats_avg_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_avg_fields"')
      return user_stats_avg_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_max_fields_possibleTypes: string[] = ['user_stats_max_fields']
    export const isuser_stats_max_fields = (obj?: { __typename?: any } | null): obj is user_stats_max_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_max_fields"')
      return user_stats_max_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_min_fields_possibleTypes: string[] = ['user_stats_min_fields']
    export const isuser_stats_min_fields = (obj?: { __typename?: any } | null): obj is user_stats_min_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_min_fields"')
      return user_stats_min_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_mutation_response_possibleTypes: string[] = ['user_stats_mutation_response']
    export const isuser_stats_mutation_response = (obj?: { __typename?: any } | null): obj is user_stats_mutation_response => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_mutation_response"')
      return user_stats_mutation_response_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_stddev_fields_possibleTypes: string[] = ['user_stats_stddev_fields']
    export const isuser_stats_stddev_fields = (obj?: { __typename?: any } | null): obj is user_stats_stddev_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_stddev_fields"')
      return user_stats_stddev_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_stddev_pop_fields_possibleTypes: string[] = ['user_stats_stddev_pop_fields']
    export const isuser_stats_stddev_pop_fields = (obj?: { __typename?: any } | null): obj is user_stats_stddev_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_stddev_pop_fields"')
      return user_stats_stddev_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_stddev_samp_fields_possibleTypes: string[] = ['user_stats_stddev_samp_fields']
    export const isuser_stats_stddev_samp_fields = (obj?: { __typename?: any } | null): obj is user_stats_stddev_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_stddev_samp_fields"')
      return user_stats_stddev_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_sum_fields_possibleTypes: string[] = ['user_stats_sum_fields']
    export const isuser_stats_sum_fields = (obj?: { __typename?: any } | null): obj is user_stats_sum_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_sum_fields"')
      return user_stats_sum_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_var_pop_fields_possibleTypes: string[] = ['user_stats_var_pop_fields']
    export const isuser_stats_var_pop_fields = (obj?: { __typename?: any } | null): obj is user_stats_var_pop_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_var_pop_fields"')
      return user_stats_var_pop_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_var_samp_fields_possibleTypes: string[] = ['user_stats_var_samp_fields']
    export const isuser_stats_var_samp_fields = (obj?: { __typename?: any } | null): obj is user_stats_var_samp_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_var_samp_fields"')
      return user_stats_var_samp_fields_possibleTypes.includes(obj.__typename)
    }
    


    const user_stats_variance_fields_possibleTypes: string[] = ['user_stats_variance_fields']
    export const isuser_stats_variance_fields = (obj?: { __typename?: any } | null): obj is user_stats_variance_fields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuser_stats_variance_fields"')
      return user_stats_variance_fields_possibleTypes.includes(obj.__typename)
    }
    

export const enumAccountConstraint = {
   Account_pkey: 'Account_pkey' as const,
   Account_username_key: 'Account_username_key' as const
}

export const enumAccountSelectColumn = {
   id: 'id' as const,
   status: 'status' as const,
   username: 'username' as const
}

export const enumAccountUpdateColumn = {
   id: 'id' as const,
   status: 'status' as const,
   username: 'username' as const
}

export const enumProfileConstraint = {
   Profile_pkey: 'Profile_pkey' as const
}

export const enumProfileSelectColumn = {
   accountId: 'accountId' as const,
   description: 'description' as const,
   instagram: 'instagram' as const,
   picture: 'picture' as const,
   twitter: 'twitter' as const,
   website: 'website' as const
}

export const enumProfileUpdateColumn = {
   accountId: 'accountId' as const,
   description: 'description' as const,
   instagram: 'instagram' as const,
   picture: 'picture' as const,
   twitter: 'twitter' as const,
   website: 'website' as const
}

export const enumWalletConstraint = {
   Wallet_pkey: 'Wallet_pkey' as const
}

export const enumWalletSelectColumn = {
   accountId: 'accountId' as const,
   address: 'address' as const,
   network: 'network' as const
}

export const enumWalletUpdateColumn = {
   accountId: 'accountId' as const,
   address: 'address' as const,
   network: 'network' as const
}

export const enumWhitelistEntriesConstraint = {
   WhitelistEntries_pkey: 'WhitelistEntries_pkey' as const
}

export const enumWhitelistEntriesSelectColumn = {
   merkleRoot: 'merkleRoot' as const,
   walletAddress: 'walletAddress' as const,
   whitelistIndex: 'whitelistIndex' as const
}

export const enumWhitelistEntriesUpdateColumn = {
   merkleRoot: 'merkleRoot' as const,
   walletAddress: 'walletAddress' as const,
   whitelistIndex: 'whitelistIndex' as const
}

export const enumWhitelistConstraint = {
   Whitelist_pkey: 'Whitelist_pkey' as const
}

export const enumWhitelistSelectColumn = {
   merkleRoot: 'merkleRoot' as const
}

export const enumWhitelistUpdateColumn = {
   merkleRoot: 'merkleRoot' as const
}

export const enumActionConstraint = {
   PK_2d9db9cf5edfbbae74eb56e3a39: 'PK_2d9db9cf5edfbbae74eb56e3a39' as const
}

export const enumActionSelectColumn = {
   article_id: 'article_id' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   issuer_id: 'issuer_id' as const,
   metadata: 'metadata' as const,
   numeric_value: 'numeric_value' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   op_hash: 'op_hash' as const,
   redeemable_address: 'redeemable_address' as const,
   target_id: 'target_id' as const,
   ticket_id: 'ticket_id' as const,
   token_id: 'token_id' as const,
   type: 'type' as const
}

export const enumActionUpdateColumn = {
   article_id: 'article_id' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   issuer_id: 'issuer_id' as const,
   metadata: 'metadata' as const,
   numeric_value: 'numeric_value' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   op_hash: 'op_hash' as const,
   redeemable_address: 'redeemable_address' as const,
   target_id: 'target_id' as const,
   ticket_id: 'ticket_id' as const,
   token_id: 'token_id' as const,
   type: 'type' as const
}

export const enumArticleConstraint = {
   PK_40808690eb7b915046558c0f81b: 'PK_40808690eb7b915046558c0f81b' as const
}

export const enumArticleGenerativeTokenConstraint = {
   PK_10ab76f2a055c1017ea7371332b: 'PK_10ab76f2a055c1017ea7371332b' as const
}

export const enumArticleGenerativeTokenSelectColumn = {
   article_id: 'article_id' as const,
   generative_token_id: 'generative_token_id' as const,
   line: 'line' as const
}

export const enumArticleGenerativeTokenUpdateColumn = {
   article_id: 'article_id' as const,
   generative_token_id: 'generative_token_id' as const,
   line: 'line' as const
}

export const enumArticleLedgerConstraint = {
   PK_eeea7173c4f29f2f62b92b0efdf: 'PK_eeea7173c4f29f2f62b92b0efdf' as const
}

export const enumArticleLedgerSelectColumn = {
   amount: 'amount' as const,
   article_id: 'article_id' as const,
   owner_id: 'owner_id' as const
}

export const enumArticleLedgerUpdateColumn = {
   amount: 'amount' as const,
   article_id: 'article_id' as const,
   owner_id: 'owner_id' as const
}

export const enumArticleRevisionConstraint = {
   PK_6dccdbb0aa1593c3c560c23c5e9: 'PK_6dccdbb0aa1593c3c560c23c5e9' as const
}

export const enumArticleRevisionSelectColumn = {
   article_id: 'article_id' as const,
   created_at: 'created_at' as const,
   iteration: 'iteration' as const,
   metadata_uri: 'metadata_uri' as const,
   op_hash: 'op_hash' as const
}

export const enumArticleRevisionUpdateColumn = {
   article_id: 'article_id' as const,
   created_at: 'created_at' as const,
   iteration: 'iteration' as const,
   metadata_uri: 'metadata_uri' as const,
   op_hash: 'op_hash' as const
}

export const enumArticleSelectColumn = {
   artifact_uri: 'artifact_uri' as const,
   author_id: 'author_id' as const,
   body: 'body' as const,
   created_at: 'created_at' as const,
   description: 'description' as const,
   display_uri: 'display_uri' as const,
   editions: 'editions' as const,
   flag: 'flag' as const,
   id: 'id' as const,
   language: 'language' as const,
   metadata: 'metadata' as const,
   metadata_locked: 'metadata_locked' as const,
   metadata_uri: 'metadata_uri' as const,
   mint_op_hash: 'mint_op_hash' as const,
   moderation_reason_id: 'moderation_reason_id' as const,
   platforms: 'platforms' as const,
   royalties: 'royalties' as const,
   slug: 'slug' as const,
   tags: 'tags' as const,
   thumbnailMediaId: 'thumbnailMediaId' as const,
   thumbnail_caption: 'thumbnail_caption' as const,
   thumbnail_uri: 'thumbnail_uri' as const,
   title: 'title' as const
}

export const enumArticleSelectColumnArticleAggregateBoolExpBoolAndArgumentsColumns = {
   metadata_locked: 'metadata_locked' as const
}

export const enumArticleSelectColumnArticleAggregateBoolExpBoolOrArgumentsColumns = {
   metadata_locked: 'metadata_locked' as const
}

export const enumArticleUpdateColumn = {
   artifact_uri: 'artifact_uri' as const,
   author_id: 'author_id' as const,
   body: 'body' as const,
   created_at: 'created_at' as const,
   description: 'description' as const,
   display_uri: 'display_uri' as const,
   editions: 'editions' as const,
   flag: 'flag' as const,
   id: 'id' as const,
   language: 'language' as const,
   metadata: 'metadata' as const,
   metadata_locked: 'metadata_locked' as const,
   metadata_uri: 'metadata_uri' as const,
   mint_op_hash: 'mint_op_hash' as const,
   moderation_reason_id: 'moderation_reason_id' as const,
   platforms: 'platforms' as const,
   royalties: 'royalties' as const,
   slug: 'slug' as const,
   tags: 'tags' as const,
   thumbnailMediaId: 'thumbnailMediaId' as const,
   thumbnail_caption: 'thumbnail_caption' as const,
   thumbnail_uri: 'thumbnail_uri' as const,
   title: 'title' as const
}

export const enumAuctionBidConstraint = {
   PK_bb11c1cfa7707fac20673b28ef5: 'PK_bb11c1cfa7707fac20673b28ef5' as const
}

export const enumAuctionBidSelectColumn = {
   auction_id: 'auction_id' as const,
   auction_version: 'auction_version' as const,
   bidder_id: 'bidder_id' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   price: 'price' as const
}

export const enumAuctionBidTableConstraint = {
   PK_57b09fff66c5df1611c7b595a10: 'PK_57b09fff66c5df1611c7b595a10' as const
}

export const enumAuctionBidTableSelectColumn = {
   id: 'id' as const,
   table: 'table' as const
}

export const enumAuctionBidTableUpdateColumn = {
   id: 'id' as const,
   table: 'table' as const
}

export const enumAuctionBidUpdateColumn = {
   auction_id: 'auction_id' as const,
   auction_version: 'auction_version' as const,
   bidder_id: 'bidder_id' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   price: 'price' as const
}

export const enumAuctionConstraint = {
   PK_b15570c9d210ca79ad2c9b4e398: 'PK_b15570c9d210ca79ad2c9b4e398' as const
}

export const enumAuctionSelectColumn = {
   bid_table_id: 'bid_table_id' as const,
   bid_time_increment: 'bid_time_increment' as const,
   cancelled_at: 'cancelled_at' as const,
   created_at: 'created_at' as const,
   ends_at: 'ends_at' as const,
   fulfilled_at: 'fulfilled_at' as const,
   id: 'id' as const,
   min_duration: 'min_duration' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   reserve_price: 'reserve_price' as const,
   seller_id: 'seller_id' as const,
   version: 'version' as const
}

export const enumAuctionUpdateColumn = {
   bid_table_id: 'bid_table_id' as const,
   bid_time_increment: 'bid_time_increment' as const,
   cancelled_at: 'cancelled_at' as const,
   created_at: 'created_at' as const,
   ends_at: 'ends_at' as const,
   fulfilled_at: 'fulfilled_at' as const,
   id: 'id' as const,
   min_duration: 'min_duration' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   reserve_price: 'reserve_price' as const,
   seller_id: 'seller_id' as const,
   version: 'version' as const
}

export const enumCodexConstraint = {
   PK_c3191249ea093f9859ee0d383c1: 'PK_c3191249ea093f9859ee0d383c1' as const
}

export const enumCodexSelectColumn = {
   author_id: 'author_id' as const,
   id: 'id' as const,
   locked: 'locked' as const,
   token_version: 'token_version' as const,
   type: 'type' as const,
   value: 'value' as const
}

export const enumCodexSelectColumnCodexAggregateBoolExpBoolAndArgumentsColumns = {
   locked: 'locked' as const
}

export const enumCodexSelectColumnCodexAggregateBoolExpBoolOrArgumentsColumns = {
   locked: 'locked' as const
}

export const enumCodexUpdateColumn = {
   author_id: 'author_id' as const,
   id: 'id' as const,
   locked: 'locked' as const,
   token_version: 'token_version' as const,
   type: 'type' as const,
   value: 'value' as const
}

export const enumCodexUpdateRequestConstraint = {
   PK_5841bafd692945d7920558190cd: 'PK_5841bafd692945d7920558190cd' as const
}

export const enumCodexUpdateRequestSelectColumn = {
   codex_id: 'codex_id' as const,
   created_at: 'created_at' as const,
   status: 'status' as const,
   token_id: 'token_id' as const,
   token_version: 'token_version' as const
}

export const enumCodexUpdateRequestUpdateColumn = {
   codex_id: 'codex_id' as const,
   created_at: 'created_at' as const,
   status: 'status' as const,
   token_id: 'token_id' as const,
   token_version: 'token_version' as const
}

export const enumCollaborationConstraint = {
   PK_40fb1f0eb56850dff4dbb5b0834: 'PK_40fb1f0eb56850dff4dbb5b0834' as const
}

export const enumCollaborationSelectColumn = {
   collaboration_contract_id: 'collaboration_contract_id' as const,
   collaborator_id: 'collaborator_id' as const
}

export const enumCollaborationUpdateColumn = {
   collaboration_contract_id: 'collaboration_contract_id' as const,
   collaborator_id: 'collaborator_id' as const
}

export const enumCollectionOfferConstraint = {
   PK_a367623ce45dde246af6122e71e: 'PK_a367623ce45dde246af6122e71e' as const
}

export const enumCollectionOfferSelectColumn = {
   amount: 'amount' as const,
   buyer_id: 'buyer_id' as const,
   cancelled_at: 'cancelled_at' as const,
   completed_at: 'completed_at' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   initial_amount: 'initial_amount' as const,
   price: 'price' as const,
   token_id: 'token_id' as const,
   version: 'version' as const
}

export const enumCollectionOfferUpdateColumn = {
   amount: 'amount' as const,
   buyer_id: 'buyer_id' as const,
   cancelled_at: 'cancelled_at' as const,
   completed_at: 'completed_at' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   initial_amount: 'initial_amount' as const,
   price: 'price' as const,
   token_id: 'token_id' as const,
   version: 'version' as const
}

export const enumCursorOrdering = {
   ASC: 'ASC' as const,
   DESC: 'DESC' as const
}

export const enumGenerativeTokenConstraint = {
   IDX_d05e635a41301df6701d7be2d3: 'IDX_d05e635a41301df6701d7be2d3' as const,
   PK_cb76f91024475ec70a1625b1b27: 'PK_cb76f91024475ec70a1625b1b27' as const
}

export const enumGenerativeTokenSelectColumn = {
   author_id: 'author_id' as const,
   balance: 'balance' as const,
   captureMediaId: 'captureMediaId' as const,
   codexId: 'codexId' as const,
   codex_id: 'codex_id' as const,
   created_at: 'created_at' as const,
   display_uri: 'display_uri' as const,
   enabled: 'enabled' as const,
   flag: 'flag' as const,
   generative_uri: 'generative_uri' as const,
   id: 'id' as const,
   input_bytes_size: 'input_bytes_size' as const,
   iterations_count: 'iterations_count' as const,
   labels: 'labels' as const,
   lock_end: 'lock_end' as const,
   lock_price_for_reserves: 'lock_price_for_reserves' as const,
   locked_seconds: 'locked_seconds' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   mint_opens_at: 'mint_opens_at' as const,
   moderation_reason_id: 'moderation_reason_id' as const,
   name: 'name' as const,
   open_editions: 'open_editions' as const,
   open_editions_ends_at: 'open_editions_ends_at' as const,
   original_supply: 'original_supply' as const,
   params_definition: 'params_definition' as const,
   preview_input_bytes: 'preview_input_bytes' as const,
   royalties: 'royalties' as const,
   slug: 'slug' as const,
   supply: 'supply' as const,
   tags: 'tags' as const,
   thumbnail_uri: 'thumbnail_uri' as const,
   updated_at: 'updated_at' as const,
   version: 'version' as const
}

export const enumGenerativeTokenSelectColumnGenerativeTokenAggregateBoolExpBoolAndArgumentsColumns = {
   enabled: 'enabled' as const,
   lock_price_for_reserves: 'lock_price_for_reserves' as const,
   open_editions: 'open_editions' as const
}

export const enumGenerativeTokenSelectColumnGenerativeTokenAggregateBoolExpBoolOrArgumentsColumns = {
   enabled: 'enabled' as const,
   lock_price_for_reserves: 'lock_price_for_reserves' as const,
   open_editions: 'open_editions' as const
}

export const enumGenerativeTokenUpdateColumn = {
   author_id: 'author_id' as const,
   balance: 'balance' as const,
   captureMediaId: 'captureMediaId' as const,
   codexId: 'codexId' as const,
   codex_id: 'codex_id' as const,
   created_at: 'created_at' as const,
   display_uri: 'display_uri' as const,
   enabled: 'enabled' as const,
   flag: 'flag' as const,
   generative_uri: 'generative_uri' as const,
   id: 'id' as const,
   input_bytes_size: 'input_bytes_size' as const,
   iterations_count: 'iterations_count' as const,
   labels: 'labels' as const,
   lock_end: 'lock_end' as const,
   lock_price_for_reserves: 'lock_price_for_reserves' as const,
   locked_seconds: 'locked_seconds' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   mint_opens_at: 'mint_opens_at' as const,
   moderation_reason_id: 'moderation_reason_id' as const,
   name: 'name' as const,
   open_editions: 'open_editions' as const,
   open_editions_ends_at: 'open_editions_ends_at' as const,
   original_supply: 'original_supply' as const,
   params_definition: 'params_definition' as const,
   preview_input_bytes: 'preview_input_bytes' as const,
   royalties: 'royalties' as const,
   slug: 'slug' as const,
   supply: 'supply' as const,
   tags: 'tags' as const,
   thumbnail_uri: 'thumbnail_uri' as const,
   updated_at: 'updated_at' as const,
   version: 'version' as const
}

export const enumGentkAssignConstraint = {
   PK_3d3ff4f388a5b98dda259df6ec2: 'PK_3d3ff4f388a5b98dda259df6ec2' as const
}

export const enumGentkAssignSelectColumn = {
   assigned_at: 'assigned_at' as const,
   attempts: 'attempts' as const,
   created_at: 'created_at' as const,
   gentk_id: 'gentk_id' as const,
   gentk_issuer_version: 'gentk_issuer_version' as const,
   retries: 'retries' as const,
   state: 'state' as const
}

export const enumGentkAssignUpdateColumn = {
   assigned_at: 'assigned_at' as const,
   attempts: 'attempts' as const,
   created_at: 'created_at' as const,
   gentk_id: 'gentk_id' as const,
   gentk_issuer_version: 'gentk_issuer_version' as const,
   retries: 'retries' as const,
   state: 'state' as const
}

export const enumIpfsCidConstraint = {
   PK_9f69103babd8c233ccb8e6312b8: 'PK_9f69103babd8c233ccb8e6312b8' as const
}

export const enumIpfsCidSelectColumn = {
   cid: 'cid' as const
}

export const enumIpfsCidUpdateColumn = {
   cid: 'cid' as const
}

export const enumListingConstraint = {
   PK_de64402045da3d719189d60f30f: 'PK_de64402045da3d719189d60f30f' as const
}

export const enumListingSelectColumn = {
   accepted_at: 'accepted_at' as const,
   accepted_by_id: 'accepted_by_id' as const,
   amount: 'amount' as const,
   article_id: 'article_id' as const,
   cancelled_at: 'cancelled_at' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   issuer_id: 'issuer_id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   price: 'price' as const,
   royalties: 'royalties' as const,
   version: 'version' as const
}

export const enumListingUpdateColumn = {
   accepted_at: 'accepted_at' as const,
   accepted_by_id: 'accepted_by_id' as const,
   amount: 'amount' as const,
   article_id: 'article_id' as const,
   cancelled_at: 'cancelled_at' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   issuer_id: 'issuer_id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   price: 'price' as const,
   royalties: 'royalties' as const,
   version: 'version' as const
}

export const enumMarketStatsConstraint = {
   PK_2e35254ba977f93838b8ac9e9ab: 'PK_2e35254ba977f93838b8ac9e9ab' as const,
   REL_281e5d025f8c10bbd96377a560: 'REL_281e5d025f8c10bbd96377a560' as const,
   REL_b47f2fd7c124043ee7765bef61: 'REL_b47f2fd7c124043ee7765bef61' as const,
   REL_d1cbd8177ef70881960f87474d: 'REL_d1cbd8177ef70881960f87474d' as const
}

export const enumMarketStatsHistoryConstraint = {
   PK_aa12f7e0ffa2992946087c870f9: 'PK_aa12f7e0ffa2992946087c870f9' as const
}

export const enumMarketStatsHistorySelectColumn = {
   average_sale_price: 'average_sale_price' as const,
   floor: 'floor' as const,
   floorListingId: 'floorListingId' as const,
   floorListingVersion: 'floorListingVersion' as const,
   floor_listing_id: 'floor_listing_id' as const,
   floor_listing_version: 'floor_listing_version' as const,
   from: 'from' as const,
   highestSoldListingId: 'highestSoldListingId' as const,
   highestSoldListingVersion: 'highestSoldListingVersion' as const,
   highest_collection_offer: 'highest_collection_offer' as const,
   highest_sold: 'highest_sold' as const,
   highest_sold_listing_id: 'highest_sold_listing_id' as const,
   highest_sold_listing_version: 'highest_sold_listing_version' as const,
   id: 'id' as const,
   listed: 'listed' as const,
   longest_average_held_in_seconds: 'longest_average_held_in_seconds' as const,
   lowestSoldListingId: 'lowestSoldListingId' as const,
   lowestSoldListingVersion: 'lowestSoldListingVersion' as const,
   lowest_sold: 'lowest_sold' as const,
   lowest_sold_listing_id: 'lowest_sold_listing_id' as const,
   lowest_sold_listing_version: 'lowest_sold_listing_version' as const,
   median: 'median' as const,
   percent_listed: 'percent_listed' as const,
   percent_never_listed: 'percent_never_listed' as const,
   prim_volume_nb: 'prim_volume_nb' as const,
   prim_volume_tz: 'prim_volume_tz' as const,
   sec_volume_nb: 'sec_volume_nb' as const,
   sec_volume_tz: 'sec_volume_tz' as const,
   to: 'to' as const,
   token_id: 'token_id' as const
}

export const enumMarketStatsHistoryUpdateColumn = {
   average_sale_price: 'average_sale_price' as const,
   floor: 'floor' as const,
   floorListingId: 'floorListingId' as const,
   floorListingVersion: 'floorListingVersion' as const,
   floor_listing_id: 'floor_listing_id' as const,
   floor_listing_version: 'floor_listing_version' as const,
   from: 'from' as const,
   highestSoldListingId: 'highestSoldListingId' as const,
   highestSoldListingVersion: 'highestSoldListingVersion' as const,
   highest_collection_offer: 'highest_collection_offer' as const,
   highest_sold: 'highest_sold' as const,
   highest_sold_listing_id: 'highest_sold_listing_id' as const,
   highest_sold_listing_version: 'highest_sold_listing_version' as const,
   id: 'id' as const,
   listed: 'listed' as const,
   longest_average_held_in_seconds: 'longest_average_held_in_seconds' as const,
   lowestSoldListingId: 'lowestSoldListingId' as const,
   lowestSoldListingVersion: 'lowestSoldListingVersion' as const,
   lowest_sold: 'lowest_sold' as const,
   lowest_sold_listing_id: 'lowest_sold_listing_id' as const,
   lowest_sold_listing_version: 'lowest_sold_listing_version' as const,
   median: 'median' as const,
   percent_listed: 'percent_listed' as const,
   percent_never_listed: 'percent_never_listed' as const,
   prim_volume_nb: 'prim_volume_nb' as const,
   prim_volume_tz: 'prim_volume_tz' as const,
   sec_volume_nb: 'sec_volume_nb' as const,
   sec_volume_tz: 'sec_volume_tz' as const,
   to: 'to' as const,
   token_id: 'token_id' as const
}

export const enumMarketStatsSelectColumn = {
   average_sale_price: 'average_sale_price' as const,
   floor: 'floor' as const,
   floor7d: 'floor7d' as const,
   floor24: 'floor24' as const,
   floor30d: 'floor30d' as const,
   floorListingId: 'floorListingId' as const,
   floorListingVersion: 'floorListingVersion' as const,
   floor_listing_id: 'floor_listing_id' as const,
   floor_listing_version: 'floor_listing_version' as const,
   from: 'from' as const,
   highestSoldListingId: 'highestSoldListingId' as const,
   highestSoldListingVersion: 'highestSoldListingVersion' as const,
   highest_collection_offer: 'highest_collection_offer' as const,
   highest_sold: 'highest_sold' as const,
   highest_sold7d: 'highest_sold7d' as const,
   highest_sold24: 'highest_sold24' as const,
   highest_sold30d: 'highest_sold30d' as const,
   highest_sold_listing_id: 'highest_sold_listing_id' as const,
   highest_sold_listing_version: 'highest_sold_listing_version' as const,
   listed: 'listed' as const,
   longest_average_held_in_seconds: 'longest_average_held_in_seconds' as const,
   lowestSoldListingId: 'lowestSoldListingId' as const,
   lowestSoldListingVersion: 'lowestSoldListingVersion' as const,
   lowest_sold: 'lowest_sold' as const,
   lowest_sold7d: 'lowest_sold7d' as const,
   lowest_sold24: 'lowest_sold24' as const,
   lowest_sold30d: 'lowest_sold30d' as const,
   lowest_sold_listing_id: 'lowest_sold_listing_id' as const,
   lowest_sold_listing_version: 'lowest_sold_listing_version' as const,
   median: 'median' as const,
   percent_listed: 'percent_listed' as const,
   percent_never_listed: 'percent_never_listed' as const,
   prim_volume_nb: 'prim_volume_nb' as const,
   prim_volume_tz: 'prim_volume_tz' as const,
   sec_volume_nb: 'sec_volume_nb' as const,
   sec_volume_nb7d: 'sec_volume_nb7d' as const,
   sec_volume_nb24: 'sec_volume_nb24' as const,
   sec_volume_nb30d: 'sec_volume_nb30d' as const,
   sec_volume_tz: 'sec_volume_tz' as const,
   sec_volume_tz7d: 'sec_volume_tz7d' as const,
   sec_volume_tz24: 'sec_volume_tz24' as const,
   sec_volume_tz30d: 'sec_volume_tz30d' as const,
   to: 'to' as const,
   token_id: 'token_id' as const
}

export const enumMarketStatsUpdateColumn = {
   average_sale_price: 'average_sale_price' as const,
   floor: 'floor' as const,
   floor7d: 'floor7d' as const,
   floor24: 'floor24' as const,
   floor30d: 'floor30d' as const,
   floorListingId: 'floorListingId' as const,
   floorListingVersion: 'floorListingVersion' as const,
   floor_listing_id: 'floor_listing_id' as const,
   floor_listing_version: 'floor_listing_version' as const,
   from: 'from' as const,
   highestSoldListingId: 'highestSoldListingId' as const,
   highestSoldListingVersion: 'highestSoldListingVersion' as const,
   highest_collection_offer: 'highest_collection_offer' as const,
   highest_sold: 'highest_sold' as const,
   highest_sold7d: 'highest_sold7d' as const,
   highest_sold24: 'highest_sold24' as const,
   highest_sold30d: 'highest_sold30d' as const,
   highest_sold_listing_id: 'highest_sold_listing_id' as const,
   highest_sold_listing_version: 'highest_sold_listing_version' as const,
   listed: 'listed' as const,
   longest_average_held_in_seconds: 'longest_average_held_in_seconds' as const,
   lowestSoldListingId: 'lowestSoldListingId' as const,
   lowestSoldListingVersion: 'lowestSoldListingVersion' as const,
   lowest_sold: 'lowest_sold' as const,
   lowest_sold7d: 'lowest_sold7d' as const,
   lowest_sold24: 'lowest_sold24' as const,
   lowest_sold30d: 'lowest_sold30d' as const,
   lowest_sold_listing_id: 'lowest_sold_listing_id' as const,
   lowest_sold_listing_version: 'lowest_sold_listing_version' as const,
   median: 'median' as const,
   percent_listed: 'percent_listed' as const,
   percent_never_listed: 'percent_never_listed' as const,
   prim_volume_nb: 'prim_volume_nb' as const,
   prim_volume_tz: 'prim_volume_tz' as const,
   sec_volume_nb: 'sec_volume_nb' as const,
   sec_volume_nb7d: 'sec_volume_nb7d' as const,
   sec_volume_nb24: 'sec_volume_nb24' as const,
   sec_volume_nb30d: 'sec_volume_nb30d' as const,
   sec_volume_tz: 'sec_volume_tz' as const,
   sec_volume_tz7d: 'sec_volume_tz7d' as const,
   sec_volume_tz24: 'sec_volume_tz24' as const,
   sec_volume_tz30d: 'sec_volume_tz30d' as const,
   to: 'to' as const,
   token_id: 'token_id' as const
}

export const enumMediaImageConstraint = {
   PK_6b20376a151c97894a44a572715: 'PK_6b20376a151c97894a44a572715' as const
}

export const enumMediaImageSelectColumn = {
   cid: 'cid' as const,
   height: 'height' as const,
   metadata: 'metadata' as const,
   mime_type: 'mime_type' as const,
   placeholder: 'placeholder' as const,
   process_counters: 'process_counters' as const,
   processed: 'processed' as const,
   width: 'width' as const
}

export const enumMediaImageUpdateColumn = {
   cid: 'cid' as const,
   height: 'height' as const,
   metadata: 'metadata' as const,
   mime_type: 'mime_type' as const,
   placeholder: 'placeholder' as const,
   process_counters: 'process_counters' as const,
   processed: 'processed' as const,
   width: 'width' as const
}

export const enumMintTicketConstraint = {
   PK_703bfcfef7f2257bf4815fb59d1: 'PK_703bfcfef7f2257bf4815fb59d1' as const
}

export const enumMintTicketSelectColumn = {
   created_at: 'created_at' as const,
   id: 'id' as const,
   owner_id: 'owner_id' as const,
   price: 'price' as const,
   taxation_locked: 'taxation_locked' as const,
   taxation_paid_until: 'taxation_paid_until' as const,
   taxation_start: 'taxation_start' as const,
   token_id: 'token_id' as const
}

export const enumMintTicketSettingsConstraint = {
   PK_3d9d47cf1717a7d63bdd4d0c6ab: 'PK_3d9d47cf1717a7d63bdd4d0c6ab' as const
}

export const enumMintTicketSettingsSelectColumn = {
   captureMediaId: 'captureMediaId' as const,
   gracing_period: 'gracing_period' as const,
   id: 'id' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   token_id: 'token_id' as const
}

export const enumMintTicketSettingsUpdateColumn = {
   captureMediaId: 'captureMediaId' as const,
   gracing_period: 'gracing_period' as const,
   id: 'id' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   token_id: 'token_id' as const
}

export const enumMintTicketUpdateColumn = {
   created_at: 'created_at' as const,
   id: 'id' as const,
   owner_id: 'owner_id' as const,
   price: 'price' as const,
   taxation_locked: 'taxation_locked' as const,
   taxation_paid_until: 'taxation_paid_until' as const,
   taxation_start: 'taxation_start' as const,
   token_id: 'token_id' as const
}

export const enumModerationReasonConstraint = {
   PK_fdcfcb2db6d8f8d793f0a26a87b: 'PK_fdcfcb2db6d8f8d793f0a26a87b' as const
}

export const enumModerationReasonSelectColumn = {
   id: 'id' as const,
   reason: 'reason' as const
}

export const enumModerationReasonUpdateColumn = {
   id: 'id' as const,
   reason: 'reason' as const
}

export const enumObjktConstraint = {
   IDX_75a2e34e67529e5d0c2758d4d2: 'IDX_75a2e34e67529e5d0c2758d4d2' as const,
   PK_21ce4aa2c6889add2f734e70372: 'PK_21ce4aa2c6889add2f734e70372' as const
}

export const enumObjktSelectColumn = {
   assigned: 'assigned' as const,
   assigned_at: 'assigned_at' as const,
   captureMediaId: 'captureMediaId' as const,
   created_at: 'created_at' as const,
   display_uri: 'display_uri' as const,
   duplicate: 'duplicate' as const,
   features: 'features' as const,
   generation_hash: 'generation_hash' as const,
   id: 'id' as const,
   input_bytes: 'input_bytes' as const,
   issuer_id: 'issuer_id' as const,
   issuer_version: 'issuer_version' as const,
   iteration: 'iteration' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   minter_id: 'minter_id' as const,
   name: 'name' as const,
   owner_id: 'owner_id' as const,
   rarity: 'rarity' as const,
   royalties: 'royalties' as const,
   slug: 'slug' as const,
   tags: 'tags' as const,
   thumbnail_uri: 'thumbnail_uri' as const,
   updated_at: 'updated_at' as const,
   version: 'version' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpAvgArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpBoolAndArgumentsColumns = {
   assigned: 'assigned' as const,
   duplicate: 'duplicate' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpBoolOrArgumentsColumns = {
   assigned: 'assigned' as const,
   duplicate: 'duplicate' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpCorrArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpCovarSampArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpMaxArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpMinArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpStddevSampArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpSumArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktSelectColumnObjktAggregateBoolExpVarSampArgumentsColumns = {
   rarity: 'rarity' as const
}

export const enumObjktUpdateColumn = {
   assigned: 'assigned' as const,
   assigned_at: 'assigned_at' as const,
   captureMediaId: 'captureMediaId' as const,
   created_at: 'created_at' as const,
   display_uri: 'display_uri' as const,
   duplicate: 'duplicate' as const,
   features: 'features' as const,
   generation_hash: 'generation_hash' as const,
   id: 'id' as const,
   input_bytes: 'input_bytes' as const,
   issuer_id: 'issuer_id' as const,
   issuer_version: 'issuer_version' as const,
   iteration: 'iteration' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   minter_id: 'minter_id' as const,
   name: 'name' as const,
   owner_id: 'owner_id' as const,
   rarity: 'rarity' as const,
   royalties: 'royalties' as const,
   slug: 'slug' as const,
   tags: 'tags' as const,
   thumbnail_uri: 'thumbnail_uri' as const,
   updated_at: 'updated_at' as const,
   version: 'version' as const
}

export const enumOfferConstraint = {
   PK_128207054b197333b6f58dd3581: 'PK_128207054b197333b6f58dd3581' as const
}

export const enumOfferSelectColumn = {
   accepted_at: 'accepted_at' as const,
   buyer_id: 'buyer_id' as const,
   cancelled_at: 'cancelled_at' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   price: 'price' as const,
   version: 'version' as const
}

export const enumOfferUpdateColumn = {
   accepted_at: 'accepted_at' as const,
   buyer_id: 'buyer_id' as const,
   cancelled_at: 'cancelled_at' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   price: 'price' as const,
   version: 'version' as const
}

export const enumOrderBy = {
   asc: 'asc' as const,
   asc_nulls_first: 'asc_nulls_first' as const,
   asc_nulls_last: 'asc_nulls_last' as const,
   desc: 'desc' as const,
   desc_nulls_first: 'desc_nulls_first' as const,
   desc_nulls_last: 'desc_nulls_last' as const
}

export const enumPricingDutchAuctionConstraint = {
   PK_6c70e76261e8fb00a02d0628d12: 'PK_6c70e76261e8fb00a02d0628d12' as const
}

export const enumPricingDutchAuctionSelectColumn = {
   decrement_duration: 'decrement_duration' as const,
   final_price: 'final_price' as const,
   id: 'id' as const,
   levels: 'levels' as const,
   opens_at: 'opens_at' as const,
   resting_price: 'resting_price' as const,
   token_id: 'token_id' as const
}

export const enumPricingDutchAuctionUpdateColumn = {
   decrement_duration: 'decrement_duration' as const,
   final_price: 'final_price' as const,
   id: 'id' as const,
   levels: 'levels' as const,
   opens_at: 'opens_at' as const,
   resting_price: 'resting_price' as const,
   token_id: 'token_id' as const
}

export const enumPricingFixedConstraint = {
   PK_ae46385ad088e6c1de1850c3d80: 'PK_ae46385ad088e6c1de1850c3d80' as const
}

export const enumPricingFixedSelectColumn = {
   id: 'id' as const,
   opens_at: 'opens_at' as const,
   price: 'price' as const,
   token_id: 'token_id' as const
}

export const enumPricingFixedUpdateColumn = {
   id: 'id' as const,
   opens_at: 'opens_at' as const,
   price: 'price' as const,
   token_id: 'token_id' as const
}

export const enumRedeemableConstraint = {
   PK_9cdc4a659b978ba30e26444f6ff: 'PK_9cdc4a659b978ba30e26444f6ff' as const
}

export const enumRedeemableSelectColumn = {
   address: 'address' as const,
   base_amount: 'base_amount' as const,
   created_at: 'created_at' as const,
   fa2: 'fa2' as const,
   max_consumptions_per_token: 'max_consumptions_per_token' as const,
   token_id: 'token_id' as const
}

export const enumRedeemableUpdateColumn = {
   address: 'address' as const,
   base_amount: 'base_amount' as const,
   created_at: 'created_at' as const,
   fa2: 'fa2' as const,
   max_consumptions_per_token: 'max_consumptions_per_token' as const,
   token_id: 'token_id' as const
}

export const enumRedemptionConstraint = {
   PK_e96b16cd3061a61305951bc95a3: 'PK_e96b16cd3061a61305951bc95a3' as const
}

export const enumRedemptionSelectColumn = {
   amount: 'amount' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   redeemable_address: 'redeemable_address' as const,
   redeemer_id: 'redeemer_id' as const
}

export const enumRedemptionUpdateColumn = {
   amount: 'amount' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   redeemable_address: 'redeemable_address' as const,
   redeemer_id: 'redeemer_id' as const
}

export const enumReportConstraint = {
   PK_99e4d0bea58cba73c57f935a546: 'PK_99e4d0bea58cba73c57f935a546' as const
}

export const enumReportSelectColumn = {
   created_at: 'created_at' as const,
   id: 'id' as const,
   reason_id: 'reason_id' as const,
   token_id: 'token_id' as const,
   user_id: 'user_id' as const
}

export const enumReportUpdateColumn = {
   created_at: 'created_at' as const,
   id: 'id' as const,
   reason_id: 'reason_id' as const,
   token_id: 'token_id' as const,
   user_id: 'user_id' as const
}

export const enumReserveConstraint = {
   PK_619d1e12dbedbe126620cac8240: 'PK_619d1e12dbedbe126620cac8240' as const
}

export const enumReserveSelectColumn = {
   amount: 'amount' as const,
   data: 'data' as const,
   id: 'id' as const,
   method: 'method' as const,
   token_id: 'token_id' as const
}

export const enumReserveUpdateColumn = {
   amount: 'amount' as const,
   data: 'data' as const,
   id: 'id' as const,
   method: 'method' as const,
   token_id: 'token_id' as const
}

export const enumSplitConstraint = {
   PK_a656ea46749d1567ca7e7d5923a: 'PK_a656ea46749d1567ca7e7d5923a' as const
}

export const enumSplitSelectColumn = {
   article_id: 'article_id' as const,
   generative_token_primary_id: 'generative_token_primary_id' as const,
   generative_token_secondary_id: 'generative_token_secondary_id' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   pct: 'pct' as const,
   redeemable_address: 'redeemable_address' as const,
   user_id: 'user_id' as const
}

export const enumSplitUpdateColumn = {
   article_id: 'article_id' as const,
   generative_token_primary_id: 'generative_token_primary_id' as const,
   generative_token_secondary_id: 'generative_token_secondary_id' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   pct: 'pct' as const,
   redeemable_address: 'redeemable_address' as const,
   user_id: 'user_id' as const
}

export const enumTransactionConstraint = {
   PK_89eadb93a89810556e1cbcd6ab9: 'PK_89eadb93a89810556e1cbcd6ab9' as const
}

export const enumTransactionSelectColumn = {
   article_id: 'article_id' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   op_hash: 'op_hash' as const,
   price: 'price' as const,
   ticket_id: 'ticket_id' as const,
   token_id: 'token_id' as const,
   type: 'type' as const
}

export const enumTransactionUpdateColumn = {
   article_id: 'article_id' as const,
   created_at: 'created_at' as const,
   id: 'id' as const,
   objkt_id: 'objkt_id' as const,
   objkt_issuer_version: 'objkt_issuer_version' as const,
   op_hash: 'op_hash' as const,
   price: 'price' as const,
   ticket_id: 'ticket_id' as const,
   token_id: 'token_id' as const,
   type: 'type' as const
}

export const enumUserConstraint = {
   PK_cace4a159ff9f2512dd42373760: 'PK_cace4a159ff9f2512dd42373760' as const
}

export const enumUserSelectColumn = {
   authorizations: 'authorizations' as const,
   avatarMediaId: 'avatarMediaId' as const,
   avatar_uri: 'avatar_uri' as const,
   created_at: 'created_at' as const,
   description: 'description' as const,
   flag: 'flag' as const,
   id: 'id' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   moderation_reason_id: 'moderation_reason_id' as const,
   name: 'name' as const,
   type: 'type' as const,
   updated_at: 'updated_at' as const
}

export const enumUserStatsConstraint = {
   PK_0e0da843088caf61925ded4434e: 'PK_0e0da843088caf61925ded4434e' as const
}

export const enumUserStatsSelectColumn = {
   from: 'from' as const,
   prim_volume_nb: 'prim_volume_nb' as const,
   prim_volume_nb7d: 'prim_volume_nb7d' as const,
   prim_volume_nb24: 'prim_volume_nb24' as const,
   prim_volume_nb30d: 'prim_volume_nb30d' as const,
   prim_volume_tz: 'prim_volume_tz' as const,
   prim_volume_tz7d: 'prim_volume_tz7d' as const,
   prim_volume_tz24: 'prim_volume_tz24' as const,
   prim_volume_tz30d: 'prim_volume_tz30d' as const,
   sec_volume_nb: 'sec_volume_nb' as const,
   sec_volume_nb7d: 'sec_volume_nb7d' as const,
   sec_volume_nb24: 'sec_volume_nb24' as const,
   sec_volume_nb30d: 'sec_volume_nb30d' as const,
   sec_volume_tz: 'sec_volume_tz' as const,
   sec_volume_tz7d: 'sec_volume_tz7d' as const,
   sec_volume_tz24: 'sec_volume_tz24' as const,
   sec_volume_tz30d: 'sec_volume_tz30d' as const,
   to: 'to' as const,
   user_id: 'user_id' as const
}

export const enumUserStatsUpdateColumn = {
   from: 'from' as const,
   prim_volume_nb: 'prim_volume_nb' as const,
   prim_volume_nb7d: 'prim_volume_nb7d' as const,
   prim_volume_nb24: 'prim_volume_nb24' as const,
   prim_volume_nb30d: 'prim_volume_nb30d' as const,
   prim_volume_tz: 'prim_volume_tz' as const,
   prim_volume_tz7d: 'prim_volume_tz7d' as const,
   prim_volume_tz24: 'prim_volume_tz24' as const,
   prim_volume_tz30d: 'prim_volume_tz30d' as const,
   sec_volume_nb: 'sec_volume_nb' as const,
   sec_volume_nb7d: 'sec_volume_nb7d' as const,
   sec_volume_nb24: 'sec_volume_nb24' as const,
   sec_volume_nb30d: 'sec_volume_nb30d' as const,
   sec_volume_tz: 'sec_volume_tz' as const,
   sec_volume_tz7d: 'sec_volume_tz7d' as const,
   sec_volume_tz24: 'sec_volume_tz24' as const,
   sec_volume_tz30d: 'sec_volume_tz30d' as const,
   to: 'to' as const,
   user_id: 'user_id' as const
}

export const enumUserUpdateColumn = {
   authorizations: 'authorizations' as const,
   avatarMediaId: 'avatarMediaId' as const,
   avatar_uri: 'avatar_uri' as const,
   created_at: 'created_at' as const,
   description: 'description' as const,
   flag: 'flag' as const,
   id: 'id' as const,
   metadata: 'metadata' as const,
   metadata_uri: 'metadata_uri' as const,
   moderation_reason_id: 'moderation_reason_id' as const,
   name: 'name' as const,
   type: 'type' as const,
   updated_at: 'updated_at' as const
}
