schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """refresh the cache entry"""
  refresh: Boolean! = false

  """measured in seconds"""
  ttl: Int! = 60
) on QUERY

"""
columns and relationships of "Account"
"""
type Account {
  """An array relationship"""
  authoredProjects(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """An array relationship"""
  collaboratedProjects(
    """distinct select on columns"""
    distinct_on: [ProjectCollaborator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectCollaborator_order_by!]

    """filter the rows returned"""
    where: ProjectCollaborator_bool_exp
  ): [ProjectCollaborator!]!

  """An array relationship"""
  curatedProjects(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!
  id: uuid!

  """An object relationship"""
  mainWallet: Wallet!

  """An object relationship"""
  profile: Profile

  """An array relationship"""
  roles(
    """distinct select on columns"""
    distinct_on: [AccountsRoles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [AccountsRoles_order_by!]

    """filter the rows returned"""
    where: AccountsRoles_bool_exp
  ): [AccountsRoles!]!
  status: AccountStatus!
  username: String!

  """An array relationship"""
  wallets(
    """distinct select on columns"""
    distinct_on: [Wallet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Wallet_order_by!]

    """filter the rows returned"""
    where: Wallet_bool_exp
  ): [Wallet!]!
}

"""
columns and relationships of "AccountRole"
"""
type AccountRole {
  comment: String
  value: String!
}

"""
Boolean expression to filter rows from the table "AccountRole". All fields are combined with a logical 'AND'.
"""
input AccountRole_bool_exp {
  _and: [AccountRole_bool_exp!]
  _not: AccountRole_bool_exp
  _or: [AccountRole_bool_exp!]
  comment: String_comparison_exp
  value: String_comparison_exp
}

enum AccountRole_enum {
  """
  curator vested by the fxhash team, with access to special curator-dedicated features.
  """
  VERIFIED_CURATOR
}

"""
Boolean expression to compare columns of type "AccountRole_enum". All fields are combined with logical 'AND'.
"""
input AccountRole_enum_comparison_exp {
  _eq: AccountRole_enum
  _in: [AccountRole_enum!]
  _is_null: Boolean
  _neq: AccountRole_enum
  _nin: [AccountRole_enum!]
}

"""Ordering options when selecting data from "AccountRole"."""
input AccountRole_order_by {
  comment: order_by
  value: order_by
}

"""
select columns of table "AccountRole"
"""
enum AccountRole_select_column {
  """column name"""
  comment

  """column name"""
  value
}

"""
Streaming cursor of the table "AccountRole"
"""
input AccountRole_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: AccountRole_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input AccountRole_stream_cursor_value_input {
  comment: String
  value: String
}

scalar AccountStatus

"""
Boolean expression to compare columns of type "AccountStatus". All fields are combined with logical 'AND'.
"""
input AccountStatus_comparison_exp {
  _eq: AccountStatus
  _gt: AccountStatus
  _gte: AccountStatus
  _in: [AccountStatus!]
  _is_null: Boolean
  _lt: AccountStatus
  _lte: AccountStatus
  _neq: AccountStatus
  _nin: [AccountStatus!]
}

"""
aggregated selection of "Account"
"""
type Account_aggregate {
  aggregate: Account_aggregate_fields
  nodes: [Account!]!
}

"""
aggregate fields of "Account"
"""
type Account_aggregate_fields {
  count(columns: [Account_select_column!], distinct: Boolean): Int!
  max: Account_max_fields
  min: Account_min_fields
}

"""
Boolean expression to filter rows from the table "Account". All fields are combined with a logical 'AND'.
"""
input Account_bool_exp {
  _and: [Account_bool_exp!]
  _not: Account_bool_exp
  _or: [Account_bool_exp!]
  authoredProjects: Project_bool_exp
  collaboratedProjects: ProjectCollaborator_bool_exp
  curatedProjects: Project_bool_exp
  id: uuid_comparison_exp
  mainWallet: Wallet_bool_exp
  profile: Profile_bool_exp
  roles: AccountsRoles_bool_exp
  status: AccountStatus_comparison_exp
  username: String_comparison_exp
  wallets: Wallet_bool_exp
}

"""aggregate max on columns"""
type Account_max_fields {
  id: uuid
  status: AccountStatus
  username: String
}

"""aggregate min on columns"""
type Account_min_fields {
  id: uuid
  status: AccountStatus
  username: String
}

"""
response of any mutation on the table "Account"
"""
type Account_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Account!]!
}

"""Ordering options when selecting data from "Account"."""
input Account_order_by {
  authoredProjects_aggregate: Project_aggregate_order_by
  collaboratedProjects_aggregate: ProjectCollaborator_aggregate_order_by
  curatedProjects_aggregate: Project_aggregate_order_by
  id: order_by
  mainWallet: Wallet_order_by
  profile: Profile_order_by
  roles_aggregate: AccountsRoles_aggregate_order_by
  status: order_by
  username: order_by
  wallets_aggregate: Wallet_aggregate_order_by
}

"""primary key columns input for table: Account"""
input Account_pk_columns_input {
  id: uuid!
}

"""
select columns of table "Account"
"""
enum Account_select_column {
  """column name"""
  id

  """column name"""
  status

  """column name"""
  username
}

"""
input type for updating data in table "Account"
"""
input Account_set_input {
  username: String
}

"""
Streaming cursor of the table "Account"
"""
input Account_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Account_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Account_stream_cursor_value_input {
  id: uuid
  status: AccountStatus
  username: String
}

input Account_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Account_set_input

  """filter the rows which have to be updated"""
  where: Account_bool_exp!
}

"""
columns and relationships of "AccountsRoles"
"""
type AccountsRoles {
  """An object relationship"""
  account: Account!
  accountId: uuid!

  """An object relationship"""
  role: AccountRole!
  roleValue: AccountRole_enum!
}

"""
order by aggregate values of table "AccountsRoles"
"""
input AccountsRoles_aggregate_order_by {
  count: order_by
  max: AccountsRoles_max_order_by
  min: AccountsRoles_min_order_by
}

"""
Boolean expression to filter rows from the table "AccountsRoles". All fields are combined with a logical 'AND'.
"""
input AccountsRoles_bool_exp {
  _and: [AccountsRoles_bool_exp!]
  _not: AccountsRoles_bool_exp
  _or: [AccountsRoles_bool_exp!]
  account: Account_bool_exp
  accountId: uuid_comparison_exp
  role: AccountRole_bool_exp
  roleValue: AccountRole_enum_comparison_exp
}

"""
order by max() on columns of table "AccountsRoles"
"""
input AccountsRoles_max_order_by {
  accountId: order_by
}

"""
order by min() on columns of table "AccountsRoles"
"""
input AccountsRoles_min_order_by {
  accountId: order_by
}

"""Ordering options when selecting data from "AccountsRoles"."""
input AccountsRoles_order_by {
  account: Account_order_by
  accountId: order_by
  role: AccountRole_order_by
  roleValue: order_by
}

"""
select columns of table "AccountsRoles"
"""
enum AccountsRoles_select_column {
  """column name"""
  accountId

  """column name"""
  roleValue
}

"""
Streaming cursor of the table "AccountsRoles"
"""
input AccountsRoles_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: AccountsRoles_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input AccountsRoles_stream_cursor_value_input {
  accountId: uuid
  roleValue: AccountRole_enum
}

input AuthenticationInput {
  id: String!
  publicKey: String
  signature: String!
}

type AuthenticationResult {
  accessToken: String!
  refreshToken: String!
}

input AuthenticationWeb3AuthInput {
  compressedPublicKey: String!
  token: String!
}

scalar BlockchainNetwork

"""
Boolean expression to compare columns of type "BlockchainNetwork". All fields are combined with logical 'AND'.
"""
input BlockchainNetwork_comparison_exp {
  _eq: BlockchainNetwork
  _gt: BlockchainNetwork
  _gte: BlockchainNetwork
  _in: [BlockchainNetwork!]
  _is_null: Boolean
  _lt: BlockchainNetwork
  _lte: BlockchainNetwork
  _neq: BlockchainNetwork
  _nin: [BlockchainNetwork!]
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

input ChallengeInput {
  address: String!
  chain: String!
}

type ChallengeResult {
  id: String!
  text: String!
}

"""
columns and relationships of "Consumable"
"""
type Consumable {
  active: Boolean!
  address: String!
  amount: bigint!
  createdAt: timestamp!
  description: String!
  expiresAt: timestamp
  fa2: String!
  maxConsumptions: Int!

  """An array relationship"""
  medias(
    """distinct select on columns"""
    distinct_on: [MediasOnConsumables_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MediasOnConsumables_order_by!]

    """filter the rows returned"""
    where: MediasOnConsumables_bool_exp
  ): [MediasOnConsumables!]!
  name: String!
  options(
    """JSON select path"""
    path: String
  ): jsonb!
  projectId: String!
  publicDefinition(
    """JSON select path"""
    path: String
  ): jsonb!
  splits(
    """JSON select path"""
    path: String
  ): jsonb!
  successInfos: String!
}

"""
Boolean expression to filter rows from the table "Consumable". All fields are combined with a logical 'AND'.
"""
input Consumable_bool_exp {
  _and: [Consumable_bool_exp!]
  _not: Consumable_bool_exp
  _or: [Consumable_bool_exp!]
  active: Boolean_comparison_exp
  address: String_comparison_exp
  amount: bigint_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  expiresAt: timestamp_comparison_exp
  fa2: String_comparison_exp
  maxConsumptions: Int_comparison_exp
  medias: MediasOnConsumables_bool_exp
  name: String_comparison_exp
  options: jsonb_comparison_exp
  projectId: String_comparison_exp
  publicDefinition: jsonb_comparison_exp
  splits: jsonb_comparison_exp
  successInfos: String_comparison_exp
}

"""Ordering options when selecting data from "Consumable"."""
input Consumable_order_by {
  active: order_by
  address: order_by
  amount: order_by
  createdAt: order_by
  description: order_by
  expiresAt: order_by
  fa2: order_by
  maxConsumptions: order_by
  medias_aggregate: MediasOnConsumables_aggregate_order_by
  name: order_by
  options: order_by
  projectId: order_by
  publicDefinition: order_by
  splits: order_by
  successInfos: order_by
}

"""
select columns of table "Consumable"
"""
enum Consumable_select_column {
  """column name"""
  active

  """column name"""
  address

  """column name"""
  amount

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  expiresAt

  """column name"""
  fa2

  """column name"""
  maxConsumptions

  """column name"""
  name

  """column name"""
  options

  """column name"""
  projectId

  """column name"""
  publicDefinition

  """column name"""
  splits

  """column name"""
  successInfos
}

"""
Streaming cursor of the table "Consumable"
"""
input Consumable_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Consumable_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Consumable_stream_cursor_value_input {
  active: Boolean
  address: String
  amount: bigint
  createdAt: timestamp
  description: String
  expiresAt: timestamp
  fa2: String
  maxConsumptions: Int
  name: String
  options: jsonb
  projectId: String
  publicDefinition: jsonb
  splits: jsonb
  successInfos: String
}

enum EWalletOperatorState {
  AVAILABLE
  EMPTY
  INITIALIZING
  PREPARING
  WAITING_CONFIRMATION
}

type EstimateEvmTransactionError {
  message: String!
  revertReason: String
}

input EstimateEvmTransactionInput {
  chainId: String!
  transactions: [EvmTransactionInput!]!
}

type EstimateEvmTransactionOutput {
  changes: [EvmTransactionChanges!]!
  error: EstimateEvmTransactionError
  gasUsed: String
}

"""
columns and relationships of "Event"
"""
type Event {
  """An object relationship"""
  Featured: Featured
  availabilities: [EventAvailability!]
  createdAt: timestamp!
  description: String!
  endsAt: timestamp!
  freeLiveMinting: Boolean!

  """An object relationship"""
  headerMedia: Media
  headerMediaId: uuid
  id: String!
  imageUrl: String
  labelIds: [Int!]
  location: String
  mintPageUrl: String!

  """An array relationship"""
  mintPassGroups(
    """distinct select on columns"""
    distinct_on: [MintPassGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MintPassGroup_order_by!]

    """filter the rows returned"""
    where: MintPassGroup_bool_exp
  ): [MintPassGroup!]!
  name: String!

  """An object relationship"""
  onboarding: EventOnboarding

  """An object relationship"""
  partnerMedia: Media
  partnerMediaId: uuid
  projectIds: [String!]
  startsAt: timestamp!
  status: EventStatus!

  """An object relationship"""
  thumbnailMedia: Media
  thumbnailMediaId: uuid
  updatedAt: timestamp!
}

scalar EventAvailability

"""
Boolean expression to compare columns of type "EventAvailability". All fields are combined with logical 'AND'.
"""
input EventAvailability_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [EventAvailability!]

  """does the array contain the given value"""
  _contains: [EventAvailability!]
  _eq: [EventAvailability!]
  _gt: [EventAvailability!]
  _gte: [EventAvailability!]
  _in: [[EventAvailability!]!]
  _is_null: Boolean
  _lt: [EventAvailability!]
  _lte: [EventAvailability!]
  _neq: [EventAvailability!]
  _nin: [[EventAvailability!]!]
}

"""
columns and relationships of "EventOnboarding"
"""
type EventOnboarding {
  """An array relationship"""
  components(
    """distinct select on columns"""
    distinct_on: [EventOnboardingOnComponents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventOnboardingOnComponents_order_by!]

    """filter the rows returned"""
    where: EventOnboardingOnComponents_bool_exp
  ): [EventOnboardingOnComponents!]!
  description: String
  enabled: Boolean!
  eventId: String!
  id: Int!
}

"""
columns and relationships of "EventOnboardingOnComponents"
"""
type EventOnboardingOnComponents {
  """An object relationship"""
  component: OnboardingComponent!
  componentId: Int!
  eventOnboardingId: Int!
  index: Int!
}

"""
order by aggregate values of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_aggregate_order_by {
  avg: EventOnboardingOnComponents_avg_order_by
  count: order_by
  max: EventOnboardingOnComponents_max_order_by
  min: EventOnboardingOnComponents_min_order_by
  stddev: EventOnboardingOnComponents_stddev_order_by
  stddev_pop: EventOnboardingOnComponents_stddev_pop_order_by
  stddev_samp: EventOnboardingOnComponents_stddev_samp_order_by
  sum: EventOnboardingOnComponents_sum_order_by
  var_pop: EventOnboardingOnComponents_var_pop_order_by
  var_samp: EventOnboardingOnComponents_var_samp_order_by
  variance: EventOnboardingOnComponents_variance_order_by
}

"""
order by avg() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_avg_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
Boolean expression to filter rows from the table "EventOnboardingOnComponents". All fields are combined with a logical 'AND'.
"""
input EventOnboardingOnComponents_bool_exp {
  _and: [EventOnboardingOnComponents_bool_exp!]
  _not: EventOnboardingOnComponents_bool_exp
  _or: [EventOnboardingOnComponents_bool_exp!]
  component: OnboardingComponent_bool_exp
  componentId: Int_comparison_exp
  eventOnboardingId: Int_comparison_exp
  index: Int_comparison_exp
}

"""
order by max() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_max_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
order by min() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_min_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
Ordering options when selecting data from "EventOnboardingOnComponents".
"""
input EventOnboardingOnComponents_order_by {
  component: OnboardingComponent_order_by
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
select columns of table "EventOnboardingOnComponents"
"""
enum EventOnboardingOnComponents_select_column {
  """column name"""
  componentId

  """column name"""
  eventOnboardingId

  """column name"""
  index
}

"""
order by stddev() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_stddev_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
order by stddev_pop() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_stddev_pop_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
order by stddev_samp() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_stddev_samp_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
Streaming cursor of the table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: EventOnboardingOnComponents_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input EventOnboardingOnComponents_stream_cursor_value_input {
  componentId: Int
  eventOnboardingId: Int
  index: Int
}

"""
order by sum() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_sum_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
order by var_pop() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_var_pop_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
order by var_samp() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_var_samp_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
order by variance() on columns of table "EventOnboardingOnComponents"
"""
input EventOnboardingOnComponents_variance_order_by {
  componentId: order_by
  eventOnboardingId: order_by
  index: order_by
}

"""
Boolean expression to filter rows from the table "EventOnboarding". All fields are combined with a logical 'AND'.
"""
input EventOnboarding_bool_exp {
  _and: [EventOnboarding_bool_exp!]
  _not: EventOnboarding_bool_exp
  _or: [EventOnboarding_bool_exp!]
  components: EventOnboardingOnComponents_bool_exp
  description: String_comparison_exp
  enabled: Boolean_comparison_exp
  eventId: String_comparison_exp
  id: Int_comparison_exp
}

"""Ordering options when selecting data from "EventOnboarding"."""
input EventOnboarding_order_by {
  components_aggregate: EventOnboardingOnComponents_aggregate_order_by
  description: order_by
  enabled: order_by
  eventId: order_by
  id: order_by
}

"""
select columns of table "EventOnboarding"
"""
enum EventOnboarding_select_column {
  """column name"""
  description

  """column name"""
  enabled

  """column name"""
  eventId

  """column name"""
  id
}

"""
Streaming cursor of the table "EventOnboarding"
"""
input EventOnboarding_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: EventOnboarding_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input EventOnboarding_stream_cursor_value_input {
  description: String
  enabled: Boolean
  eventId: String
  id: Int
}

scalar EventStatus

"""
Boolean expression to compare columns of type "EventStatus". All fields are combined with logical 'AND'.
"""
input EventStatus_comparison_exp {
  _eq: EventStatus
  _gt: EventStatus
  _gte: EventStatus
  _in: [EventStatus!]
  _is_null: Boolean
  _lt: EventStatus
  _lte: EventStatus
  _neq: EventStatus
  _nin: [EventStatus!]
}

"""
aggregated selection of "Event"
"""
type Event_aggregate {
  aggregate: Event_aggregate_fields
  nodes: [Event!]!
}

"""
aggregate fields of "Event"
"""
type Event_aggregate_fields {
  count(columns: [Event_select_column!], distinct: Boolean): Int!
  max: Event_max_fields
  min: Event_min_fields
}

"""
Boolean expression to filter rows from the table "Event". All fields are combined with a logical 'AND'.
"""
input Event_bool_exp {
  Featured: Featured_bool_exp
  _and: [Event_bool_exp!]
  _not: Event_bool_exp
  _or: [Event_bool_exp!]
  availabilities: EventAvailability_array_comparison_exp
  createdAt: timestamp_comparison_exp
  description: String_comparison_exp
  endsAt: timestamp_comparison_exp
  freeLiveMinting: Boolean_comparison_exp
  headerMedia: Media_bool_exp
  headerMediaId: uuid_comparison_exp
  id: String_comparison_exp
  imageUrl: String_comparison_exp
  labelIds: Int_array_comparison_exp
  location: String_comparison_exp
  mintPageUrl: String_comparison_exp
  mintPassGroups: MintPassGroup_bool_exp
  name: String_comparison_exp
  onboarding: EventOnboarding_bool_exp
  partnerMedia: Media_bool_exp
  partnerMediaId: uuid_comparison_exp
  projectIds: String_array_comparison_exp
  startsAt: timestamp_comparison_exp
  status: EventStatus_comparison_exp
  thumbnailMedia: Media_bool_exp
  thumbnailMediaId: uuid_comparison_exp
  updatedAt: timestamp_comparison_exp
}

"""aggregate max on columns"""
type Event_max_fields {
  availabilities: [EventAvailability!]
  createdAt: timestamp
  description: String
  endsAt: timestamp
  headerMediaId: uuid
  id: String
  imageUrl: String
  labelIds: [Int!]
  location: String
  mintPageUrl: String
  name: String
  partnerMediaId: uuid
  projectIds: [String!]
  startsAt: timestamp
  status: EventStatus
  thumbnailMediaId: uuid
  updatedAt: timestamp
}

"""aggregate min on columns"""
type Event_min_fields {
  availabilities: [EventAvailability!]
  createdAt: timestamp
  description: String
  endsAt: timestamp
  headerMediaId: uuid
  id: String
  imageUrl: String
  labelIds: [Int!]
  location: String
  mintPageUrl: String
  name: String
  partnerMediaId: uuid
  projectIds: [String!]
  startsAt: timestamp
  status: EventStatus
  thumbnailMediaId: uuid
  updatedAt: timestamp
}

"""Ordering options when selecting data from "Event"."""
input Event_order_by {
  Featured: Featured_order_by
  availabilities: order_by
  createdAt: order_by
  description: order_by
  endsAt: order_by
  freeLiveMinting: order_by
  headerMedia: Media_order_by
  headerMediaId: order_by
  id: order_by
  imageUrl: order_by
  labelIds: order_by
  location: order_by
  mintPageUrl: order_by
  mintPassGroups_aggregate: MintPassGroup_aggregate_order_by
  name: order_by
  onboarding: EventOnboarding_order_by
  partnerMedia: Media_order_by
  partnerMediaId: order_by
  projectIds: order_by
  startsAt: order_by
  status: order_by
  thumbnailMedia: Media_order_by
  thumbnailMediaId: order_by
  updatedAt: order_by
}

"""
select columns of table "Event"
"""
enum Event_select_column {
  """column name"""
  availabilities

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  endsAt

  """column name"""
  freeLiveMinting

  """column name"""
  headerMediaId

  """column name"""
  id

  """column name"""
  imageUrl

  """column name"""
  labelIds

  """column name"""
  location

  """column name"""
  mintPageUrl

  """column name"""
  name

  """column name"""
  partnerMediaId

  """column name"""
  projectIds

  """column name"""
  startsAt

  """column name"""
  status

  """column name"""
  thumbnailMediaId

  """column name"""
  updatedAt
}

"""
Streaming cursor of the table "Event"
"""
input Event_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Event_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Event_stream_cursor_value_input {
  availabilities: [EventAvailability!]
  createdAt: timestamp
  description: String
  endsAt: timestamp
  freeLiveMinting: Boolean
  headerMediaId: uuid
  id: String
  imageUrl: String
  labelIds: [Int!]
  location: String
  mintPageUrl: String
  name: String
  partnerMediaId: uuid
  projectIds: [String!]
  startsAt: timestamp
  status: EventStatus
  thumbnailMediaId: uuid
  updatedAt: timestamp
}

type EvmTransactionChanges {
  amount: String
  assetType: String
  changeType: String!
  contractAddress: String!
  decimals: Int
  from: String!
  name: String
  rawAmount: String!
  symbol: String
  to: String!
  tokenId: String
}

input EvmTransactionInput {
  data: String
  from: String!
  gas: String
  gasPrice: String
  maxFeePerGas: String
  maxPriorityFeePerGas: String
  to: String
  value: String
}

"""
columns and relationships of "Featured"
"""
type Featured {
  """An object relationship"""
  event: Event
  eventId: String
  id: Int!
}

"""
Boolean expression to filter rows from the table "Featured". All fields are combined with a logical 'AND'.
"""
input Featured_bool_exp {
  _and: [Featured_bool_exp!]
  _not: Featured_bool_exp
  _or: [Featured_bool_exp!]
  event: Event_bool_exp
  eventId: String_comparison_exp
  id: Int_comparison_exp
}

"""Ordering options when selecting data from "Featured"."""
input Featured_order_by {
  event: Event_order_by
  eventId: order_by
  id: order_by
}

"""
select columns of table "Featured"
"""
enum Featured_select_column {
  """column name"""
  eventId

  """column name"""
  id
}

"""
Streaming cursor of the table "Featured"
"""
input Featured_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Featured_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Featured_stream_cursor_value_input {
  eventId: String
  id: Int
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [Int!]

  """does the array contain the given value"""
  _contains: [Int!]
  _eq: [Int!]
  _gt: [Int!]
  _gte: [Int!]
  _in: [[Int!]!]
  _is_null: Boolean
  _lt: [Int!]
  _lte: [Int!]
  _neq: [Int!]
  _nin: [[Int!]!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

input LinkWalletInput {
  id: String!
  publicKey: String
  signature: String!
}

input LogoutInput {
  refreshToken: String
}

type LogoutResult {
  success: Boolean!
}

type MailTemplate {
  id: String!
  name: String!
}

"""
columns and relationships of "Media"
"""
type Media {
  createdAt: timestamptz!
  etag: String
  id: uuid!
  name: String!

  """An array relationship"""
  project(
    """distinct select on columns"""
    distinct_on: [ProjectMedia_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectMedia_order_by!]

    """filter the rows returned"""
    where: ProjectMedia_bool_exp
  ): [ProjectMedia!]!
  size: Int!
  updatedAt: timestamptz!

  """An object relationship"""
  uploader: Account
  uploaderId: uuid
  url: String!
}

"""
Boolean expression to filter rows from the table "Media". All fields are combined with a logical 'AND'.
"""
input Media_bool_exp {
  _and: [Media_bool_exp!]
  _not: Media_bool_exp
  _or: [Media_bool_exp!]
  createdAt: timestamptz_comparison_exp
  etag: String_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  project: ProjectMedia_bool_exp
  size: Int_comparison_exp
  updatedAt: timestamptz_comparison_exp
  uploader: Account_bool_exp
  uploaderId: uuid_comparison_exp
}

"""Ordering options when selecting data from "Media"."""
input Media_order_by {
  createdAt: order_by
  etag: order_by
  id: order_by
  name: order_by
  project_aggregate: ProjectMedia_aggregate_order_by
  size: order_by
  updatedAt: order_by
  uploader: Account_order_by
  uploaderId: order_by
}

"""
select columns of table "Media"
"""
enum Media_select_column {
  """column name"""
  createdAt

  """column name"""
  etag

  """column name"""
  id

  """column name"""
  name

  """column name"""
  size

  """column name"""
  updatedAt

  """column name"""
  uploaderId
}

"""
Streaming cursor of the table "Media"
"""
input Media_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Media_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Media_stream_cursor_value_input {
  createdAt: timestamptz
  etag: String
  id: uuid
  name: String
  size: Int
  updatedAt: timestamptz
  uploaderId: uuid
}

"""
columns and relationships of "MediasOnConsumables"
"""
type MediasOnConsumables {
  consumableAddress: String!
  index: Int!

  """An object relationship"""
  media: Media!
  mediaId: uuid!
}

"""
order by aggregate values of table "MediasOnConsumables"
"""
input MediasOnConsumables_aggregate_order_by {
  avg: MediasOnConsumables_avg_order_by
  count: order_by
  max: MediasOnConsumables_max_order_by
  min: MediasOnConsumables_min_order_by
  stddev: MediasOnConsumables_stddev_order_by
  stddev_pop: MediasOnConsumables_stddev_pop_order_by
  stddev_samp: MediasOnConsumables_stddev_samp_order_by
  sum: MediasOnConsumables_sum_order_by
  var_pop: MediasOnConsumables_var_pop_order_by
  var_samp: MediasOnConsumables_var_samp_order_by
  variance: MediasOnConsumables_variance_order_by
}

"""
order by avg() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_avg_order_by {
  index: order_by
}

"""
Boolean expression to filter rows from the table "MediasOnConsumables". All fields are combined with a logical 'AND'.
"""
input MediasOnConsumables_bool_exp {
  _and: [MediasOnConsumables_bool_exp!]
  _not: MediasOnConsumables_bool_exp
  _or: [MediasOnConsumables_bool_exp!]
  consumableAddress: String_comparison_exp
  index: Int_comparison_exp
  media: Media_bool_exp
  mediaId: uuid_comparison_exp
}

"""
order by max() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_max_order_by {
  consumableAddress: order_by
  index: order_by
  mediaId: order_by
}

"""
order by min() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_min_order_by {
  consumableAddress: order_by
  index: order_by
  mediaId: order_by
}

"""Ordering options when selecting data from "MediasOnConsumables"."""
input MediasOnConsumables_order_by {
  consumableAddress: order_by
  index: order_by
  media: Media_order_by
  mediaId: order_by
}

"""
select columns of table "MediasOnConsumables"
"""
enum MediasOnConsumables_select_column {
  """column name"""
  consumableAddress

  """column name"""
  index

  """column name"""
  mediaId
}

"""
order by stddev() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_stddev_order_by {
  index: order_by
}

"""
order by stddev_pop() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_stddev_pop_order_by {
  index: order_by
}

"""
order by stddev_samp() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_stddev_samp_order_by {
  index: order_by
}

"""
Streaming cursor of the table "MediasOnConsumables"
"""
input MediasOnConsumables_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: MediasOnConsumables_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input MediasOnConsumables_stream_cursor_value_input {
  consumableAddress: String
  index: Int
  mediaId: uuid
}

"""
order by sum() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_sum_order_by {
  index: order_by
}

"""
order by var_pop() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_var_pop_order_by {
  index: order_by
}

"""
order by var_samp() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_var_samp_order_by {
  index: order_by
}

"""
order by variance() on columns of table "MediasOnConsumables"
"""
input MediasOnConsumables_variance_order_by {
  index: order_by
}

"""
columns and relationships of "MintPassGroup"
"""
type MintPassGroup {
  address: String!

  """An object relationship"""
  event: Event!
  eventId: String!
  label: String!
  maxMints: Int
  maxMintsPerProject: Int
  supportsLiveTokenGeneration: Boolean!
}

"""
order by aggregate values of table "MintPassGroup"
"""
input MintPassGroup_aggregate_order_by {
  avg: MintPassGroup_avg_order_by
  count: order_by
  max: MintPassGroup_max_order_by
  min: MintPassGroup_min_order_by
  stddev: MintPassGroup_stddev_order_by
  stddev_pop: MintPassGroup_stddev_pop_order_by
  stddev_samp: MintPassGroup_stddev_samp_order_by
  sum: MintPassGroup_sum_order_by
  var_pop: MintPassGroup_var_pop_order_by
  var_samp: MintPassGroup_var_samp_order_by
  variance: MintPassGroup_variance_order_by
}

"""
order by avg() on columns of table "MintPassGroup"
"""
input MintPassGroup_avg_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
Boolean expression to filter rows from the table "MintPassGroup". All fields are combined with a logical 'AND'.
"""
input MintPassGroup_bool_exp {
  _and: [MintPassGroup_bool_exp!]
  _not: MintPassGroup_bool_exp
  _or: [MintPassGroup_bool_exp!]
  address: String_comparison_exp
  event: Event_bool_exp
  eventId: String_comparison_exp
  label: String_comparison_exp
  maxMints: Int_comparison_exp
  maxMintsPerProject: Int_comparison_exp
  supportsLiveTokenGeneration: Boolean_comparison_exp
}

"""
order by max() on columns of table "MintPassGroup"
"""
input MintPassGroup_max_order_by {
  address: order_by
  eventId: order_by
  label: order_by
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
order by min() on columns of table "MintPassGroup"
"""
input MintPassGroup_min_order_by {
  address: order_by
  eventId: order_by
  label: order_by
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""Ordering options when selecting data from "MintPassGroup"."""
input MintPassGroup_order_by {
  address: order_by
  event: Event_order_by
  eventId: order_by
  label: order_by
  maxMints: order_by
  maxMintsPerProject: order_by
  supportsLiveTokenGeneration: order_by
}

"""
select columns of table "MintPassGroup"
"""
enum MintPassGroup_select_column {
  """column name"""
  address

  """column name"""
  eventId

  """column name"""
  label

  """column name"""
  maxMints

  """column name"""
  maxMintsPerProject

  """column name"""
  supportsLiveTokenGeneration
}

"""
order by stddev() on columns of table "MintPassGroup"
"""
input MintPassGroup_stddev_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
order by stddev_pop() on columns of table "MintPassGroup"
"""
input MintPassGroup_stddev_pop_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
order by stddev_samp() on columns of table "MintPassGroup"
"""
input MintPassGroup_stddev_samp_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
Streaming cursor of the table "MintPassGroup"
"""
input MintPassGroup_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: MintPassGroup_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input MintPassGroup_stream_cursor_value_input {
  address: String
  eventId: String
  label: String
  maxMints: Int
  maxMintsPerProject: Int
  supportsLiveTokenGeneration: Boolean
}

"""
order by sum() on columns of table "MintPassGroup"
"""
input MintPassGroup_sum_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
order by var_pop() on columns of table "MintPassGroup"
"""
input MintPassGroup_var_pop_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
order by var_samp() on columns of table "MintPassGroup"
"""
input MintPassGroup_var_samp_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
order by variance() on columns of table "MintPassGroup"
"""
input MintPassGroup_variance_order_by {
  maxMints: order_by
  maxMintsPerProject: order_by
}

"""
columns and relationships of "OnboardingComponent"
"""
type OnboardingComponent {
  content: String!
  description: String!
  id: Int!
}

"""
Boolean expression to filter rows from the table "OnboardingComponent". All fields are combined with a logical 'AND'.
"""
input OnboardingComponent_bool_exp {
  _and: [OnboardingComponent_bool_exp!]
  _not: OnboardingComponent_bool_exp
  _or: [OnboardingComponent_bool_exp!]
  content: String_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
}

"""Ordering options when selecting data from "OnboardingComponent"."""
input OnboardingComponent_order_by {
  content: order_by
  description: order_by
  id: order_by
}

"""
select columns of table "OnboardingComponent"
"""
enum OnboardingComponent_select_column {
  """column name"""
  content

  """column name"""
  description

  """column name"""
  id
}

"""
Streaming cursor of the table "OnboardingComponent"
"""
input OnboardingComponent_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: OnboardingComponent_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input OnboardingComponent_stream_cursor_value_input {
  content: String
  description: String
  id: Int
}

input PrepareRedemptionInput {
  payload: String!
  publicKey: String!
  redeemableAddress: String!
  signature: String!
  tokenId: Int!
}

type PrepareRedemptionOutput {
  payload: PrepareRedemptionPayload!
  signature: String!
}

type PrepareRedemptionPayload {
  consumer: String!
  options: jsonb!
  salt: String!
  token_id: String!
}

"""
columns and relationships of "Profile"
"""
type Profile {
  accountId: uuid!
  description: String
  farcaster: String
  instagram: String
  picture: String
  twitter: String
  website: String
}

"""
Boolean expression to filter rows from the table "Profile". All fields are combined with a logical 'AND'.
"""
input Profile_bool_exp {
  _and: [Profile_bool_exp!]
  _not: Profile_bool_exp
  _or: [Profile_bool_exp!]
  accountId: uuid_comparison_exp
  description: String_comparison_exp
  farcaster: String_comparison_exp
  instagram: String_comparison_exp
  picture: String_comparison_exp
  twitter: String_comparison_exp
  website: String_comparison_exp
}

"""
response of any mutation on the table "Profile"
"""
type Profile_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Profile!]!
}

"""Ordering options when selecting data from "Profile"."""
input Profile_order_by {
  accountId: order_by
  description: order_by
  farcaster: order_by
  instagram: order_by
  picture: order_by
  twitter: order_by
  website: order_by
}

"""primary key columns input for table: Profile"""
input Profile_pk_columns_input {
  accountId: uuid!
}

"""
select columns of table "Profile"
"""
enum Profile_select_column {
  """column name"""
  accountId

  """column name"""
  description

  """column name"""
  farcaster

  """column name"""
  instagram

  """column name"""
  picture

  """column name"""
  twitter

  """column name"""
  website
}

"""
input type for updating data in table "Profile"
"""
input Profile_set_input {
  description: String
  instagram: String
  picture: String
  twitter: String
  website: String
}

"""
Streaming cursor of the table "Profile"
"""
input Profile_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Profile_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Profile_stream_cursor_value_input {
  accountId: uuid
  description: String
  farcaster: String
  instagram: String
  picture: String
  twitter: String
  website: String
}

input Profile_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: Profile_set_input

  """filter the rows which have to be updated"""
  where: Profile_bool_exp!
}

"""
columns and relationships of "Project"
"""
type Project {
  """An object relationship"""
  author: Account!
  authorId: uuid!
  blockchain: BlockchainNetwork

  """An array relationship"""
  collaborators(
    """distinct select on columns"""
    distinct_on: [ProjectCollaborator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectCollaborator_order_by!]

    """filter the rows returned"""
    where: ProjectCollaborator_bool_exp
  ): [ProjectCollaborator!]!

  """An object relationship"""
  curator: Account
  curatorId: uuid
  description: String
  id: uuid!
  pricing(
    """JSON select path"""
    path: String
  ): jsonb

  """An array relationship"""
  projectMedias(
    """distinct select on columns"""
    distinct_on: [ProjectMedia_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectMedia_order_by!]

    """filter the rows returned"""
    where: ProjectMedia_bool_exp
  ): [ProjectMedia!]!
  releaseAt: timestamptz
  state: ProjectState!
  storage: Storage
  title: String!
  tokenId: String
}

"""
columns and relationships of "ProjectCollaborator"
"""
type ProjectCollaborator {
  """An object relationship"""
  account: Account!
  collaboratorId: uuid!

  """An object relationship"""
  project: Project!
  projectId: uuid!
}

"""
order by aggregate values of table "ProjectCollaborator"
"""
input ProjectCollaborator_aggregate_order_by {
  count: order_by
  max: ProjectCollaborator_max_order_by
  min: ProjectCollaborator_min_order_by
}

"""
input type for inserting array relation for remote table "ProjectCollaborator"
"""
input ProjectCollaborator_arr_rel_insert_input {
  data: [ProjectCollaborator_insert_input!]!

  """upsert condition"""
  on_conflict: ProjectCollaborator_on_conflict
}

"""
Boolean expression to filter rows from the table "ProjectCollaborator". All fields are combined with a logical 'AND'.
"""
input ProjectCollaborator_bool_exp {
  _and: [ProjectCollaborator_bool_exp!]
  _not: ProjectCollaborator_bool_exp
  _or: [ProjectCollaborator_bool_exp!]
  account: Account_bool_exp
  collaboratorId: uuid_comparison_exp
  project: Project_bool_exp
  projectId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "ProjectCollaborator"
"""
enum ProjectCollaborator_constraint {
  """
  unique or primary key constraint on columns "projectId", "collaboratorId"
  """
  ProjectCollaborator_projectId_collaboratorId_key
}

"""
input type for inserting data into table "ProjectCollaborator"
"""
input ProjectCollaborator_insert_input {
  collaboratorId: uuid
  project: Project_obj_rel_insert_input
  projectId: uuid
}

"""
order by max() on columns of table "ProjectCollaborator"
"""
input ProjectCollaborator_max_order_by {
  collaboratorId: order_by
  projectId: order_by
}

"""
order by min() on columns of table "ProjectCollaborator"
"""
input ProjectCollaborator_min_order_by {
  collaboratorId: order_by
  projectId: order_by
}

"""
response of any mutation on the table "ProjectCollaborator"
"""
type ProjectCollaborator_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ProjectCollaborator!]!
}

"""
on_conflict condition type for table "ProjectCollaborator"
"""
input ProjectCollaborator_on_conflict {
  constraint: ProjectCollaborator_constraint!
  update_columns: [ProjectCollaborator_update_column!]! = []
  where: ProjectCollaborator_bool_exp
}

"""Ordering options when selecting data from "ProjectCollaborator"."""
input ProjectCollaborator_order_by {
  account: Account_order_by
  collaboratorId: order_by
  project: Project_order_by
  projectId: order_by
}

"""
select columns of table "ProjectCollaborator"
"""
enum ProjectCollaborator_select_column {
  """column name"""
  collaboratorId

  """column name"""
  projectId
}

"""
Streaming cursor of the table "ProjectCollaborator"
"""
input ProjectCollaborator_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: ProjectCollaborator_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ProjectCollaborator_stream_cursor_value_input {
  collaboratorId: uuid
  projectId: uuid
}

"""
placeholder for update columns of table "ProjectCollaborator" (current role has no relevant permissions)
"""
enum ProjectCollaborator_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
columns and relationships of "ProjectMedia"
"""
type ProjectMedia {
  index: smallint!

  """An object relationship"""
  media: Media!
  mediaId: uuid!

  """An object relationship"""
  project: Project!
  projectId: uuid!
}

"""
order by aggregate values of table "ProjectMedia"
"""
input ProjectMedia_aggregate_order_by {
  avg: ProjectMedia_avg_order_by
  count: order_by
  max: ProjectMedia_max_order_by
  min: ProjectMedia_min_order_by
  stddev: ProjectMedia_stddev_order_by
  stddev_pop: ProjectMedia_stddev_pop_order_by
  stddev_samp: ProjectMedia_stddev_samp_order_by
  sum: ProjectMedia_sum_order_by
  var_pop: ProjectMedia_var_pop_order_by
  var_samp: ProjectMedia_var_samp_order_by
  variance: ProjectMedia_variance_order_by
}

"""
input type for inserting array relation for remote table "ProjectMedia"
"""
input ProjectMedia_arr_rel_insert_input {
  data: [ProjectMedia_insert_input!]!

  """upsert condition"""
  on_conflict: ProjectMedia_on_conflict
}

"""
order by avg() on columns of table "ProjectMedia"
"""
input ProjectMedia_avg_order_by {
  index: order_by
}

"""
Boolean expression to filter rows from the table "ProjectMedia". All fields are combined with a logical 'AND'.
"""
input ProjectMedia_bool_exp {
  _and: [ProjectMedia_bool_exp!]
  _not: ProjectMedia_bool_exp
  _or: [ProjectMedia_bool_exp!]
  index: smallint_comparison_exp
  media: Media_bool_exp
  mediaId: uuid_comparison_exp
  project: Project_bool_exp
  projectId: uuid_comparison_exp
}

"""
unique or primary key constraints on table "ProjectMedia"
"""
enum ProjectMedia_constraint {
  """
  unique or primary key constraint on columns "index", "mediaId", "projectId"
  """
  ProjectMedia_index_projectId_mediaId_key
}

"""
input type for incrementing numeric columns in table "ProjectMedia"
"""
input ProjectMedia_inc_input {
  index: smallint
}

"""
input type for inserting data into table "ProjectMedia"
"""
input ProjectMedia_insert_input {
  index: smallint
  mediaId: uuid
  project: Project_obj_rel_insert_input
  projectId: uuid
}

"""
order by max() on columns of table "ProjectMedia"
"""
input ProjectMedia_max_order_by {
  index: order_by
  mediaId: order_by
  projectId: order_by
}

"""
order by min() on columns of table "ProjectMedia"
"""
input ProjectMedia_min_order_by {
  index: order_by
  mediaId: order_by
  projectId: order_by
}

"""
response of any mutation on the table "ProjectMedia"
"""
type ProjectMedia_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ProjectMedia!]!
}

"""
on_conflict condition type for table "ProjectMedia"
"""
input ProjectMedia_on_conflict {
  constraint: ProjectMedia_constraint!
  update_columns: [ProjectMedia_update_column!]! = []
  where: ProjectMedia_bool_exp
}

"""Ordering options when selecting data from "ProjectMedia"."""
input ProjectMedia_order_by {
  index: order_by
  media: Media_order_by
  mediaId: order_by
  project: Project_order_by
  projectId: order_by
}

"""
select columns of table "ProjectMedia"
"""
enum ProjectMedia_select_column {
  """column name"""
  index

  """column name"""
  mediaId

  """column name"""
  projectId
}

"""
input type for updating data in table "ProjectMedia"
"""
input ProjectMedia_set_input {
  index: smallint
  mediaId: uuid
  projectId: uuid
}

"""
order by stddev() on columns of table "ProjectMedia"
"""
input ProjectMedia_stddev_order_by {
  index: order_by
}

"""
order by stddev_pop() on columns of table "ProjectMedia"
"""
input ProjectMedia_stddev_pop_order_by {
  index: order_by
}

"""
order by stddev_samp() on columns of table "ProjectMedia"
"""
input ProjectMedia_stddev_samp_order_by {
  index: order_by
}

"""
Streaming cursor of the table "ProjectMedia"
"""
input ProjectMedia_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: ProjectMedia_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ProjectMedia_stream_cursor_value_input {
  index: smallint
  mediaId: uuid
  projectId: uuid
}

"""
order by sum() on columns of table "ProjectMedia"
"""
input ProjectMedia_sum_order_by {
  index: order_by
}

"""
update columns of table "ProjectMedia"
"""
enum ProjectMedia_update_column {
  """column name"""
  index

  """column name"""
  mediaId

  """column name"""
  projectId
}

input ProjectMedia_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: ProjectMedia_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: ProjectMedia_set_input

  """filter the rows which have to be updated"""
  where: ProjectMedia_bool_exp!
}

"""
order by var_pop() on columns of table "ProjectMedia"
"""
input ProjectMedia_var_pop_order_by {
  index: order_by
}

"""
order by var_samp() on columns of table "ProjectMedia"
"""
input ProjectMedia_var_samp_order_by {
  index: order_by
}

"""
order by variance() on columns of table "ProjectMedia"
"""
input ProjectMedia_variance_order_by {
  index: order_by
}

scalar ProjectState

"""
Boolean expression to compare columns of type "ProjectState". All fields are combined with logical 'AND'.
"""
input ProjectState_comparison_exp {
  _eq: ProjectState
  _gt: ProjectState
  _gte: ProjectState
  _in: [ProjectState!]
  _is_null: Boolean
  _lt: ProjectState
  _lte: ProjectState
  _neq: ProjectState
  _nin: [ProjectState!]
}

"""
order by aggregate values of table "Project"
"""
input Project_aggregate_order_by {
  count: order_by
  max: Project_max_order_by
  min: Project_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input Project_append_input {
  pricing: jsonb
}

"""
Boolean expression to filter rows from the table "Project". All fields are combined with a logical 'AND'.
"""
input Project_bool_exp {
  _and: [Project_bool_exp!]
  _not: Project_bool_exp
  _or: [Project_bool_exp!]
  author: Account_bool_exp
  authorId: uuid_comparison_exp
  blockchain: BlockchainNetwork_comparison_exp
  collaborators: ProjectCollaborator_bool_exp
  curator: Account_bool_exp
  curatorId: uuid_comparison_exp
  description: String_comparison_exp
  id: uuid_comparison_exp
  pricing: jsonb_comparison_exp
  projectMedias: ProjectMedia_bool_exp
  releaseAt: timestamptz_comparison_exp
  state: ProjectState_comparison_exp
  storage: Storage_comparison_exp
  title: String_comparison_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "Project"
"""
enum Project_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  Project_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input Project_delete_at_path_input {
  pricing: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input Project_delete_elem_input {
  pricing: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input Project_delete_key_input {
  pricing: String
}

"""
input type for inserting data into table "Project"
"""
input Project_insert_input {
  blockchain: BlockchainNetwork
  collaborators: ProjectCollaborator_arr_rel_insert_input
  curatorId: uuid
  description: String
  pricing: jsonb
  projectMedias: ProjectMedia_arr_rel_insert_input
  releaseAt: timestamptz
  storage: Storage
  title: String
}

"""
order by max() on columns of table "Project"
"""
input Project_max_order_by {
  authorId: order_by
  blockchain: order_by
  curatorId: order_by
  description: order_by
  id: order_by
  releaseAt: order_by
  state: order_by
  storage: order_by
  title: order_by
  tokenId: order_by
}

"""
order by min() on columns of table "Project"
"""
input Project_min_order_by {
  authorId: order_by
  blockchain: order_by
  curatorId: order_by
  description: order_by
  id: order_by
  releaseAt: order_by
  state: order_by
  storage: order_by
  title: order_by
  tokenId: order_by
}

"""
response of any mutation on the table "Project"
"""
type Project_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Project!]!
}

"""
input type for inserting object relation for remote table "Project"
"""
input Project_obj_rel_insert_input {
  data: Project_insert_input!

  """upsert condition"""
  on_conflict: Project_on_conflict
}

"""
on_conflict condition type for table "Project"
"""
input Project_on_conflict {
  constraint: Project_constraint!
  update_columns: [Project_update_column!]! = []
  where: Project_bool_exp
}

"""Ordering options when selecting data from "Project"."""
input Project_order_by {
  author: Account_order_by
  authorId: order_by
  blockchain: order_by
  collaborators_aggregate: ProjectCollaborator_aggregate_order_by
  curator: Account_order_by
  curatorId: order_by
  description: order_by
  id: order_by
  pricing: order_by
  projectMedias_aggregate: ProjectMedia_aggregate_order_by
  releaseAt: order_by
  state: order_by
  storage: order_by
  title: order_by
  tokenId: order_by
}

"""primary key columns input for table: Project"""
input Project_pk_columns_input {
  id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input Project_prepend_input {
  pricing: jsonb
}

"""
select columns of table "Project"
"""
enum Project_select_column {
  """column name"""
  authorId

  """column name"""
  blockchain

  """column name"""
  curatorId

  """column name"""
  description

  """column name"""
  id

  """column name"""
  pricing

  """column name"""
  releaseAt

  """column name"""
  state

  """column name"""
  storage

  """column name"""
  title

  """column name"""
  tokenId
}

"""
input type for updating data in table "Project"
"""
input Project_set_input {
  blockchain: BlockchainNetwork
  description: String
  pricing: jsonb
  releaseAt: timestamptz
  storage: Storage
  title: String
}

"""
Streaming cursor of the table "Project"
"""
input Project_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Project_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Project_stream_cursor_value_input {
  authorId: uuid
  blockchain: BlockchainNetwork
  curatorId: uuid
  description: String
  id: uuid
  pricing: jsonb
  releaseAt: timestamptz
  state: ProjectState
  storage: Storage
  title: String
  tokenId: String
}

"""
update columns of table "Project"
"""
enum Project_update_column {
  """column name"""
  blockchain

  """column name"""
  description

  """column name"""
  pricing

  """column name"""
  releaseAt

  """column name"""
  storage

  """column name"""
  title
}

input Project_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: Project_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: Project_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: Project_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: Project_delete_key_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: Project_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: Project_set_input

  """filter the rows which have to be updated"""
  where: Project_bool_exp!
}

input RefreshInput {
  refreshToken: String!
}

input SetFarcasterHandleInput {
  id: String!
  message: String!
  signature: String!
}

type SetFarcasterHandleResult {
  handle: String!
}

type SetWhitelistOutput {
  merkleRoot: String
  message: String
  success: Boolean!
}

scalar Storage

"""
Boolean expression to compare columns of type "Storage". All fields are combined with logical 'AND'.
"""
input Storage_comparison_exp {
  _eq: Storage
  _gt: Storage
  _gte: Storage
  _in: [Storage!]
  _is_null: Boolean
  _lt: Storage
  _lte: Storage
  _neq: Storage
  _nin: [Storage!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [String!]

  """does the array contain the given value"""
  _contains: [String!]
  _eq: [String!]
  _gt: [String!]
  _gte: [String!]
  _in: [[String!]!]
  _is_null: Boolean
  _lt: [String!]
  _lte: [String!]
  _neq: [String!]
  _nin: [[String!]!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

input UnlinkWalletInput {
  address: String!
}

"""
columns and relationships of "UserAccount"
"""
type UserAccount {
  """An object relationship"""
  account: Account
  user_id: uuid
}

"""
Boolean expression to filter rows from the table "UserAccount". All fields are combined with a logical 'AND'.
"""
input UserAccount_bool_exp {
  _and: [UserAccount_bool_exp!]
  _not: UserAccount_bool_exp
  _or: [UserAccount_bool_exp!]
  account: Account_bool_exp
  user_id: uuid_comparison_exp
}

"""Ordering options when selecting data from "UserAccount"."""
input UserAccount_order_by {
  account: Account_order_by
  user_id: order_by
}

"""
select columns of table "UserAccount"
"""
enum UserAccount_select_column {
  """column name"""
  user_id
}

"""
Streaming cursor of the table "UserAccount"
"""
input UserAccount_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: UserAccount_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input UserAccount_stream_cursor_value_input {
  user_id: uuid
}

"""
columns and relationships of "Wallet"
"""
type Wallet {
  """An object relationship"""
  account: Account!
  accountId: uuid!
  address: String!
  network: BlockchainNetwork!
  walletUser(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!
}

type WalletRpc {
  active: Boolean!
  available: Boolean!
  url: String!
}

"""
order by aggregate values of table "Wallet"
"""
input Wallet_aggregate_order_by {
  count: order_by
  max: Wallet_max_order_by
  min: Wallet_min_order_by
}

"""
Boolean expression to filter rows from the table "Wallet". All fields are combined with a logical 'AND'.
"""
input Wallet_bool_exp {
  _and: [Wallet_bool_exp!]
  _not: Wallet_bool_exp
  _or: [Wallet_bool_exp!]
  account: Account_bool_exp
  accountId: uuid_comparison_exp
  address: String_comparison_exp
  network: BlockchainNetwork_comparison_exp
}

"""
order by max() on columns of table "Wallet"
"""
input Wallet_max_order_by {
  accountId: order_by
  address: order_by
  network: order_by
}

"""
order by min() on columns of table "Wallet"
"""
input Wallet_min_order_by {
  accountId: order_by
  address: order_by
  network: order_by
}

"""Ordering options when selecting data from "Wallet"."""
input Wallet_order_by {
  account: Account_order_by
  accountId: order_by
  address: order_by
  network: order_by
}

"""
select columns of table "Wallet"
"""
enum Wallet_select_column {
  """column name"""
  accountId

  """column name"""
  address

  """column name"""
  network
}

"""
Streaming cursor of the table "Wallet"
"""
input Wallet_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Wallet_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Wallet_stream_cursor_value_input {
  accountId: uuid
  address: String
  network: BlockchainNetwork
}

input Web3AuthEmailAuthOTPInput {
  email: String!
  otp: String!
}

type Web3AuthEmailAuthOTPOutput {
  idToken: String!
}

type Web3AuthEmailRequestOTPOutput {
  attemptsLeft: Int!
  email: String!
  expires: String!
}

input Web3AuthOAuthInput {
  provider: String!
  token: String!
}

type Web3AuthOAuthOutput {
  idToken: String!
}

"""
columns and relationships of "Whitelist"
"""
type Whitelist {
  """An array relationship"""
  entries(
    """distinct select on columns"""
    distinct_on: [WhitelistEntries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [WhitelistEntries_order_by!]

    """filter the rows returned"""
    where: WhitelistEntries_bool_exp
  ): [WhitelistEntries!]!
  merkleRoot: String!
}

"""
columns and relationships of "WhitelistEntries"
"""
type WhitelistEntries {
  merkleRoot: String!
  walletAddress: String!

  """An object relationship"""
  whitelist: Whitelist!
  whitelistIndex: Int!
}

"""
order by aggregate values of table "WhitelistEntries"
"""
input WhitelistEntries_aggregate_order_by {
  avg: WhitelistEntries_avg_order_by
  count: order_by
  max: WhitelistEntries_max_order_by
  min: WhitelistEntries_min_order_by
  stddev: WhitelistEntries_stddev_order_by
  stddev_pop: WhitelistEntries_stddev_pop_order_by
  stddev_samp: WhitelistEntries_stddev_samp_order_by
  sum: WhitelistEntries_sum_order_by
  var_pop: WhitelistEntries_var_pop_order_by
  var_samp: WhitelistEntries_var_samp_order_by
  variance: WhitelistEntries_variance_order_by
}

"""
order by avg() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_avg_order_by {
  whitelistIndex: order_by
}

"""
Boolean expression to filter rows from the table "WhitelistEntries". All fields are combined with a logical 'AND'.
"""
input WhitelistEntries_bool_exp {
  _and: [WhitelistEntries_bool_exp!]
  _not: WhitelistEntries_bool_exp
  _or: [WhitelistEntries_bool_exp!]
  merkleRoot: String_comparison_exp
  walletAddress: String_comparison_exp
  whitelist: Whitelist_bool_exp
  whitelistIndex: Int_comparison_exp
}

"""
order by max() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_max_order_by {
  merkleRoot: order_by
  walletAddress: order_by
  whitelistIndex: order_by
}

"""
order by min() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_min_order_by {
  merkleRoot: order_by
  walletAddress: order_by
  whitelistIndex: order_by
}

"""Ordering options when selecting data from "WhitelistEntries"."""
input WhitelistEntries_order_by {
  merkleRoot: order_by
  walletAddress: order_by
  whitelist: Whitelist_order_by
  whitelistIndex: order_by
}

"""
select columns of table "WhitelistEntries"
"""
enum WhitelistEntries_select_column {
  """column name"""
  merkleRoot

  """column name"""
  walletAddress

  """column name"""
  whitelistIndex
}

"""
order by stddev() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_stddev_order_by {
  whitelistIndex: order_by
}

"""
order by stddev_pop() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_stddev_pop_order_by {
  whitelistIndex: order_by
}

"""
order by stddev_samp() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_stddev_samp_order_by {
  whitelistIndex: order_by
}

"""
Streaming cursor of the table "WhitelistEntries"
"""
input WhitelistEntries_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: WhitelistEntries_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input WhitelistEntries_stream_cursor_value_input {
  merkleRoot: String
  walletAddress: String
  whitelistIndex: Int
}

"""
order by sum() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_sum_order_by {
  whitelistIndex: order_by
}

"""
order by var_pop() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_var_pop_order_by {
  whitelistIndex: order_by
}

"""
order by var_samp() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_var_samp_order_by {
  whitelistIndex: order_by
}

"""
order by variance() on columns of table "WhitelistEntries"
"""
input WhitelistEntries_variance_order_by {
  whitelistIndex: order_by
}

"""
Boolean expression to filter rows from the table "Whitelist". All fields are combined with a logical 'AND'.
"""
input Whitelist_bool_exp {
  _and: [Whitelist_bool_exp!]
  _not: Whitelist_bool_exp
  _or: [Whitelist_bool_exp!]
  entries: WhitelistEntries_bool_exp
  merkleRoot: String_comparison_exp
}

"""Ordering options when selecting data from "Whitelist"."""
input Whitelist_order_by {
  entries_aggregate: WhitelistEntries_aggregate_order_by
  merkleRoot: order_by
}

"""
select columns of table "Whitelist"
"""
enum Whitelist_select_column {
  """column name"""
  merkleRoot
}

"""
Streaming cursor of the table "Whitelist"
"""
input Whitelist_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: Whitelist_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input Whitelist_stream_cursor_value_input {
  merkleRoot: String
}

scalar _text

"""
columns and relationships of "action"
"""
type action {
  """An object relationship"""
  article: article
  article_id: Int

  """
  A computed field, executes function "token_or_objkt_chain_for_action"
  """
  chain: String
  created_at: timestamptz!

  """An object relationship"""
  generative_token: generative_token
  id: uuid!

  """An object relationship"""
  issuer: user
  issuer_id: String

  """An object relationship"""
  issuer_wallet: foreign_wallet
  metadata(
    """JSON select path"""
    path: String
  ): jsonb
  numeric_value: numeric

  """An object relationship"""
  objkt: objkt
  objkt_id: String
  op_hash: String!

  """An object relationship"""
  redeemable: redeemable
  redeemable_address: String

  """An object relationship"""
  target: user
  target_id: String
  ticket_id: String
  token_id: String
  type: action_type_enum!

  """An object relationship"""
  user: user

  """An object relationship"""
  userByIssuerId: user
}

"""
aggregated selection of "action"
"""
type action_aggregate {
  aggregate: action_aggregate_fields
  nodes: [action!]!
}

input action_aggregate_bool_exp {
  count: action_aggregate_bool_exp_count
}

input action_aggregate_bool_exp_count {
  arguments: [action_select_column!]
  distinct: Boolean
  filter: action_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "action"
"""
type action_aggregate_fields {
  avg: action_avg_fields
  count(columns: [action_select_column!], distinct: Boolean): Int!
  max: action_max_fields
  min: action_min_fields
  stddev: action_stddev_fields
  stddev_pop: action_stddev_pop_fields
  stddev_samp: action_stddev_samp_fields
  sum: action_sum_fields
  var_pop: action_var_pop_fields
  var_samp: action_var_samp_fields
  variance: action_variance_fields
}

"""
order by aggregate values of table "action"
"""
input action_aggregate_order_by {
  avg: action_avg_order_by
  count: order_by
  max: action_max_order_by
  min: action_min_order_by
  stddev: action_stddev_order_by
  stddev_pop: action_stddev_pop_order_by
  stddev_samp: action_stddev_samp_order_by
  sum: action_sum_order_by
  var_pop: action_var_pop_order_by
  var_samp: action_var_samp_order_by
  variance: action_variance_order_by
}

"""aggregate avg on columns"""
type action_avg_fields {
  article_id: Float
  numeric_value: Float
}

"""
order by avg() on columns of table "action"
"""
input action_avg_order_by {
  article_id: order_by
  numeric_value: order_by
}

"""
Boolean expression to filter rows from the table "action". All fields are combined with a logical 'AND'.
"""
input action_bool_exp {
  _and: [action_bool_exp!]
  _not: action_bool_exp
  _or: [action_bool_exp!]
  article: article_bool_exp
  article_id: Int_comparison_exp
  chain: String_comparison_exp
  created_at: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: uuid_comparison_exp
  issuer: user_bool_exp
  issuer_id: String_comparison_exp
  issuer_wallet: foreign_wallet_bool_exp
  metadata: jsonb_comparison_exp
  numeric_value: numeric_comparison_exp
  objkt: objkt_bool_exp
  objkt_id: String_comparison_exp
  op_hash: String_comparison_exp
  redeemable: redeemable_bool_exp
  redeemable_address: String_comparison_exp
  target: user_bool_exp
  target_id: String_comparison_exp
  ticket_id: String_comparison_exp
  token_id: String_comparison_exp
  type: action_type_enum_comparison_exp
  user: user_bool_exp
  userByIssuerId: user_bool_exp
}

"""aggregate max on columns"""
type action_max_fields {
  article_id: Int

  """
  A computed field, executes function "token_or_objkt_chain_for_action"
  """
  chain: String
  created_at: timestamptz
  id: uuid
  issuer_id: String
  numeric_value: numeric
  objkt_id: String
  op_hash: String
  redeemable_address: String
  target_id: String
  ticket_id: String
  token_id: String
  type: action_type_enum
}

"""
order by max() on columns of table "action"
"""
input action_max_order_by {
  article_id: order_by
  created_at: order_by
  id: order_by
  issuer_id: order_by
  numeric_value: order_by
  objkt_id: order_by
  op_hash: order_by
  redeemable_address: order_by
  target_id: order_by
  ticket_id: order_by
  token_id: order_by
  type: order_by
}

"""aggregate min on columns"""
type action_min_fields {
  article_id: Int

  """
  A computed field, executes function "token_or_objkt_chain_for_action"
  """
  chain: String
  created_at: timestamptz
  id: uuid
  issuer_id: String
  numeric_value: numeric
  objkt_id: String
  op_hash: String
  redeemable_address: String
  target_id: String
  ticket_id: String
  token_id: String
  type: action_type_enum
}

"""
order by min() on columns of table "action"
"""
input action_min_order_by {
  article_id: order_by
  created_at: order_by
  id: order_by
  issuer_id: order_by
  numeric_value: order_by
  objkt_id: order_by
  op_hash: order_by
  redeemable_address: order_by
  target_id: order_by
  ticket_id: order_by
  token_id: order_by
  type: order_by
}

"""Ordering options when selecting data from "action"."""
input action_order_by {
  article: article_order_by
  article_id: order_by
  chain: order_by
  created_at: order_by
  generative_token: generative_token_order_by
  id: order_by
  issuer: user_order_by
  issuer_id: order_by
  issuer_wallet: foreign_wallet_order_by
  metadata: order_by
  numeric_value: order_by
  objkt: objkt_order_by
  objkt_id: order_by
  op_hash: order_by
  redeemable: redeemable_order_by
  redeemable_address: order_by
  target: user_order_by
  target_id: order_by
  ticket_id: order_by
  token_id: order_by
  type: order_by
  user: user_order_by
  userByIssuerId: user_order_by
}

"""
select columns of table "action"
"""
enum action_select_column {
  """column name"""
  article_id

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  issuer_id

  """column name"""
  metadata

  """column name"""
  numeric_value

  """column name"""
  objkt_id

  """column name"""
  op_hash

  """column name"""
  redeemable_address

  """column name"""
  target_id

  """column name"""
  ticket_id

  """column name"""
  token_id

  """column name"""
  type
}

"""aggregate stddev on columns"""
type action_stddev_fields {
  article_id: Float
  numeric_value: Float
}

"""
order by stddev() on columns of table "action"
"""
input action_stddev_order_by {
  article_id: order_by
  numeric_value: order_by
}

"""aggregate stddev_pop on columns"""
type action_stddev_pop_fields {
  article_id: Float
  numeric_value: Float
}

"""
order by stddev_pop() on columns of table "action"
"""
input action_stddev_pop_order_by {
  article_id: order_by
  numeric_value: order_by
}

"""aggregate stddev_samp on columns"""
type action_stddev_samp_fields {
  article_id: Float
  numeric_value: Float
}

"""
order by stddev_samp() on columns of table "action"
"""
input action_stddev_samp_order_by {
  article_id: order_by
  numeric_value: order_by
}

"""
Streaming cursor of the table "action"
"""
input action_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: action_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input action_stream_cursor_value_input {
  article_id: Int
  created_at: timestamptz
  id: uuid
  issuer_id: String
  metadata: jsonb
  numeric_value: numeric
  objkt_id: String
  op_hash: String
  redeemable_address: String
  target_id: String
  ticket_id: String
  token_id: String
  type: action_type_enum
}

"""aggregate sum on columns"""
type action_sum_fields {
  article_id: Int
  numeric_value: numeric
}

"""
order by sum() on columns of table "action"
"""
input action_sum_order_by {
  article_id: order_by
  numeric_value: order_by
}

scalar action_type_enum

"""
Boolean expression to compare columns of type "action_type_enum". All fields are combined with logical 'AND'.
"""
input action_type_enum_comparison_exp {
  _eq: action_type_enum
  _gt: action_type_enum
  _gte: action_type_enum
  _in: [action_type_enum!]
  _is_null: Boolean
  _lt: action_type_enum
  _lte: action_type_enum
  _neq: action_type_enum
  _nin: [action_type_enum!]
}

"""aggregate var_pop on columns"""
type action_var_pop_fields {
  article_id: Float
  numeric_value: Float
}

"""
order by var_pop() on columns of table "action"
"""
input action_var_pop_order_by {
  article_id: order_by
  numeric_value: order_by
}

"""aggregate var_samp on columns"""
type action_var_samp_fields {
  article_id: Float
  numeric_value: Float
}

"""
order by var_samp() on columns of table "action"
"""
input action_var_samp_order_by {
  article_id: order_by
  numeric_value: order_by
}

"""aggregate variance on columns"""
type action_variance_fields {
  article_id: Float
  numeric_value: Float
}

"""
order by variance() on columns of table "action"
"""
input action_variance_order_by {
  article_id: order_by
  numeric_value: order_by
}

"""
columns and relationships of "article"
"""
type article {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """An array relationship"""
  article_generative_tokens(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!

  """An array relationship"""
  article_ledgers(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """An aggregate relationship"""
  article_ledgers_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """An array relationship"""
  article_revisions(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!
  artifact_uri: String!
  author_id: String!
  body: String!
  created_at: timestamptz!
  description: String!
  display_uri: String!
  editions: bigint!
  flag: article_flag_enum!
  id: Int!
  language: String!

  """An array relationship"""
  listings(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json!
  metadata_locked: Boolean!
  metadata_uri: String!
  mint_op_hash: String!

  """An object relationship"""
  moderation_reason: moderation_reason
  moderation_reason_id: String
  platforms: [String!]
  royalties: Int!
  slug: String!

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!
  tags: [String!]!
  thumbnail_caption: String
  thumbnail_media_id: bpchar
  thumbnail_uri: String!
  title: String!

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """An object relationship"""
  user: user!

  """An object relationship"""
  wallet: foreign_wallet
}

"""
aggregated selection of "article"
"""
type article_aggregate {
  aggregate: article_aggregate_fields
  nodes: [article!]!
}

input article_aggregate_bool_exp {
  bool_and: article_aggregate_bool_exp_bool_and
  bool_or: article_aggregate_bool_exp_bool_or
  count: article_aggregate_bool_exp_count
}

input article_aggregate_bool_exp_bool_and {
  arguments: article_select_column_article_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: article_bool_exp
  predicate: Boolean_comparison_exp!
}

input article_aggregate_bool_exp_bool_or {
  arguments: article_select_column_article_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: article_bool_exp
  predicate: Boolean_comparison_exp!
}

input article_aggregate_bool_exp_count {
  arguments: [article_select_column!]
  distinct: Boolean
  filter: article_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "article"
"""
type article_aggregate_fields {
  avg: article_avg_fields
  count(columns: [article_select_column!], distinct: Boolean): Int!
  max: article_max_fields
  min: article_min_fields
  stddev: article_stddev_fields
  stddev_pop: article_stddev_pop_fields
  stddev_samp: article_stddev_samp_fields
  sum: article_sum_fields
  var_pop: article_var_pop_fields
  var_samp: article_var_samp_fields
  variance: article_variance_fields
}

"""
order by aggregate values of table "article"
"""
input article_aggregate_order_by {
  avg: article_avg_order_by
  count: order_by
  max: article_max_order_by
  min: article_min_order_by
  stddev: article_stddev_order_by
  stddev_pop: article_stddev_pop_order_by
  stddev_samp: article_stddev_samp_order_by
  sum: article_sum_order_by
  var_pop: article_var_pop_order_by
  var_samp: article_var_samp_order_by
  variance: article_variance_order_by
}

"""aggregate avg on columns"""
type article_avg_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by avg() on columns of table "article"
"""
input article_avg_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""
Boolean expression to filter rows from the table "article". All fields are combined with a logical 'AND'.
"""
input article_bool_exp {
  _and: [article_bool_exp!]
  _not: article_bool_exp
  _or: [article_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  article_generative_tokens: article_generative_token_bool_exp
  article_ledgers: article_ledger_bool_exp
  article_ledgers_aggregate: article_ledger_aggregate_bool_exp
  article_revisions: article_revision_bool_exp
  artifact_uri: String_comparison_exp
  author_id: String_comparison_exp
  body: String_comparison_exp
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  display_uri: String_comparison_exp
  editions: bigint_comparison_exp
  flag: article_flag_enum_comparison_exp
  id: Int_comparison_exp
  language: String_comparison_exp
  listings: listing_bool_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadata_locked: Boolean_comparison_exp
  metadata_uri: String_comparison_exp
  mint_op_hash: String_comparison_exp
  moderation_reason: moderation_reason_bool_exp
  moderation_reason_id: String_comparison_exp
  platforms: String_array_comparison_exp
  royalties: Int_comparison_exp
  slug: String_comparison_exp
  splits: split_bool_exp
  tags: String_array_comparison_exp
  thumbnail_caption: String_comparison_exp
  thumbnail_media_id: bpchar_comparison_exp
  thumbnail_uri: String_comparison_exp
  title: String_comparison_exp
  transactions: transaction_bool_exp
  user: user_bool_exp
  wallet: foreign_wallet_bool_exp
}

scalar article_flag_enum

"""
Boolean expression to compare columns of type "article_flag_enum". All fields are combined with logical 'AND'.
"""
input article_flag_enum_comparison_exp {
  _eq: article_flag_enum
  _gt: article_flag_enum
  _gte: article_flag_enum
  _in: [article_flag_enum!]
  _is_null: Boolean
  _lt: article_flag_enum
  _lte: article_flag_enum
  _neq: article_flag_enum
  _nin: [article_flag_enum!]
}

"""
columns and relationships of "article_generative_token"
"""
type article_generative_token {
  article_id: Int!
  generative_token_id: String!
  line: Int!
}

"""
order by aggregate values of table "article_generative_token"
"""
input article_generative_token_aggregate_order_by {
  avg: article_generative_token_avg_order_by
  count: order_by
  max: article_generative_token_max_order_by
  min: article_generative_token_min_order_by
  stddev: article_generative_token_stddev_order_by
  stddev_pop: article_generative_token_stddev_pop_order_by
  stddev_samp: article_generative_token_stddev_samp_order_by
  sum: article_generative_token_sum_order_by
  var_pop: article_generative_token_var_pop_order_by
  var_samp: article_generative_token_var_samp_order_by
  variance: article_generative_token_variance_order_by
}

"""
order by avg() on columns of table "article_generative_token"
"""
input article_generative_token_avg_order_by {
  article_id: order_by
  line: order_by
}

"""
Boolean expression to filter rows from the table "article_generative_token". All fields are combined with a logical 'AND'.
"""
input article_generative_token_bool_exp {
  _and: [article_generative_token_bool_exp!]
  _not: article_generative_token_bool_exp
  _or: [article_generative_token_bool_exp!]
  article_id: Int_comparison_exp
  generative_token_id: String_comparison_exp
  line: Int_comparison_exp
}

"""
order by max() on columns of table "article_generative_token"
"""
input article_generative_token_max_order_by {
  article_id: order_by
  generative_token_id: order_by
  line: order_by
}

"""
order by min() on columns of table "article_generative_token"
"""
input article_generative_token_min_order_by {
  article_id: order_by
  generative_token_id: order_by
  line: order_by
}

"""Ordering options when selecting data from "article_generative_token"."""
input article_generative_token_order_by {
  article_id: order_by
  generative_token_id: order_by
  line: order_by
}

"""
select columns of table "article_generative_token"
"""
enum article_generative_token_select_column {
  """column name"""
  article_id

  """column name"""
  generative_token_id

  """column name"""
  line
}

"""
order by stddev() on columns of table "article_generative_token"
"""
input article_generative_token_stddev_order_by {
  article_id: order_by
  line: order_by
}

"""
order by stddev_pop() on columns of table "article_generative_token"
"""
input article_generative_token_stddev_pop_order_by {
  article_id: order_by
  line: order_by
}

"""
order by stddev_samp() on columns of table "article_generative_token"
"""
input article_generative_token_stddev_samp_order_by {
  article_id: order_by
  line: order_by
}

"""
Streaming cursor of the table "article_generative_token"
"""
input article_generative_token_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_generative_token_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_generative_token_stream_cursor_value_input {
  article_id: Int
  generative_token_id: String
  line: Int
}

"""
order by sum() on columns of table "article_generative_token"
"""
input article_generative_token_sum_order_by {
  article_id: order_by
  line: order_by
}

"""
order by var_pop() on columns of table "article_generative_token"
"""
input article_generative_token_var_pop_order_by {
  article_id: order_by
  line: order_by
}

"""
order by var_samp() on columns of table "article_generative_token"
"""
input article_generative_token_var_samp_order_by {
  article_id: order_by
  line: order_by
}

"""
order by variance() on columns of table "article_generative_token"
"""
input article_generative_token_variance_order_by {
  article_id: order_by
  line: order_by
}

"""
columns and relationships of "article_ledger"
"""
type article_ledger {
  amount: bigint!

  """An object relationship"""
  article: article!
  article_id: Int!
  owner_id: String!

  """An object relationship"""
  user: user!

  """An object relationship"""
  wallet: foreign_wallet
}

"""
aggregated selection of "article_ledger"
"""
type article_ledger_aggregate {
  aggregate: article_ledger_aggregate_fields
  nodes: [article_ledger!]!
}

input article_ledger_aggregate_bool_exp {
  count: article_ledger_aggregate_bool_exp_count
}

input article_ledger_aggregate_bool_exp_count {
  arguments: [article_ledger_select_column!]
  distinct: Boolean
  filter: article_ledger_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "article_ledger"
"""
type article_ledger_aggregate_fields {
  avg: article_ledger_avg_fields
  count(columns: [article_ledger_select_column!], distinct: Boolean): Int!
  max: article_ledger_max_fields
  min: article_ledger_min_fields
  stddev: article_ledger_stddev_fields
  stddev_pop: article_ledger_stddev_pop_fields
  stddev_samp: article_ledger_stddev_samp_fields
  sum: article_ledger_sum_fields
  var_pop: article_ledger_var_pop_fields
  var_samp: article_ledger_var_samp_fields
  variance: article_ledger_variance_fields
}

"""
order by aggregate values of table "article_ledger"
"""
input article_ledger_aggregate_order_by {
  avg: article_ledger_avg_order_by
  count: order_by
  max: article_ledger_max_order_by
  min: article_ledger_min_order_by
  stddev: article_ledger_stddev_order_by
  stddev_pop: article_ledger_stddev_pop_order_by
  stddev_samp: article_ledger_stddev_samp_order_by
  sum: article_ledger_sum_order_by
  var_pop: article_ledger_var_pop_order_by
  var_samp: article_ledger_var_samp_order_by
  variance: article_ledger_variance_order_by
}

"""aggregate avg on columns"""
type article_ledger_avg_fields {
  amount: Float
  article_id: Float
}

"""
order by avg() on columns of table "article_ledger"
"""
input article_ledger_avg_order_by {
  amount: order_by
  article_id: order_by
}

"""
Boolean expression to filter rows from the table "article_ledger". All fields are combined with a logical 'AND'.
"""
input article_ledger_bool_exp {
  _and: [article_ledger_bool_exp!]
  _not: article_ledger_bool_exp
  _or: [article_ledger_bool_exp!]
  amount: bigint_comparison_exp
  article: article_bool_exp
  article_id: Int_comparison_exp
  owner_id: String_comparison_exp
  user: user_bool_exp
  wallet: foreign_wallet_bool_exp
}

"""aggregate max on columns"""
type article_ledger_max_fields {
  amount: bigint
  article_id: Int
  owner_id: String
}

"""
order by max() on columns of table "article_ledger"
"""
input article_ledger_max_order_by {
  amount: order_by
  article_id: order_by
  owner_id: order_by
}

"""aggregate min on columns"""
type article_ledger_min_fields {
  amount: bigint
  article_id: Int
  owner_id: String
}

"""
order by min() on columns of table "article_ledger"
"""
input article_ledger_min_order_by {
  amount: order_by
  article_id: order_by
  owner_id: order_by
}

"""Ordering options when selecting data from "article_ledger"."""
input article_ledger_order_by {
  amount: order_by
  article: article_order_by
  article_id: order_by
  owner_id: order_by
  user: user_order_by
  wallet: foreign_wallet_order_by
}

"""
select columns of table "article_ledger"
"""
enum article_ledger_select_column {
  """column name"""
  amount

  """column name"""
  article_id

  """column name"""
  owner_id
}

"""aggregate stddev on columns"""
type article_ledger_stddev_fields {
  amount: Float
  article_id: Float
}

"""
order by stddev() on columns of table "article_ledger"
"""
input article_ledger_stddev_order_by {
  amount: order_by
  article_id: order_by
}

"""aggregate stddev_pop on columns"""
type article_ledger_stddev_pop_fields {
  amount: Float
  article_id: Float
}

"""
order by stddev_pop() on columns of table "article_ledger"
"""
input article_ledger_stddev_pop_order_by {
  amount: order_by
  article_id: order_by
}

"""aggregate stddev_samp on columns"""
type article_ledger_stddev_samp_fields {
  amount: Float
  article_id: Float
}

"""
order by stddev_samp() on columns of table "article_ledger"
"""
input article_ledger_stddev_samp_order_by {
  amount: order_by
  article_id: order_by
}

"""
Streaming cursor of the table "article_ledger"
"""
input article_ledger_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_ledger_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_ledger_stream_cursor_value_input {
  amount: bigint
  article_id: Int
  owner_id: String
}

"""aggregate sum on columns"""
type article_ledger_sum_fields {
  amount: bigint
  article_id: Int
}

"""
order by sum() on columns of table "article_ledger"
"""
input article_ledger_sum_order_by {
  amount: order_by
  article_id: order_by
}

"""aggregate var_pop on columns"""
type article_ledger_var_pop_fields {
  amount: Float
  article_id: Float
}

"""
order by var_pop() on columns of table "article_ledger"
"""
input article_ledger_var_pop_order_by {
  amount: order_by
  article_id: order_by
}

"""aggregate var_samp on columns"""
type article_ledger_var_samp_fields {
  amount: Float
  article_id: Float
}

"""
order by var_samp() on columns of table "article_ledger"
"""
input article_ledger_var_samp_order_by {
  amount: order_by
  article_id: order_by
}

"""aggregate variance on columns"""
type article_ledger_variance_fields {
  amount: Float
  article_id: Float
}

"""
order by variance() on columns of table "article_ledger"
"""
input article_ledger_variance_order_by {
  amount: order_by
  article_id: order_by
}

"""aggregate max on columns"""
type article_max_fields {
  artifact_uri: String
  author_id: String
  body: String
  created_at: timestamptz
  description: String
  display_uri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  metadata_uri: String
  mint_op_hash: String
  moderation_reason_id: String
  platforms: [String!]
  royalties: Int
  slug: String
  tags: [String!]
  thumbnail_caption: String
  thumbnail_media_id: bpchar
  thumbnail_uri: String
  title: String
}

"""
order by max() on columns of table "article"
"""
input article_max_order_by {
  artifact_uri: order_by
  author_id: order_by
  body: order_by
  created_at: order_by
  description: order_by
  display_uri: order_by
  editions: order_by
  flag: order_by
  id: order_by
  language: order_by
  metadata_uri: order_by
  mint_op_hash: order_by
  moderation_reason_id: order_by
  platforms: order_by
  royalties: order_by
  slug: order_by
  tags: order_by
  thumbnail_caption: order_by
  thumbnail_media_id: order_by
  thumbnail_uri: order_by
  title: order_by
}

"""aggregate min on columns"""
type article_min_fields {
  artifact_uri: String
  author_id: String
  body: String
  created_at: timestamptz
  description: String
  display_uri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  metadata_uri: String
  mint_op_hash: String
  moderation_reason_id: String
  platforms: [String!]
  royalties: Int
  slug: String
  tags: [String!]
  thumbnail_caption: String
  thumbnail_media_id: bpchar
  thumbnail_uri: String
  title: String
}

"""
order by min() on columns of table "article"
"""
input article_min_order_by {
  artifact_uri: order_by
  author_id: order_by
  body: order_by
  created_at: order_by
  description: order_by
  display_uri: order_by
  editions: order_by
  flag: order_by
  id: order_by
  language: order_by
  metadata_uri: order_by
  mint_op_hash: order_by
  moderation_reason_id: order_by
  platforms: order_by
  royalties: order_by
  slug: order_by
  tags: order_by
  thumbnail_caption: order_by
  thumbnail_media_id: order_by
  thumbnail_uri: order_by
  title: order_by
}

"""Ordering options when selecting data from "article"."""
input article_order_by {
  actions_aggregate: action_aggregate_order_by
  article_generative_tokens_aggregate: article_generative_token_aggregate_order_by
  article_ledgers_aggregate: article_ledger_aggregate_order_by
  article_revisions_aggregate: article_revision_aggregate_order_by
  artifact_uri: order_by
  author_id: order_by
  body: order_by
  created_at: order_by
  description: order_by
  display_uri: order_by
  editions: order_by
  flag: order_by
  id: order_by
  language: order_by
  listings_aggregate: listing_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadata_locked: order_by
  metadata_uri: order_by
  mint_op_hash: order_by
  moderation_reason: moderation_reason_order_by
  moderation_reason_id: order_by
  platforms: order_by
  royalties: order_by
  slug: order_by
  splits_aggregate: split_aggregate_order_by
  tags: order_by
  thumbnail_caption: order_by
  thumbnail_media_id: order_by
  thumbnail_uri: order_by
  title: order_by
  transactions_aggregate: transaction_aggregate_order_by
  user: user_order_by
  wallet: foreign_wallet_order_by
}

"""
columns and relationships of "article_revision"
"""
type article_revision {
  """An object relationship"""
  article: article!
  article_id: Int!
  created_at: timestamptz!
  iteration: smallint!
  metadata_uri: String!
  op_hash: String!
}

"""
order by aggregate values of table "article_revision"
"""
input article_revision_aggregate_order_by {
  avg: article_revision_avg_order_by
  count: order_by
  max: article_revision_max_order_by
  min: article_revision_min_order_by
  stddev: article_revision_stddev_order_by
  stddev_pop: article_revision_stddev_pop_order_by
  stddev_samp: article_revision_stddev_samp_order_by
  sum: article_revision_sum_order_by
  var_pop: article_revision_var_pop_order_by
  var_samp: article_revision_var_samp_order_by
  variance: article_revision_variance_order_by
}

"""
order by avg() on columns of table "article_revision"
"""
input article_revision_avg_order_by {
  article_id: order_by
  iteration: order_by
}

"""
Boolean expression to filter rows from the table "article_revision". All fields are combined with a logical 'AND'.
"""
input article_revision_bool_exp {
  _and: [article_revision_bool_exp!]
  _not: article_revision_bool_exp
  _or: [article_revision_bool_exp!]
  article: article_bool_exp
  article_id: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  iteration: smallint_comparison_exp
  metadata_uri: String_comparison_exp
  op_hash: String_comparison_exp
}

"""
order by max() on columns of table "article_revision"
"""
input article_revision_max_order_by {
  article_id: order_by
  created_at: order_by
  iteration: order_by
  metadata_uri: order_by
  op_hash: order_by
}

"""
order by min() on columns of table "article_revision"
"""
input article_revision_min_order_by {
  article_id: order_by
  created_at: order_by
  iteration: order_by
  metadata_uri: order_by
  op_hash: order_by
}

"""Ordering options when selecting data from "article_revision"."""
input article_revision_order_by {
  article: article_order_by
  article_id: order_by
  created_at: order_by
  iteration: order_by
  metadata_uri: order_by
  op_hash: order_by
}

"""
select columns of table "article_revision"
"""
enum article_revision_select_column {
  """column name"""
  article_id

  """column name"""
  created_at

  """column name"""
  iteration

  """column name"""
  metadata_uri

  """column name"""
  op_hash
}

"""
order by stddev() on columns of table "article_revision"
"""
input article_revision_stddev_order_by {
  article_id: order_by
  iteration: order_by
}

"""
order by stddev_pop() on columns of table "article_revision"
"""
input article_revision_stddev_pop_order_by {
  article_id: order_by
  iteration: order_by
}

"""
order by stddev_samp() on columns of table "article_revision"
"""
input article_revision_stddev_samp_order_by {
  article_id: order_by
  iteration: order_by
}

"""
Streaming cursor of the table "article_revision"
"""
input article_revision_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_revision_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_revision_stream_cursor_value_input {
  article_id: Int
  created_at: timestamptz
  iteration: smallint
  metadata_uri: String
  op_hash: String
}

"""
order by sum() on columns of table "article_revision"
"""
input article_revision_sum_order_by {
  article_id: order_by
  iteration: order_by
}

"""
order by var_pop() on columns of table "article_revision"
"""
input article_revision_var_pop_order_by {
  article_id: order_by
  iteration: order_by
}

"""
order by var_samp() on columns of table "article_revision"
"""
input article_revision_var_samp_order_by {
  article_id: order_by
  iteration: order_by
}

"""
order by variance() on columns of table "article_revision"
"""
input article_revision_variance_order_by {
  article_id: order_by
  iteration: order_by
}

"""
select columns of table "article"
"""
enum article_select_column {
  """column name"""
  artifact_uri

  """column name"""
  author_id

  """column name"""
  body

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  display_uri

  """column name"""
  editions

  """column name"""
  flag

  """column name"""
  id

  """column name"""
  language

  """column name"""
  metadata

  """column name"""
  metadata_locked

  """column name"""
  metadata_uri

  """column name"""
  mint_op_hash

  """column name"""
  moderation_reason_id

  """column name"""
  platforms

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  tags

  """column name"""
  thumbnail_caption

  """column name"""
  thumbnail_media_id

  """column name"""
  thumbnail_uri

  """column name"""
  title
}

"""
select "article_aggregate_bool_exp_bool_and_arguments_columns" columns of table "article"
"""
enum article_select_column_article_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  metadata_locked
}

"""
select "article_aggregate_bool_exp_bool_or_arguments_columns" columns of table "article"
"""
enum article_select_column_article_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  metadata_locked
}

"""aggregate stddev on columns"""
type article_stddev_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by stddev() on columns of table "article"
"""
input article_stddev_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate stddev_pop on columns"""
type article_stddev_pop_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by stddev_pop() on columns of table "article"
"""
input article_stddev_pop_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate stddev_samp on columns"""
type article_stddev_samp_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by stddev_samp() on columns of table "article"
"""
input article_stddev_samp_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""
Streaming cursor of the table "article"
"""
input article_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_stream_cursor_value_input {
  artifact_uri: String
  author_id: String
  body: String
  created_at: timestamptz
  description: String
  display_uri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  metadata: json
  metadata_locked: Boolean
  metadata_uri: String
  mint_op_hash: String
  moderation_reason_id: String
  platforms: [String!]
  royalties: Int
  slug: String
  tags: [String!]
  thumbnail_caption: String
  thumbnail_media_id: bpchar
  thumbnail_uri: String
  title: String
}

"""aggregate sum on columns"""
type article_sum_fields {
  editions: bigint
  id: Int
  royalties: Int
}

"""
order by sum() on columns of table "article"
"""
input article_sum_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate var_pop on columns"""
type article_var_pop_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by var_pop() on columns of table "article"
"""
input article_var_pop_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate var_samp on columns"""
type article_var_samp_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by var_samp() on columns of table "article"
"""
input article_var_samp_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate variance on columns"""
type article_variance_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by variance() on columns of table "article"
"""
input article_variance_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""
columns and relationships of "artist"
"""
type artist {
  """An object relationship"""
  account: foreign_account
  id: uuid
}

"""
aggregated selection of "artist"
"""
type artist_aggregate {
  aggregate: artist_aggregate_fields
  nodes: [artist!]!
}

"""
aggregate fields of "artist"
"""
type artist_aggregate_fields {
  count(columns: [artist_select_column!], distinct: Boolean): Int!
  max: artist_max_fields
  min: artist_min_fields
}

"""
Boolean expression to filter rows from the table "artist". All fields are combined with a logical 'AND'.
"""
input artist_bool_exp {
  _and: [artist_bool_exp!]
  _not: artist_bool_exp
  _or: [artist_bool_exp!]
  account: foreign_account_bool_exp
  id: uuid_comparison_exp
}

"""aggregate max on columns"""
type artist_max_fields {
  id: uuid
}

"""aggregate min on columns"""
type artist_min_fields {
  id: uuid
}

"""Ordering options when selecting data from "artist"."""
input artist_order_by {
  account: foreign_account_order_by
  id: order_by
}

"""
select columns of table "artist"
"""
enum artist_select_column {
  """column name"""
  id
}

"""
Streaming cursor of the table "artist"
"""
input artist_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: artist_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input artist_stream_cursor_value_input {
  id: uuid
}

"""
columns and relationships of "auction"
"""
type auction {
  """An object relationship"""
  auction_bid_table: auction_bid_table

  """An array relationship"""
  auction_bids(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!
  bid_table_id: Int
  bid_time_increment: Int!
  cancelled_at: timestamptz
  created_at: timestamptz!
  ends_at: timestamptz
  fulfilled_at: timestamptz
  id: Int!
  min_duration: Int!

  """An object relationship"""
  objkt: objkt
  objkt_id: String
  reserve_price: bigint!
  seller_id: String

  """An object relationship"""
  user: user
  version: Int!
}

"""
order by aggregate values of table "auction"
"""
input auction_aggregate_order_by {
  avg: auction_avg_order_by
  count: order_by
  max: auction_max_order_by
  min: auction_min_order_by
  stddev: auction_stddev_order_by
  stddev_pop: auction_stddev_pop_order_by
  stddev_samp: auction_stddev_samp_order_by
  sum: auction_sum_order_by
  var_pop: auction_var_pop_order_by
  var_samp: auction_var_samp_order_by
  variance: auction_variance_order_by
}

"""
order by avg() on columns of table "auction"
"""
input auction_avg_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
columns and relationships of "auction_bid"
"""
type auction_bid {
  """An object relationship"""
  auction: auction
  auction_id: Int
  auction_version: Int
  bidder_id: String
  created_at: timestamptz!
  id: uuid!
  price: numeric!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "auction_bid"
"""
input auction_bid_aggregate_order_by {
  avg: auction_bid_avg_order_by
  count: order_by
  max: auction_bid_max_order_by
  min: auction_bid_min_order_by
  stddev: auction_bid_stddev_order_by
  stddev_pop: auction_bid_stddev_pop_order_by
  stddev_samp: auction_bid_stddev_samp_order_by
  sum: auction_bid_sum_order_by
  var_pop: auction_bid_var_pop_order_by
  var_samp: auction_bid_var_samp_order_by
  variance: auction_bid_variance_order_by
}

"""
order by avg() on columns of table "auction_bid"
"""
input auction_bid_avg_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
Boolean expression to filter rows from the table "auction_bid". All fields are combined with a logical 'AND'.
"""
input auction_bid_bool_exp {
  _and: [auction_bid_bool_exp!]
  _not: auction_bid_bool_exp
  _or: [auction_bid_bool_exp!]
  auction: auction_bool_exp
  auction_id: Int_comparison_exp
  auction_version: Int_comparison_exp
  bidder_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  price: numeric_comparison_exp
  user: user_bool_exp
}

"""
order by max() on columns of table "auction_bid"
"""
input auction_bid_max_order_by {
  auction_id: order_by
  auction_version: order_by
  bidder_id: order_by
  created_at: order_by
  id: order_by
  price: order_by
}

"""
order by min() on columns of table "auction_bid"
"""
input auction_bid_min_order_by {
  auction_id: order_by
  auction_version: order_by
  bidder_id: order_by
  created_at: order_by
  id: order_by
  price: order_by
}

"""Ordering options when selecting data from "auction_bid"."""
input auction_bid_order_by {
  auction: auction_order_by
  auction_id: order_by
  auction_version: order_by
  bidder_id: order_by
  created_at: order_by
  id: order_by
  price: order_by
  user: user_order_by
}

"""
select columns of table "auction_bid"
"""
enum auction_bid_select_column {
  """column name"""
  auction_id

  """column name"""
  auction_version

  """column name"""
  bidder_id

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  price
}

"""
order by stddev() on columns of table "auction_bid"
"""
input auction_bid_stddev_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
order by stddev_pop() on columns of table "auction_bid"
"""
input auction_bid_stddev_pop_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
order by stddev_samp() on columns of table "auction_bid"
"""
input auction_bid_stddev_samp_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
Streaming cursor of the table "auction_bid"
"""
input auction_bid_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: auction_bid_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input auction_bid_stream_cursor_value_input {
  auction_id: Int
  auction_version: Int
  bidder_id: String
  created_at: timestamptz
  id: uuid
  price: numeric
}

"""
order by sum() on columns of table "auction_bid"
"""
input auction_bid_sum_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
columns and relationships of "auction_bid_table"
"""
type auction_bid_table {
  """An array relationship"""
  auctions(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!
  id: Int!
  table(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
Boolean expression to filter rows from the table "auction_bid_table". All fields are combined with a logical 'AND'.
"""
input auction_bid_table_bool_exp {
  _and: [auction_bid_table_bool_exp!]
  _not: auction_bid_table_bool_exp
  _or: [auction_bid_table_bool_exp!]
  auctions: auction_bool_exp
  id: Int_comparison_exp
  table: jsonb_comparison_exp
}

"""Ordering options when selecting data from "auction_bid_table"."""
input auction_bid_table_order_by {
  auctions_aggregate: auction_aggregate_order_by
  id: order_by
  table: order_by
}

"""
select columns of table "auction_bid_table"
"""
enum auction_bid_table_select_column {
  """column name"""
  id

  """column name"""
  table
}

"""
Streaming cursor of the table "auction_bid_table"
"""
input auction_bid_table_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: auction_bid_table_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input auction_bid_table_stream_cursor_value_input {
  id: Int
  table: jsonb
}

"""
order by var_pop() on columns of table "auction_bid"
"""
input auction_bid_var_pop_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
order by var_samp() on columns of table "auction_bid"
"""
input auction_bid_var_samp_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
order by variance() on columns of table "auction_bid"
"""
input auction_bid_variance_order_by {
  auction_id: order_by
  auction_version: order_by
  price: order_by
}

"""
Boolean expression to filter rows from the table "auction". All fields are combined with a logical 'AND'.
"""
input auction_bool_exp {
  _and: [auction_bool_exp!]
  _not: auction_bool_exp
  _or: [auction_bool_exp!]
  auction_bid_table: auction_bid_table_bool_exp
  auction_bids: auction_bid_bool_exp
  bid_table_id: Int_comparison_exp
  bid_time_increment: Int_comparison_exp
  cancelled_at: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  ends_at: timestamptz_comparison_exp
  fulfilled_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  min_duration: Int_comparison_exp
  objkt: objkt_bool_exp
  objkt_id: String_comparison_exp
  reserve_price: bigint_comparison_exp
  seller_id: String_comparison_exp
  user: user_bool_exp
  version: Int_comparison_exp
}

"""
order by max() on columns of table "auction"
"""
input auction_max_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  cancelled_at: order_by
  created_at: order_by
  ends_at: order_by
  fulfilled_at: order_by
  id: order_by
  min_duration: order_by
  objkt_id: order_by
  reserve_price: order_by
  seller_id: order_by
  version: order_by
}

"""
order by min() on columns of table "auction"
"""
input auction_min_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  cancelled_at: order_by
  created_at: order_by
  ends_at: order_by
  fulfilled_at: order_by
  id: order_by
  min_duration: order_by
  objkt_id: order_by
  reserve_price: order_by
  seller_id: order_by
  version: order_by
}

"""Ordering options when selecting data from "auction"."""
input auction_order_by {
  auction_bid_table: auction_bid_table_order_by
  auction_bids_aggregate: auction_bid_aggregate_order_by
  bid_table_id: order_by
  bid_time_increment: order_by
  cancelled_at: order_by
  created_at: order_by
  ends_at: order_by
  fulfilled_at: order_by
  id: order_by
  min_duration: order_by
  objkt: objkt_order_by
  objkt_id: order_by
  reserve_price: order_by
  seller_id: order_by
  user: user_order_by
  version: order_by
}

"""
select columns of table "auction"
"""
enum auction_select_column {
  """column name"""
  bid_table_id

  """column name"""
  bid_time_increment

  """column name"""
  cancelled_at

  """column name"""
  created_at

  """column name"""
  ends_at

  """column name"""
  fulfilled_at

  """column name"""
  id

  """column name"""
  min_duration

  """column name"""
  objkt_id

  """column name"""
  reserve_price

  """column name"""
  seller_id

  """column name"""
  version
}

"""
order by stddev() on columns of table "auction"
"""
input auction_stddev_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
order by stddev_pop() on columns of table "auction"
"""
input auction_stddev_pop_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
order by stddev_samp() on columns of table "auction"
"""
input auction_stddev_samp_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
Streaming cursor of the table "auction"
"""
input auction_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: auction_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input auction_stream_cursor_value_input {
  bid_table_id: Int
  bid_time_increment: Int
  cancelled_at: timestamptz
  created_at: timestamptz
  ends_at: timestamptz
  fulfilled_at: timestamptz
  id: Int
  min_duration: Int
  objkt_id: String
  reserve_price: bigint
  seller_id: String
  version: Int
}

"""
order by sum() on columns of table "auction"
"""
input auction_sum_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
order by var_pop() on columns of table "auction"
"""
input auction_var_pop_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
order by var_samp() on columns of table "auction"
"""
input auction_var_samp_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
order by variance() on columns of table "auction"
"""
input auction_variance_order_by {
  bid_table_id: order_by
  bid_time_increment: order_by
  id: order_by
  min_duration: order_by
  reserve_price: order_by
  version: order_by
}

"""
columns and relationships of "squid_processor_base.status"
"""
type base_indexer {
  hash: String
  height: Int!
  id: Int!
  nonce: Int
}

"""
Boolean expression to filter rows from the table "squid_processor_base.status". All fields are combined with a logical 'AND'.
"""
input base_indexer_bool_exp {
  _and: [base_indexer_bool_exp!]
  _not: base_indexer_bool_exp
  _or: [base_indexer_bool_exp!]
  hash: String_comparison_exp
  height: Int_comparison_exp
  id: Int_comparison_exp
  nonce: Int_comparison_exp
}

"""
Ordering options when selecting data from "squid_processor_base.status".
"""
input base_indexer_order_by {
  hash: order_by
  height: order_by
  id: order_by
  nonce: order_by
}

"""
select columns of table "squid_processor_base.status"
"""
enum base_indexer_select_column {
  """column name"""
  hash

  """column name"""
  height

  """column name"""
  id

  """column name"""
  nonce
}

"""
Streaming cursor of the table "base_indexer"
"""
input base_indexer_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: base_indexer_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input base_indexer_stream_cursor_value_input {
  hash: String
  height: Int
  id: Int
  nonce: Int
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

scalar bpchar

"""
Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'.
"""
input bpchar_comparison_exp {
  _eq: bpchar
  _gt: bpchar
  _gte: bpchar

  """does the column match the given case-insensitive pattern"""
  _ilike: bpchar
  _in: [bpchar!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: bpchar
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: bpchar
  _lt: bpchar
  _lte: bpchar
  _neq: bpchar

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: bpchar
  _nin: [bpchar!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: bpchar

  """does the column NOT match the given pattern"""
  _nlike: bpchar

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: bpchar

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: bpchar

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: bpchar

  """does the column match the given SQL regular expression"""
  _similar: bpchar
}

"""
columns and relationships of "codex"
"""
type codex {
  author_id: String!

  """An array relationship"""
  generative_tokens(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """An aggregate relationship"""
  generative_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!
  id: String!
  locked: Boolean!
  token_version: generative_token_version!
  type: codex_type_enum!

  """An object relationship"""
  user: user!
  value: String
}

"""
order by aggregate values of table "codex"
"""
input codex_aggregate_order_by {
  count: order_by
  max: codex_max_order_by
  min: codex_min_order_by
}

"""
Boolean expression to filter rows from the table "codex". All fields are combined with a logical 'AND'.
"""
input codex_bool_exp {
  _and: [codex_bool_exp!]
  _not: codex_bool_exp
  _or: [codex_bool_exp!]
  author_id: String_comparison_exp
  generative_tokens: generative_token_bool_exp
  generative_tokens_aggregate: generative_token_aggregate_bool_exp
  id: String_comparison_exp
  locked: Boolean_comparison_exp
  token_version: generative_token_version_comparison_exp
  type: codex_type_enum_comparison_exp
  user: user_bool_exp
  value: String_comparison_exp
}

"""
order by max() on columns of table "codex"
"""
input codex_max_order_by {
  author_id: order_by
  id: order_by
  token_version: order_by
  type: order_by
  value: order_by
}

"""
order by min() on columns of table "codex"
"""
input codex_min_order_by {
  author_id: order_by
  id: order_by
  token_version: order_by
  type: order_by
  value: order_by
}

"""Ordering options when selecting data from "codex"."""
input codex_order_by {
  author_id: order_by
  generative_tokens_aggregate: generative_token_aggregate_order_by
  id: order_by
  locked: order_by
  token_version: order_by
  type: order_by
  user: user_order_by
  value: order_by
}

"""
select columns of table "codex"
"""
enum codex_select_column {
  """column name"""
  author_id

  """column name"""
  id

  """column name"""
  locked

  """column name"""
  token_version

  """column name"""
  type

  """column name"""
  value
}

"""
Streaming cursor of the table "codex"
"""
input codex_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: codex_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input codex_stream_cursor_value_input {
  author_id: String
  id: String
  locked: Boolean
  token_version: generative_token_version
  type: codex_type_enum
  value: String
}

scalar codex_type_enum

"""
Boolean expression to compare columns of type "codex_type_enum". All fields are combined with logical 'AND'.
"""
input codex_type_enum_comparison_exp {
  _eq: codex_type_enum
  _gt: codex_type_enum
  _gte: codex_type_enum
  _in: [codex_type_enum!]
  _is_null: Boolean
  _lt: codex_type_enum
  _lte: codex_type_enum
  _neq: codex_type_enum
  _nin: [codex_type_enum!]
}

"""
columns and relationships of "codex_update_request"
"""
type codex_update_request {
  codex_id: String!
  created_at: timestamptz!

  """An object relationship"""
  generative_token: generative_token!
  status: codex_update_request_status_enum!
  token_id: String!
  token_version: generative_token_version!
}

"""
order by aggregate values of table "codex_update_request"
"""
input codex_update_request_aggregate_order_by {
  count: order_by
  max: codex_update_request_max_order_by
  min: codex_update_request_min_order_by
}

"""
Boolean expression to filter rows from the table "codex_update_request". All fields are combined with a logical 'AND'.
"""
input codex_update_request_bool_exp {
  _and: [codex_update_request_bool_exp!]
  _not: codex_update_request_bool_exp
  _or: [codex_update_request_bool_exp!]
  codex_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  status: codex_update_request_status_enum_comparison_exp
  token_id: String_comparison_exp
  token_version: generative_token_version_comparison_exp
}

"""
order by max() on columns of table "codex_update_request"
"""
input codex_update_request_max_order_by {
  codex_id: order_by
  created_at: order_by
  status: order_by
  token_id: order_by
  token_version: order_by
}

"""
order by min() on columns of table "codex_update_request"
"""
input codex_update_request_min_order_by {
  codex_id: order_by
  created_at: order_by
  status: order_by
  token_id: order_by
  token_version: order_by
}

"""Ordering options when selecting data from "codex_update_request"."""
input codex_update_request_order_by {
  codex_id: order_by
  created_at: order_by
  generative_token: generative_token_order_by
  status: order_by
  token_id: order_by
  token_version: order_by
}

"""
select columns of table "codex_update_request"
"""
enum codex_update_request_select_column {
  """column name"""
  codex_id

  """column name"""
  created_at

  """column name"""
  status

  """column name"""
  token_id

  """column name"""
  token_version
}

scalar codex_update_request_status_enum

"""
Boolean expression to compare columns of type "codex_update_request_status_enum". All fields are combined with logical 'AND'.
"""
input codex_update_request_status_enum_comparison_exp {
  _eq: codex_update_request_status_enum
  _gt: codex_update_request_status_enum
  _gte: codex_update_request_status_enum
  _in: [codex_update_request_status_enum!]
  _is_null: Boolean
  _lt: codex_update_request_status_enum
  _lte: codex_update_request_status_enum
  _neq: codex_update_request_status_enum
  _nin: [codex_update_request_status_enum!]
}

"""
Streaming cursor of the table "codex_update_request"
"""
input codex_update_request_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: codex_update_request_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input codex_update_request_stream_cursor_value_input {
  codex_id: String
  created_at: timestamptz
  status: codex_update_request_status_enum
  token_id: String
  token_version: generative_token_version
}

"""
columns and relationships of "collaboration"
"""
type collaboration {
  collaboration_contract_id: String!
  collaborator_id: String!

  """An object relationship"""
  user: user!

  """An object relationship"""
  userByCollaboratorId: user!
}

"""
order by aggregate values of table "collaboration"
"""
input collaboration_aggregate_order_by {
  count: order_by
  max: collaboration_max_order_by
  min: collaboration_min_order_by
}

"""
Boolean expression to filter rows from the table "collaboration". All fields are combined with a logical 'AND'.
"""
input collaboration_bool_exp {
  _and: [collaboration_bool_exp!]
  _not: collaboration_bool_exp
  _or: [collaboration_bool_exp!]
  collaboration_contract_id: String_comparison_exp
  collaborator_id: String_comparison_exp
  user: user_bool_exp
  userByCollaboratorId: user_bool_exp
}

"""
order by max() on columns of table "collaboration"
"""
input collaboration_max_order_by {
  collaboration_contract_id: order_by
  collaborator_id: order_by
}

"""
order by min() on columns of table "collaboration"
"""
input collaboration_min_order_by {
  collaboration_contract_id: order_by
  collaborator_id: order_by
}

"""Ordering options when selecting data from "collaboration"."""
input collaboration_order_by {
  collaboration_contract_id: order_by
  collaborator_id: order_by
  user: user_order_by
  userByCollaboratorId: user_order_by
}

"""
select columns of table "collaboration"
"""
enum collaboration_select_column {
  """column name"""
  collaboration_contract_id

  """column name"""
  collaborator_id
}

"""
Streaming cursor of the table "collaboration"
"""
input collaboration_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: collaboration_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input collaboration_stream_cursor_value_input {
  collaboration_contract_id: String
  collaborator_id: String
}

"""
columns and relationships of "collection_offer"
"""
type collection_offer {
  amount: numeric!
  buyer_id: String!
  cancelled_at: timestamptz
  completed_at: timestamptz
  created_at: timestamptz!

  """An object relationship"""
  generative_token: generative_token!
  id: String!
  initial_amount: numeric!
  is_inactive: Boolean
  metadata(
    """JSON select path"""
    path: String
  ): jsonb
  price: numeric!
  status: collection_offer_status_enum!
  token_id: String!

  """An object relationship"""
  user: user!
  version: Int!
}

"""
order by aggregate values of table "collection_offer"
"""
input collection_offer_aggregate_order_by {
  avg: collection_offer_avg_order_by
  count: order_by
  max: collection_offer_max_order_by
  min: collection_offer_min_order_by
  stddev: collection_offer_stddev_order_by
  stddev_pop: collection_offer_stddev_pop_order_by
  stddev_samp: collection_offer_stddev_samp_order_by
  sum: collection_offer_sum_order_by
  var_pop: collection_offer_var_pop_order_by
  var_samp: collection_offer_var_samp_order_by
  variance: collection_offer_variance_order_by
}

"""
order by avg() on columns of table "collection_offer"
"""
input collection_offer_avg_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "collection_offer". All fields are combined with a logical 'AND'.
"""
input collection_offer_bool_exp {
  _and: [collection_offer_bool_exp!]
  _not: collection_offer_bool_exp
  _or: [collection_offer_bool_exp!]
  amount: numeric_comparison_exp
  buyer_id: String_comparison_exp
  cancelled_at: timestamptz_comparison_exp
  completed_at: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  initial_amount: numeric_comparison_exp
  is_inactive: Boolean_comparison_exp
  metadata: jsonb_comparison_exp
  price: numeric_comparison_exp
  status: collection_offer_status_enum_comparison_exp
  token_id: String_comparison_exp
  user: user_bool_exp
  version: Int_comparison_exp
}

"""
order by max() on columns of table "collection_offer"
"""
input collection_offer_max_order_by {
  amount: order_by
  buyer_id: order_by
  cancelled_at: order_by
  completed_at: order_by
  created_at: order_by
  id: order_by
  initial_amount: order_by
  price: order_by
  status: order_by
  token_id: order_by
  version: order_by
}

"""
order by min() on columns of table "collection_offer"
"""
input collection_offer_min_order_by {
  amount: order_by
  buyer_id: order_by
  cancelled_at: order_by
  completed_at: order_by
  created_at: order_by
  id: order_by
  initial_amount: order_by
  price: order_by
  status: order_by
  token_id: order_by
  version: order_by
}

"""Ordering options when selecting data from "collection_offer"."""
input collection_offer_order_by {
  amount: order_by
  buyer_id: order_by
  cancelled_at: order_by
  completed_at: order_by
  created_at: order_by
  generative_token: generative_token_order_by
  id: order_by
  initial_amount: order_by
  is_inactive: order_by
  metadata: order_by
  price: order_by
  status: order_by
  token_id: order_by
  user: user_order_by
  version: order_by
}

"""
select columns of table "collection_offer"
"""
enum collection_offer_select_column {
  """column name"""
  amount

  """column name"""
  buyer_id

  """column name"""
  cancelled_at

  """column name"""
  completed_at

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  initial_amount

  """column name"""
  is_inactive

  """column name"""
  metadata

  """column name"""
  price

  """column name"""
  status

  """column name"""
  token_id

  """column name"""
  version
}

scalar collection_offer_status_enum

"""
Boolean expression to compare columns of type "collection_offer_status_enum". All fields are combined with logical 'AND'.
"""
input collection_offer_status_enum_comparison_exp {
  _eq: collection_offer_status_enum
  _gt: collection_offer_status_enum
  _gte: collection_offer_status_enum
  _in: [collection_offer_status_enum!]
  _is_null: Boolean
  _lt: collection_offer_status_enum
  _lte: collection_offer_status_enum
  _neq: collection_offer_status_enum
  _nin: [collection_offer_status_enum!]
}

"""
order by stddev() on columns of table "collection_offer"
"""
input collection_offer_stddev_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""
order by stddev_pop() on columns of table "collection_offer"
"""
input collection_offer_stddev_pop_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""
order by stddev_samp() on columns of table "collection_offer"
"""
input collection_offer_stddev_samp_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""
Streaming cursor of the table "collection_offer"
"""
input collection_offer_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: collection_offer_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input collection_offer_stream_cursor_value_input {
  amount: numeric
  buyer_id: String
  cancelled_at: timestamptz
  completed_at: timestamptz
  created_at: timestamptz
  id: String
  initial_amount: numeric
  is_inactive: Boolean
  metadata: jsonb
  price: numeric
  status: collection_offer_status_enum
  token_id: String
  version: Int
}

"""
order by sum() on columns of table "collection_offer"
"""
input collection_offer_sum_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""
order by var_pop() on columns of table "collection_offer"
"""
input collection_offer_var_pop_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""
order by var_samp() on columns of table "collection_offer"
"""
input collection_offer_var_samp_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""
order by variance() on columns of table "collection_offer"
"""
input collection_offer_variance_order_by {
  amount: order_by
  initial_amount: order_by
  price: order_by
  version: order_by
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

"""
columns and relationships of "eth_frame_data"
"""
type eth_frame_data {
  frame_minter_data(
    """JSON select path"""
    path: String
  ): jsonb
  id: String!
}

"""
Boolean expression to filter rows from the table "eth_frame_data". All fields are combined with a logical 'AND'.
"""
input eth_frame_data_bool_exp {
  _and: [eth_frame_data_bool_exp!]
  _not: eth_frame_data_bool_exp
  _or: [eth_frame_data_bool_exp!]
  frame_minter_data: jsonb_comparison_exp
  id: String_comparison_exp
}

"""Ordering options when selecting data from "eth_frame_data"."""
input eth_frame_data_order_by {
  frame_minter_data: order_by
  id: order_by
}

"""
select columns of table "eth_frame_data"
"""
enum eth_frame_data_select_column {
  """column name"""
  frame_minter_data

  """column name"""
  id
}

"""
Streaming cursor of the table "eth_frame_data"
"""
input eth_frame_data_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eth_frame_data_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eth_frame_data_stream_cursor_value_input {
  frame_minter_data: jsonb
  id: String
}

"""
columns and relationships of "squid_processor.status"
"""
type eth_indexer {
  hash: String
  height: Int!
  id: Int!
  nonce: Int
}

"""
Boolean expression to filter rows from the table "squid_processor.status". All fields are combined with a logical 'AND'.
"""
input eth_indexer_bool_exp {
  _and: [eth_indexer_bool_exp!]
  _not: eth_indexer_bool_exp
  _or: [eth_indexer_bool_exp!]
  hash: String_comparison_exp
  height: Int_comparison_exp
  id: Int_comparison_exp
  nonce: Int_comparison_exp
}

"""Ordering options when selecting data from "squid_processor.status"."""
input eth_indexer_order_by {
  hash: order_by
  height: order_by
  id: order_by
  nonce: order_by
}

"""
select columns of table "squid_processor.status"
"""
enum eth_indexer_select_column {
  """column name"""
  hash

  """column name"""
  height

  """column name"""
  id

  """column name"""
  nonce
}

"""
Streaming cursor of the table "eth_indexer"
"""
input eth_indexer_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eth_indexer_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eth_indexer_stream_cursor_value_input {
  hash: String
  height: Int
  id: Int
  nonce: Int
}

"""
columns and relationships of "eth_minter_proceeds"
"""
type eth_minter_proceeds {
  amount: numeric!
  chain: String!
  count: numeric!
  id: String!
  minter_address: String!
  primary_receiver: String!
  reserve_id: numeric
  token_address: String!
  user_address: String!
}

"""
Boolean expression to filter rows from the table "eth_minter_proceeds". All fields are combined with a logical 'AND'.
"""
input eth_minter_proceeds_bool_exp {
  _and: [eth_minter_proceeds_bool_exp!]
  _not: eth_minter_proceeds_bool_exp
  _or: [eth_minter_proceeds_bool_exp!]
  amount: numeric_comparison_exp
  chain: String_comparison_exp
  count: numeric_comparison_exp
  id: String_comparison_exp
  minter_address: String_comparison_exp
  primary_receiver: String_comparison_exp
  reserve_id: numeric_comparison_exp
  token_address: String_comparison_exp
  user_address: String_comparison_exp
}

"""Ordering options when selecting data from "eth_minter_proceeds"."""
input eth_minter_proceeds_order_by {
  amount: order_by
  chain: order_by
  count: order_by
  id: order_by
  minter_address: order_by
  primary_receiver: order_by
  reserve_id: order_by
  token_address: order_by
  user_address: order_by
}

"""
select columns of table "eth_minter_proceeds"
"""
enum eth_minter_proceeds_select_column {
  """column name"""
  amount

  """column name"""
  chain

  """column name"""
  count

  """column name"""
  id

  """column name"""
  minter_address

  """column name"""
  primary_receiver

  """column name"""
  reserve_id

  """column name"""
  token_address

  """column name"""
  user_address
}

"""
Streaming cursor of the table "eth_minter_proceeds"
"""
input eth_minter_proceeds_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eth_minter_proceeds_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eth_minter_proceeds_stream_cursor_value_input {
  amount: numeric
  chain: String
  count: numeric
  id: String
  minter_address: String
  primary_receiver: String
  reserve_id: numeric
  token_address: String
  user_address: String
}

"""
columns and relationships of "eth_primary_splits"
"""
type eth_primary_splits {
  allocations: [Int!]!
  chain: String!
  id: String!
  receiver: String!
  receivers: [String!]!
}

"""
Boolean expression to filter rows from the table "eth_primary_splits". All fields are combined with a logical 'AND'.
"""
input eth_primary_splits_bool_exp {
  _and: [eth_primary_splits_bool_exp!]
  _not: eth_primary_splits_bool_exp
  _or: [eth_primary_splits_bool_exp!]
  allocations: Int_array_comparison_exp
  chain: String_comparison_exp
  id: String_comparison_exp
  receiver: String_comparison_exp
  receivers: String_array_comparison_exp
}

"""Ordering options when selecting data from "eth_primary_splits"."""
input eth_primary_splits_order_by {
  allocations: order_by
  chain: order_by
  id: order_by
  receiver: order_by
  receivers: order_by
}

"""
select columns of table "eth_primary_splits"
"""
enum eth_primary_splits_select_column {
  """column name"""
  allocations

  """column name"""
  chain

  """column name"""
  id

  """column name"""
  receiver

  """column name"""
  receivers
}

"""
Streaming cursor of the table "eth_primary_splits"
"""
input eth_primary_splits_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eth_primary_splits_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eth_primary_splits_stream_cursor_value_input {
  allocations: [Int!]
  chain: String
  id: String
  receiver: String
  receivers: [String!]
}

"""
columns and relationships of "eth_secondary_splits"
"""
type eth_secondary_splits {
  allocations: [Int!]!
  basis_points: Int!
  chain: String!
  id: String!
  receiver: String!
  receivers: [String!]!
}

"""
Boolean expression to filter rows from the table "eth_secondary_splits". All fields are combined with a logical 'AND'.
"""
input eth_secondary_splits_bool_exp {
  _and: [eth_secondary_splits_bool_exp!]
  _not: eth_secondary_splits_bool_exp
  _or: [eth_secondary_splits_bool_exp!]
  allocations: Int_array_comparison_exp
  basis_points: Int_comparison_exp
  chain: String_comparison_exp
  id: String_comparison_exp
  receiver: String_comparison_exp
  receivers: String_array_comparison_exp
}

"""Ordering options when selecting data from "eth_secondary_splits"."""
input eth_secondary_splits_order_by {
  allocations: order_by
  basis_points: order_by
  chain: order_by
  id: order_by
  receiver: order_by
  receivers: order_by
}

"""
select columns of table "eth_secondary_splits"
"""
enum eth_secondary_splits_select_column {
  """column name"""
  allocations

  """column name"""
  basis_points

  """column name"""
  chain

  """column name"""
  id

  """column name"""
  receiver

  """column name"""
  receivers
}

"""
Streaming cursor of the table "eth_secondary_splits"
"""
input eth_secondary_splits_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eth_secondary_splits_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eth_secondary_splits_stream_cursor_value_input {
  allocations: [Int!]
  basis_points: Int
  chain: String
  id: String
  receiver: String
  receivers: [String!]
}

"""
columns and relationships of "eth_user_proceeds"
"""
type eth_user_proceeds {
  chain: String!
  id: String!
  total_proceeds: numeric!
}

"""
Boolean expression to filter rows from the table "eth_user_proceeds". All fields are combined with a logical 'AND'.
"""
input eth_user_proceeds_bool_exp {
  _and: [eth_user_proceeds_bool_exp!]
  _not: eth_user_proceeds_bool_exp
  _or: [eth_user_proceeds_bool_exp!]
  chain: String_comparison_exp
  id: String_comparison_exp
  total_proceeds: numeric_comparison_exp
}

"""Ordering options when selecting data from "eth_user_proceeds"."""
input eth_user_proceeds_order_by {
  chain: order_by
  id: order_by
  total_proceeds: order_by
}

"""
select columns of table "eth_user_proceeds"
"""
enum eth_user_proceeds_select_column {
  """column name"""
  chain

  """column name"""
  id

  """column name"""
  total_proceeds
}

"""
Streaming cursor of the table "eth_user_proceeds"
"""
input eth_user_proceeds_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eth_user_proceeds_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eth_user_proceeds_stream_cursor_value_input {
  chain: String
  id: String
  total_proceeds: numeric
}

scalar float8

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""
columns and relationships of "foreign_account"
"""
type foreign_account {
  """
  A computed field, executes function "get_account_flag"
  """
  flag: String
  id: uuid
  username: String

  """An array relationship"""
  wallets(
    """distinct select on columns"""
    distinct_on: [foreign_wallet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [foreign_wallet_order_by!]

    """filter the rows returned"""
    where: foreign_wallet_bool_exp
  ): [foreign_wallet!]!
}

"""
Boolean expression to filter rows from the table "foreign_account". All fields are combined with a logical 'AND'.
"""
input foreign_account_bool_exp {
  _and: [foreign_account_bool_exp!]
  _not: foreign_account_bool_exp
  _or: [foreign_account_bool_exp!]
  flag: String_comparison_exp
  id: uuid_comparison_exp
  username: String_comparison_exp
  wallets: foreign_wallet_bool_exp
}

"""Ordering options when selecting data from "foreign_account"."""
input foreign_account_order_by {
  flag: order_by
  id: order_by
  username: order_by
  wallets_aggregate: foreign_wallet_aggregate_order_by
}

"""
select columns of table "foreign_account"
"""
enum foreign_account_select_column {
  """column name"""
  id

  """column name"""
  username
}

"""
Streaming cursor of the table "foreign_account"
"""
input foreign_account_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: foreign_account_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input foreign_account_stream_cursor_value_input {
  id: uuid
  username: String
}

"""
columns and relationships of "foreign_wallet"
"""
type foreign_wallet {
  """An object relationship"""
  account: foreign_account
  accountId: uuid
  address: String

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "foreign_wallet"
"""
input foreign_wallet_aggregate_order_by {
  count: order_by
  max: foreign_wallet_max_order_by
  min: foreign_wallet_min_order_by
}

"""
Boolean expression to filter rows from the table "foreign_wallet". All fields are combined with a logical 'AND'.
"""
input foreign_wallet_bool_exp {
  _and: [foreign_wallet_bool_exp!]
  _not: foreign_wallet_bool_exp
  _or: [foreign_wallet_bool_exp!]
  account: foreign_account_bool_exp
  accountId: uuid_comparison_exp
  address: String_comparison_exp
  user: user_bool_exp
}

"""
order by max() on columns of table "foreign_wallet"
"""
input foreign_wallet_max_order_by {
  accountId: order_by
  address: order_by
}

"""
order by min() on columns of table "foreign_wallet"
"""
input foreign_wallet_min_order_by {
  accountId: order_by
  address: order_by
}

"""Ordering options when selecting data from "foreign_wallet"."""
input foreign_wallet_order_by {
  account: foreign_account_order_by
  accountId: order_by
  address: order_by
  user: user_order_by
}

"""
select columns of table "foreign_wallet"
"""
enum foreign_wallet_select_column {
  """column name"""
  accountId

  """column name"""
  address
}

"""
Streaming cursor of the table "foreign_wallet"
"""
input foreign_wallet_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: foreign_wallet_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input foreign_wallet_stream_cursor_value_input {
  accountId: uuid
  address: String
}

"""
columns and relationships of "generative_token"
"""
type generative_token {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """An object relationship"""
  author: user
  author_id: String
  balance: numeric!
  capture_media_id: bpchar

  """
  A computed field, executes function "token_chain_for_token"
  """
  chain: String

  """An object relationship"""
  codex: codex
  codex_id: String

  """An array relationship"""
  codex_update_requests(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """An array relationship"""
  collection_offers(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """An array relationship"""
  collectors(
    """distinct select on columns"""
    distinct_on: [generative_token_collected_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_collected_order_by!]

    """filter the rows returned"""
    where: generative_token_collected_bool_exp
  ): [generative_token_collected!]!

  """An aggregate relationship"""
  collectors_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_collected_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_collected_order_by!]

    """filter the rows returned"""
    where: generative_token_collected_bool_exp
  ): generative_token_collected_aggregate!
  created_at: timestamptz!
  display_uri: String
  enabled: Boolean!

  """
  A computed field, executes function "get_features_for_generative_token"
  """
  features(
    """JSON select path"""
    path: String
  ): jsonb
  flag: generative_token_flag_enum!

  """An array relationship"""
  generative_token_articles(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!
  generative_uri: String
  id: String!
  input_bytes_size: Int!
  is_frame: Boolean
  iterations_count: numeric
  labels: [Int!]!
  lock_end: timestamptz!
  lock_price_for_reserves: Boolean!
  locked_seconds: Int!

  """An object relationship"""
  market_stat: market_stats

  """An array relationship"""
  market_stats_histories(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json
  metadata_uri: String
  mint_opens_at: timestamptz!

  """An array relationship"""
  mint_ticket_settings(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """An array relationship"""
  mint_tickets(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """An object relationship"""
  moderation_reason: moderation_reason
  moderation_reason_id: String
  name: String

  """An array relationship"""
  objkts(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """An aggregate relationship"""
  objkts_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!
  open_editions: Boolean!
  open_editions_ends_at: timestamptz
  original_supply: numeric!
  params_definition(
    """JSON select path"""
    path: String
  ): json
  preview_input_bytes: String

  """An array relationship"""
  pricing_dutch_auctions(
    """distinct select on columns"""
    distinct_on: [pricing_dutch_auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_dutch_auction_order_by!]

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): [pricing_dutch_auction!]!

  """An array relationship"""
  pricing_fixeds(
    """distinct select on columns"""
    distinct_on: [pricing_fixed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_fixed_order_by!]

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): [pricing_fixed!]!

  """
  A computed field, executes function "get_random_objkts"
  """
  random_objkts(
    """
    input parameters for computed field "random_objkts" defined on table "generative_token"
    """
    args: random_objkts_generative_token_args

    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]

  """An array relationship"""
  redeemables(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """An array relationship"""
  reserves(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!
  royalties: Int!
  slug: String!

  """An array relationship"""
  splits_primary(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """An array relationship"""
  splits_secondary(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!
  supply: numeric!
  tags: [String!]
  thumbnail_uri: String

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!
  updated_at: timestamptz

  """An object relationship"""
  user: user
  version: generative_token_version!

  """An object relationship"""
  wallet: foreign_wallet
}

"""
aggregated selection of "generative_token"
"""
type generative_token_aggregate {
  aggregate: generative_token_aggregate_fields
  nodes: [generative_token!]!
}

input generative_token_aggregate_bool_exp {
  bool_and: generative_token_aggregate_bool_exp_bool_and
  bool_or: generative_token_aggregate_bool_exp_bool_or
  count: generative_token_aggregate_bool_exp_count
}

input generative_token_aggregate_bool_exp_bool_and {
  arguments: generative_token_select_column_generative_token_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: generative_token_bool_exp
  predicate: Boolean_comparison_exp!
}

input generative_token_aggregate_bool_exp_bool_or {
  arguments: generative_token_select_column_generative_token_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: generative_token_bool_exp
  predicate: Boolean_comparison_exp!
}

input generative_token_aggregate_bool_exp_count {
  arguments: [generative_token_select_column!]
  distinct: Boolean
  filter: generative_token_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "generative_token"
"""
type generative_token_aggregate_fields {
  avg: generative_token_avg_fields
  count(columns: [generative_token_select_column!], distinct: Boolean): Int!
  max: generative_token_max_fields
  min: generative_token_min_fields
  stddev: generative_token_stddev_fields
  stddev_pop: generative_token_stddev_pop_fields
  stddev_samp: generative_token_stddev_samp_fields
  sum: generative_token_sum_fields
  var_pop: generative_token_var_pop_fields
  var_samp: generative_token_var_samp_fields
  variance: generative_token_variance_fields
}

"""
order by aggregate values of table "generative_token"
"""
input generative_token_aggregate_order_by {
  avg: generative_token_avg_order_by
  count: order_by
  max: generative_token_max_order_by
  min: generative_token_min_order_by
  stddev: generative_token_stddev_order_by
  stddev_pop: generative_token_stddev_pop_order_by
  stddev_samp: generative_token_stddev_samp_order_by
  sum: generative_token_sum_order_by
  var_pop: generative_token_var_pop_order_by
  var_samp: generative_token_var_samp_order_by
  variance: generative_token_variance_order_by
}

"""aggregate avg on columns"""
type generative_token_avg_fields {
  balance: Float
  input_bytes_size: Float
  iterations_count: Float
  locked_seconds: Float
  original_supply: Float

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Float
  supply: Float
}

"""
order by avg() on columns of table "generative_token"
"""
input generative_token_avg_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

"""
Boolean expression to filter rows from the table "generative_token". All fields are combined with a logical 'AND'.
"""
input generative_token_bool_exp {
  _and: [generative_token_bool_exp!]
  _not: generative_token_bool_exp
  _or: [generative_token_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  author: user_bool_exp
  author_id: String_comparison_exp
  balance: numeric_comparison_exp
  capture_media_id: bpchar_comparison_exp
  chain: String_comparison_exp
  codex: codex_bool_exp
  codex_id: String_comparison_exp
  codex_update_requests: codex_update_request_bool_exp
  collection_offers: collection_offer_bool_exp
  collectors: generative_token_collected_bool_exp
  collectors_aggregate: generative_token_collected_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  display_uri: String_comparison_exp
  enabled: Boolean_comparison_exp
  features: jsonb_comparison_exp
  flag: generative_token_flag_enum_comparison_exp
  generative_token_articles: article_generative_token_bool_exp
  generative_uri: String_comparison_exp
  id: String_comparison_exp
  input_bytes_size: Int_comparison_exp
  is_frame: Boolean_comparison_exp
  iterations_count: numeric_comparison_exp
  labels: Int_array_comparison_exp
  lock_end: timestamptz_comparison_exp
  lock_price_for_reserves: Boolean_comparison_exp
  locked_seconds: Int_comparison_exp
  market_stat: market_stats_bool_exp
  market_stats_histories: market_stats_history_bool_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadata_uri: String_comparison_exp
  mint_opens_at: timestamptz_comparison_exp
  mint_ticket_settings: mint_ticket_settings_bool_exp
  mint_tickets: mint_ticket_bool_exp
  moderation_reason: moderation_reason_bool_exp
  moderation_reason_id: String_comparison_exp
  name: String_comparison_exp
  objkts: objkt_bool_exp
  objkts_aggregate: objkt_aggregate_bool_exp
  open_editions: Boolean_comparison_exp
  open_editions_ends_at: timestamptz_comparison_exp
  original_supply: numeric_comparison_exp
  params_definition: json_comparison_exp
  preview_input_bytes: String_comparison_exp
  pricing_dutch_auctions: pricing_dutch_auction_bool_exp
  pricing_fixeds: pricing_fixed_bool_exp
  redeemables: redeemable_bool_exp
  redeemed_percentage: float8_comparison_exp
  reports: report_bool_exp
  reserves: reserve_bool_exp
  royalties: Int_comparison_exp
  slug: String_comparison_exp
  splits_primary: split_bool_exp
  splits_secondary: split_bool_exp
  supply: numeric_comparison_exp
  tags: String_array_comparison_exp
  thumbnail_uri: String_comparison_exp
  transactions: transaction_bool_exp
  updated_at: timestamptz_comparison_exp
  user: user_bool_exp
  version: generative_token_version_comparison_exp
  wallet: foreign_wallet_bool_exp
}

"""
columns and relationships of "generative_token_collected"
"""
type generative_token_collected {
  generative_token_id: String
  total_collected: bigint

  """An object relationship"""
  user: user
  user_id: String
}

"""
aggregated selection of "generative_token_collected"
"""
type generative_token_collected_aggregate {
  aggregate: generative_token_collected_aggregate_fields
  nodes: [generative_token_collected!]!
}

input generative_token_collected_aggregate_bool_exp {
  count: generative_token_collected_aggregate_bool_exp_count
}

input generative_token_collected_aggregate_bool_exp_count {
  arguments: [generative_token_collected_select_column!]
  distinct: Boolean
  filter: generative_token_collected_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "generative_token_collected"
"""
type generative_token_collected_aggregate_fields {
  avg: generative_token_collected_avg_fields
  count(columns: [generative_token_collected_select_column!], distinct: Boolean): Int!
  max: generative_token_collected_max_fields
  min: generative_token_collected_min_fields
  stddev: generative_token_collected_stddev_fields
  stddev_pop: generative_token_collected_stddev_pop_fields
  stddev_samp: generative_token_collected_stddev_samp_fields
  sum: generative_token_collected_sum_fields
  var_pop: generative_token_collected_var_pop_fields
  var_samp: generative_token_collected_var_samp_fields
  variance: generative_token_collected_variance_fields
}

"""
order by aggregate values of table "generative_token_collected"
"""
input generative_token_collected_aggregate_order_by {
  avg: generative_token_collected_avg_order_by
  count: order_by
  max: generative_token_collected_max_order_by
  min: generative_token_collected_min_order_by
  stddev: generative_token_collected_stddev_order_by
  stddev_pop: generative_token_collected_stddev_pop_order_by
  stddev_samp: generative_token_collected_stddev_samp_order_by
  sum: generative_token_collected_sum_order_by
  var_pop: generative_token_collected_var_pop_order_by
  var_samp: generative_token_collected_var_samp_order_by
  variance: generative_token_collected_variance_order_by
}

"""aggregate avg on columns"""
type generative_token_collected_avg_fields {
  total_collected: Float
}

"""
order by avg() on columns of table "generative_token_collected"
"""
input generative_token_collected_avg_order_by {
  total_collected: order_by
}

"""
Boolean expression to filter rows from the table "generative_token_collected". All fields are combined with a logical 'AND'.
"""
input generative_token_collected_bool_exp {
  _and: [generative_token_collected_bool_exp!]
  _not: generative_token_collected_bool_exp
  _or: [generative_token_collected_bool_exp!]
  generative_token_id: String_comparison_exp
  total_collected: bigint_comparison_exp
  user: user_bool_exp
  user_id: String_comparison_exp
}

"""aggregate max on columns"""
type generative_token_collected_max_fields {
  generative_token_id: String
  total_collected: bigint
  user_id: String
}

"""
order by max() on columns of table "generative_token_collected"
"""
input generative_token_collected_max_order_by {
  generative_token_id: order_by
  total_collected: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type generative_token_collected_min_fields {
  generative_token_id: String
  total_collected: bigint
  user_id: String
}

"""
order by min() on columns of table "generative_token_collected"
"""
input generative_token_collected_min_order_by {
  generative_token_id: order_by
  total_collected: order_by
  user_id: order_by
}

"""
Ordering options when selecting data from "generative_token_collected".
"""
input generative_token_collected_order_by {
  generative_token_id: order_by
  total_collected: order_by
  user: user_order_by
  user_id: order_by
}

"""
select columns of table "generative_token_collected"
"""
enum generative_token_collected_select_column {
  """column name"""
  generative_token_id

  """column name"""
  total_collected

  """column name"""
  user_id
}

"""aggregate stddev on columns"""
type generative_token_collected_stddev_fields {
  total_collected: Float
}

"""
order by stddev() on columns of table "generative_token_collected"
"""
input generative_token_collected_stddev_order_by {
  total_collected: order_by
}

"""aggregate stddev_pop on columns"""
type generative_token_collected_stddev_pop_fields {
  total_collected: Float
}

"""
order by stddev_pop() on columns of table "generative_token_collected"
"""
input generative_token_collected_stddev_pop_order_by {
  total_collected: order_by
}

"""aggregate stddev_samp on columns"""
type generative_token_collected_stddev_samp_fields {
  total_collected: Float
}

"""
order by stddev_samp() on columns of table "generative_token_collected"
"""
input generative_token_collected_stddev_samp_order_by {
  total_collected: order_by
}

"""
Streaming cursor of the table "generative_token_collected"
"""
input generative_token_collected_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: generative_token_collected_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input generative_token_collected_stream_cursor_value_input {
  generative_token_id: String
  total_collected: bigint
  user_id: String
}

"""aggregate sum on columns"""
type generative_token_collected_sum_fields {
  total_collected: bigint
}

"""
order by sum() on columns of table "generative_token_collected"
"""
input generative_token_collected_sum_order_by {
  total_collected: order_by
}

"""aggregate var_pop on columns"""
type generative_token_collected_var_pop_fields {
  total_collected: Float
}

"""
order by var_pop() on columns of table "generative_token_collected"
"""
input generative_token_collected_var_pop_order_by {
  total_collected: order_by
}

"""aggregate var_samp on columns"""
type generative_token_collected_var_samp_fields {
  total_collected: Float
}

"""
order by var_samp() on columns of table "generative_token_collected"
"""
input generative_token_collected_var_samp_order_by {
  total_collected: order_by
}

"""aggregate variance on columns"""
type generative_token_collected_variance_fields {
  total_collected: Float
}

"""
order by variance() on columns of table "generative_token_collected"
"""
input generative_token_collected_variance_order_by {
  total_collected: order_by
}

scalar generative_token_flag_enum

"""
Boolean expression to compare columns of type "generative_token_flag_enum". All fields are combined with logical 'AND'.
"""
input generative_token_flag_enum_comparison_exp {
  _eq: generative_token_flag_enum
  _gt: generative_token_flag_enum
  _gte: generative_token_flag_enum
  _in: [generative_token_flag_enum!]
  _is_null: Boolean
  _lt: generative_token_flag_enum
  _lte: generative_token_flag_enum
  _neq: generative_token_flag_enum
  _nin: [generative_token_flag_enum!]
}

"""aggregate max on columns"""
type generative_token_max_fields {
  author_id: String
  balance: numeric
  capture_media_id: bpchar

  """
  A computed field, executes function "token_chain_for_token"
  """
  chain: String
  codex_id: String
  created_at: timestamptz
  display_uri: String
  flag: generative_token_flag_enum
  generative_uri: String
  id: String
  input_bytes_size: Int
  iterations_count: numeric
  labels: [Int!]
  lock_end: timestamptz
  locked_seconds: Int
  metadata_uri: String
  mint_opens_at: timestamptz
  moderation_reason_id: String
  name: String
  open_editions_ends_at: timestamptz
  original_supply: numeric
  preview_input_bytes: String

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Int
  slug: String
  supply: numeric
  tags: [String!]
  thumbnail_uri: String
  updated_at: timestamptz
  version: generative_token_version
}

"""
order by max() on columns of table "generative_token"
"""
input generative_token_max_order_by {
  author_id: order_by
  balance: order_by
  capture_media_id: order_by
  codex_id: order_by
  created_at: order_by
  display_uri: order_by
  flag: order_by
  generative_uri: order_by
  id: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  labels: order_by
  lock_end: order_by
  locked_seconds: order_by
  metadata_uri: order_by
  mint_opens_at: order_by
  moderation_reason_id: order_by
  name: order_by
  open_editions_ends_at: order_by
  original_supply: order_by
  preview_input_bytes: order_by
  royalties: order_by
  slug: order_by
  supply: order_by
  tags: order_by
  thumbnail_uri: order_by
  updated_at: order_by
  version: order_by
}

"""aggregate min on columns"""
type generative_token_min_fields {
  author_id: String
  balance: numeric
  capture_media_id: bpchar

  """
  A computed field, executes function "token_chain_for_token"
  """
  chain: String
  codex_id: String
  created_at: timestamptz
  display_uri: String
  flag: generative_token_flag_enum
  generative_uri: String
  id: String
  input_bytes_size: Int
  iterations_count: numeric
  labels: [Int!]
  lock_end: timestamptz
  locked_seconds: Int
  metadata_uri: String
  mint_opens_at: timestamptz
  moderation_reason_id: String
  name: String
  open_editions_ends_at: timestamptz
  original_supply: numeric
  preview_input_bytes: String

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Int
  slug: String
  supply: numeric
  tags: [String!]
  thumbnail_uri: String
  updated_at: timestamptz
  version: generative_token_version
}

"""
order by min() on columns of table "generative_token"
"""
input generative_token_min_order_by {
  author_id: order_by
  balance: order_by
  capture_media_id: order_by
  codex_id: order_by
  created_at: order_by
  display_uri: order_by
  flag: order_by
  generative_uri: order_by
  id: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  labels: order_by
  lock_end: order_by
  locked_seconds: order_by
  metadata_uri: order_by
  mint_opens_at: order_by
  moderation_reason_id: order_by
  name: order_by
  open_editions_ends_at: order_by
  original_supply: order_by
  preview_input_bytes: order_by
  royalties: order_by
  slug: order_by
  supply: order_by
  tags: order_by
  thumbnail_uri: order_by
  updated_at: order_by
  version: order_by
}

"""Ordering options when selecting data from "generative_token"."""
input generative_token_order_by {
  actions_aggregate: action_aggregate_order_by
  author: user_order_by
  author_id: order_by
  balance: order_by
  capture_media_id: order_by
  chain: order_by
  codex: codex_order_by
  codex_id: order_by
  codex_update_requests_aggregate: codex_update_request_aggregate_order_by
  collection_offers_aggregate: collection_offer_aggregate_order_by
  collectors_aggregate: generative_token_collected_aggregate_order_by
  created_at: order_by
  display_uri: order_by
  enabled: order_by
  features: order_by
  flag: order_by
  generative_token_articles_aggregate: article_generative_token_aggregate_order_by
  generative_uri: order_by
  id: order_by
  input_bytes_size: order_by
  is_frame: order_by
  iterations_count: order_by
  labels: order_by
  lock_end: order_by
  lock_price_for_reserves: order_by
  locked_seconds: order_by
  market_stat: market_stats_order_by
  market_stats_histories_aggregate: market_stats_history_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadata_uri: order_by
  mint_opens_at: order_by
  mint_ticket_settings_aggregate: mint_ticket_settings_aggregate_order_by
  mint_tickets_aggregate: mint_ticket_aggregate_order_by
  moderation_reason: moderation_reason_order_by
  moderation_reason_id: order_by
  name: order_by
  objkts_aggregate: objkt_aggregate_order_by
  open_editions: order_by
  open_editions_ends_at: order_by
  original_supply: order_by
  params_definition: order_by
  preview_input_bytes: order_by
  pricing_dutch_auctions_aggregate: pricing_dutch_auction_aggregate_order_by
  pricing_fixeds_aggregate: pricing_fixed_aggregate_order_by
  redeemables_aggregate: redeemable_aggregate_order_by
  redeemed_percentage: order_by
  reports_aggregate: report_aggregate_order_by
  reserves_aggregate: reserve_aggregate_order_by
  royalties: order_by
  slug: order_by
  splits_primary_aggregate: split_aggregate_order_by
  splits_secondary_aggregate: split_aggregate_order_by
  supply: order_by
  tags: order_by
  thumbnail_uri: order_by
  transactions_aggregate: transaction_aggregate_order_by
  updated_at: order_by
  user: user_order_by
  version: order_by
  wallet: foreign_wallet_order_by
}

"""
select columns of table "generative_token"
"""
enum generative_token_select_column {
  """column name"""
  author_id

  """column name"""
  balance

  """column name"""
  capture_media_id

  """column name"""
  codex_id

  """column name"""
  created_at

  """column name"""
  display_uri

  """column name"""
  enabled

  """column name"""
  flag

  """column name"""
  generative_uri

  """column name"""
  id

  """column name"""
  input_bytes_size

  """column name"""
  is_frame

  """column name"""
  iterations_count

  """column name"""
  labels

  """column name"""
  lock_end

  """column name"""
  lock_price_for_reserves

  """column name"""
  locked_seconds

  """column name"""
  metadata

  """column name"""
  metadata_uri

  """column name"""
  mint_opens_at

  """column name"""
  moderation_reason_id

  """column name"""
  name

  """column name"""
  open_editions

  """column name"""
  open_editions_ends_at

  """column name"""
  original_supply

  """column name"""
  params_definition

  """column name"""
  preview_input_bytes

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  supply

  """column name"""
  tags

  """column name"""
  thumbnail_uri

  """column name"""
  updated_at

  """column name"""
  version
}

"""
select "generative_token_aggregate_bool_exp_bool_and_arguments_columns" columns of table "generative_token"
"""
enum generative_token_select_column_generative_token_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  enabled

  """column name"""
  is_frame

  """column name"""
  lock_price_for_reserves

  """column name"""
  open_editions
}

"""
select "generative_token_aggregate_bool_exp_bool_or_arguments_columns" columns of table "generative_token"
"""
enum generative_token_select_column_generative_token_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  enabled

  """column name"""
  is_frame

  """column name"""
  lock_price_for_reserves

  """column name"""
  open_editions
}

"""aggregate stddev on columns"""
type generative_token_stddev_fields {
  balance: Float
  input_bytes_size: Float
  iterations_count: Float
  locked_seconds: Float
  original_supply: Float

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Float
  supply: Float
}

"""
order by stddev() on columns of table "generative_token"
"""
input generative_token_stddev_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate stddev_pop on columns"""
type generative_token_stddev_pop_fields {
  balance: Float
  input_bytes_size: Float
  iterations_count: Float
  locked_seconds: Float
  original_supply: Float

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Float
  supply: Float
}

"""
order by stddev_pop() on columns of table "generative_token"
"""
input generative_token_stddev_pop_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate stddev_samp on columns"""
type generative_token_stddev_samp_fields {
  balance: Float
  input_bytes_size: Float
  iterations_count: Float
  locked_seconds: Float
  original_supply: Float

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Float
  supply: Float
}

"""
order by stddev_samp() on columns of table "generative_token"
"""
input generative_token_stddev_samp_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

"""
Streaming cursor of the table "generative_token"
"""
input generative_token_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: generative_token_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input generative_token_stream_cursor_value_input {
  author_id: String
  balance: numeric
  capture_media_id: bpchar
  codex_id: String
  created_at: timestamptz
  display_uri: String
  enabled: Boolean
  flag: generative_token_flag_enum
  generative_uri: String
  id: String
  input_bytes_size: Int
  is_frame: Boolean
  iterations_count: numeric
  labels: [Int!]
  lock_end: timestamptz
  lock_price_for_reserves: Boolean
  locked_seconds: Int
  metadata: json
  metadata_uri: String
  mint_opens_at: timestamptz
  moderation_reason_id: String
  name: String
  open_editions: Boolean
  open_editions_ends_at: timestamptz
  original_supply: numeric
  params_definition: json
  preview_input_bytes: String
  royalties: Int
  slug: String
  supply: numeric
  tags: [String!]
  thumbnail_uri: String
  updated_at: timestamptz
  version: generative_token_version
}

"""aggregate sum on columns"""
type generative_token_sum_fields {
  balance: numeric
  input_bytes_size: Int
  iterations_count: numeric
  locked_seconds: Int
  original_supply: numeric

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Int
  supply: numeric
}

"""
order by sum() on columns of table "generative_token"
"""
input generative_token_sum_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate var_pop on columns"""
type generative_token_var_pop_fields {
  balance: Float
  input_bytes_size: Float
  iterations_count: Float
  locked_seconds: Float
  original_supply: Float

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Float
  supply: Float
}

"""
order by var_pop() on columns of table "generative_token"
"""
input generative_token_var_pop_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate var_samp on columns"""
type generative_token_var_samp_fields {
  balance: Float
  input_bytes_size: Float
  iterations_count: Float
  locked_seconds: Float
  original_supply: Float

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Float
  supply: Float
}

"""
order by var_samp() on columns of table "generative_token"
"""
input generative_token_var_samp_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate variance on columns"""
type generative_token_variance_fields {
  balance: Float
  input_bytes_size: Float
  iterations_count: Float
  locked_seconds: Float
  original_supply: Float

  """
  A computed field, executes function "get_redeemable_percentage"
  """
  redeemed_percentage: float8
  royalties: Float
  supply: Float
}

"""
order by variance() on columns of table "generative_token"
"""
input generative_token_variance_order_by {
  balance: order_by
  input_bytes_size: order_by
  iterations_count: order_by
  locked_seconds: order_by
  original_supply: order_by
  royalties: order_by
  supply: order_by
}

scalar generative_token_version

"""
Boolean expression to compare columns of type "generative_token_version". All fields are combined with logical 'AND'.
"""
input generative_token_version_comparison_exp {
  _eq: generative_token_version
  _gt: generative_token_version
  _gte: generative_token_version
  _in: [generative_token_version!]
  _is_null: Boolean
  _lt: generative_token_version
  _lte: generative_token_version
  _neq: generative_token_version
  _nin: [generative_token_version!]
}

"""
columns and relationships of "gentk_assign"
"""
type gentk_assign {
  assigned_at: timestamptz
  attempts: Int!
  created_at: timestamptz!
  id: String!

  """An object relationship"""
  objkt: objkt
  retries: Int!
  state: gentk_assign_state_enum!
}

"""
Boolean expression to filter rows from the table "gentk_assign". All fields are combined with a logical 'AND'.
"""
input gentk_assign_bool_exp {
  _and: [gentk_assign_bool_exp!]
  _not: gentk_assign_bool_exp
  _or: [gentk_assign_bool_exp!]
  assigned_at: timestamptz_comparison_exp
  attempts: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  id: String_comparison_exp
  objkt: objkt_bool_exp
  retries: Int_comparison_exp
  state: gentk_assign_state_enum_comparison_exp
}

"""Ordering options when selecting data from "gentk_assign"."""
input gentk_assign_order_by {
  assigned_at: order_by
  attempts: order_by
  created_at: order_by
  id: order_by
  objkt: objkt_order_by
  retries: order_by
  state: order_by
}

"""
select columns of table "gentk_assign"
"""
enum gentk_assign_select_column {
  """column name"""
  assigned_at

  """column name"""
  attempts

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  retries

  """column name"""
  state
}

scalar gentk_assign_state_enum

"""
Boolean expression to compare columns of type "gentk_assign_state_enum". All fields are combined with logical 'AND'.
"""
input gentk_assign_state_enum_comparison_exp {
  _eq: gentk_assign_state_enum
  _gt: gentk_assign_state_enum
  _gte: gentk_assign_state_enum
  _in: [gentk_assign_state_enum!]
  _is_null: Boolean
  _lt: gentk_assign_state_enum
  _lte: gentk_assign_state_enum
  _neq: gentk_assign_state_enum
  _nin: [gentk_assign_state_enum!]
}

"""
Streaming cursor of the table "gentk_assign"
"""
input gentk_assign_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: gentk_assign_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input gentk_assign_stream_cursor_value_input {
  assigned_at: timestamptz
  attempts: Int
  created_at: timestamptz
  id: String
  retries: Int
  state: gentk_assign_state_enum
}

"""
columns and relationships of "indexed_operation"
"""
type indexed_operation {
  hashed: String!
}

"""
Boolean expression to filter rows from the table "indexed_operation". All fields are combined with a logical 'AND'.
"""
input indexed_operation_bool_exp {
  _and: [indexed_operation_bool_exp!]
  _not: indexed_operation_bool_exp
  _or: [indexed_operation_bool_exp!]
  hashed: String_comparison_exp
}

"""Ordering options when selecting data from "indexed_operation"."""
input indexed_operation_order_by {
  hashed: order_by
}

"""
select columns of table "indexed_operation"
"""
enum indexed_operation_select_column {
  """column name"""
  hashed
}

"""
Streaming cursor of the table "indexed_operation"
"""
input indexed_operation_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: indexed_operation_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input indexed_operation_stream_cursor_value_input {
  hashed: String
}

"""
columns and relationships of "indexing_cursor"
"""
type indexing_cursor {
  group_id: String!
  id: bigint!

  """An object relationship"""
  indexing_target: indexing_target
  last_indexed_at: timestamptz!
  level: bigint!
  originated_at: timestamptz!
}

"""
Boolean expression to filter rows from the table "indexing_cursor". All fields are combined with a logical 'AND'.
"""
input indexing_cursor_bool_exp {
  _and: [indexing_cursor_bool_exp!]
  _not: indexing_cursor_bool_exp
  _or: [indexing_cursor_bool_exp!]
  group_id: String_comparison_exp
  id: bigint_comparison_exp
  indexing_target: indexing_target_bool_exp
  last_indexed_at: timestamptz_comparison_exp
  level: bigint_comparison_exp
  originated_at: timestamptz_comparison_exp
}

"""Ordering options when selecting data from "indexing_cursor"."""
input indexing_cursor_order_by {
  group_id: order_by
  id: order_by
  indexing_target: indexing_target_order_by
  last_indexed_at: order_by
  level: order_by
  originated_at: order_by
}

"""
select columns of table "indexing_cursor"
"""
enum indexing_cursor_select_column {
  """column name"""
  group_id

  """column name"""
  id

  """column name"""
  last_indexed_at

  """column name"""
  level

  """column name"""
  originated_at
}

"""
Streaming cursor of the table "indexing_cursor"
"""
input indexing_cursor_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: indexing_cursor_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input indexing_cursor_stream_cursor_value_input {
  group_id: String
  id: bigint
  last_indexed_at: timestamptz
  level: bigint
  originated_at: timestamptz
}

"""
columns and relationships of "indexing_target"
"""
type indexing_target {
  address: String!
  cursor_group_id: String

  """An object relationship"""
  indexing_cursor: indexing_cursor
  type: indexing_target_type_enum!
}

"""
Boolean expression to filter rows from the table "indexing_target". All fields are combined with a logical 'AND'.
"""
input indexing_target_bool_exp {
  _and: [indexing_target_bool_exp!]
  _not: indexing_target_bool_exp
  _or: [indexing_target_bool_exp!]
  address: String_comparison_exp
  cursor_group_id: String_comparison_exp
  indexing_cursor: indexing_cursor_bool_exp
  type: indexing_target_type_enum_comparison_exp
}

"""Ordering options when selecting data from "indexing_target"."""
input indexing_target_order_by {
  address: order_by
  cursor_group_id: order_by
  indexing_cursor: indexing_cursor_order_by
  type: order_by
}

"""
select columns of table "indexing_target"
"""
enum indexing_target_select_column {
  """column name"""
  address

  """column name"""
  cursor_group_id

  """column name"""
  type
}

"""
Streaming cursor of the table "indexing_target"
"""
input indexing_target_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: indexing_target_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input indexing_target_stream_cursor_value_input {
  address: String
  cursor_group_id: String
  type: indexing_target_type_enum
}

scalar indexing_target_type_enum

"""
Boolean expression to compare columns of type "indexing_target_type_enum". All fields are combined with logical 'AND'.
"""
input indexing_target_type_enum_comparison_exp {
  _eq: indexing_target_type_enum
  _gt: indexing_target_type_enum
  _gte: indexing_target_type_enum
  _in: [indexing_target_type_enum!]
  _is_null: Boolean
  _lt: indexing_target_type_enum
  _lte: indexing_target_type_enum
  _neq: indexing_target_type_enum
  _nin: [indexing_target_type_enum!]
}

"""
columns and relationships of "ipfs_cid"
"""
type ipfs_cid {
  cid: String!
}

"""
Boolean expression to filter rows from the table "ipfs_cid". All fields are combined with a logical 'AND'.
"""
input ipfs_cid_bool_exp {
  _and: [ipfs_cid_bool_exp!]
  _not: ipfs_cid_bool_exp
  _or: [ipfs_cid_bool_exp!]
  cid: String_comparison_exp
}

"""Ordering options when selecting data from "ipfs_cid"."""
input ipfs_cid_order_by {
  cid: order_by
}

"""
select columns of table "ipfs_cid"
"""
enum ipfs_cid_select_column {
  """column name"""
  cid
}

"""
Streaming cursor of the table "ipfs_cid"
"""
input ipfs_cid_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: ipfs_cid_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ipfs_cid_stream_cursor_value_input {
  cid: String
}

scalar json

"""
Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'.
"""
input json_comparison_exp {
  _eq: json
  _gt: json
  _gte: json
  _in: [json!]
  _is_null: Boolean
  _lt: json
  _lte: json
  _neq: json
  _nin: [json!]
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "listing"
"""
type listing {
  accepted_at: timestamptz
  accepted_by_id: String
  amount: numeric!

  """An object relationship"""
  article: article
  article_id: Int
  cancelled_at: timestamptz
  created_at: timestamptz!
  id: String!
  is_inactive: Boolean
  issuer_id: String
  metadata(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  objkt: objkt
  objkt_id: String
  price: numeric!
  royalties: Int!
  status: listing_status_enum!

  """An object relationship"""
  user: user

  """An object relationship"""
  userByAcceptedById: user
  version: Int!
}

"""
order by aggregate values of table "listing"
"""
input listing_aggregate_order_by {
  avg: listing_avg_order_by
  count: order_by
  max: listing_max_order_by
  min: listing_min_order_by
  stddev: listing_stddev_order_by
  stddev_pop: listing_stddev_pop_order_by
  stddev_samp: listing_stddev_samp_order_by
  sum: listing_sum_order_by
  var_pop: listing_var_pop_order_by
  var_samp: listing_var_samp_order_by
  variance: listing_variance_order_by
}

"""
order by avg() on columns of table "listing"
"""
input listing_avg_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "listing". All fields are combined with a logical 'AND'.
"""
input listing_bool_exp {
  _and: [listing_bool_exp!]
  _not: listing_bool_exp
  _or: [listing_bool_exp!]
  accepted_at: timestamptz_comparison_exp
  accepted_by_id: String_comparison_exp
  amount: numeric_comparison_exp
  article: article_bool_exp
  article_id: Int_comparison_exp
  cancelled_at: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  id: String_comparison_exp
  is_inactive: Boolean_comparison_exp
  issuer_id: String_comparison_exp
  metadata: jsonb_comparison_exp
  objkt: objkt_bool_exp
  objkt_id: String_comparison_exp
  price: numeric_comparison_exp
  royalties: Int_comparison_exp
  status: listing_status_enum_comparison_exp
  user: user_bool_exp
  userByAcceptedById: user_bool_exp
  version: Int_comparison_exp
}

"""
order by max() on columns of table "listing"
"""
input listing_max_order_by {
  accepted_at: order_by
  accepted_by_id: order_by
  amount: order_by
  article_id: order_by
  cancelled_at: order_by
  created_at: order_by
  id: order_by
  issuer_id: order_by
  objkt_id: order_by
  price: order_by
  royalties: order_by
  status: order_by
  version: order_by
}

"""
order by min() on columns of table "listing"
"""
input listing_min_order_by {
  accepted_at: order_by
  accepted_by_id: order_by
  amount: order_by
  article_id: order_by
  cancelled_at: order_by
  created_at: order_by
  id: order_by
  issuer_id: order_by
  objkt_id: order_by
  price: order_by
  royalties: order_by
  status: order_by
  version: order_by
}

"""Ordering options when selecting data from "listing"."""
input listing_order_by {
  accepted_at: order_by
  accepted_by_id: order_by
  amount: order_by
  article: article_order_by
  article_id: order_by
  cancelled_at: order_by
  created_at: order_by
  id: order_by
  is_inactive: order_by
  issuer_id: order_by
  metadata: order_by
  objkt: objkt_order_by
  objkt_id: order_by
  price: order_by
  royalties: order_by
  status: order_by
  user: user_order_by
  userByAcceptedById: user_order_by
  version: order_by
}

"""
select columns of table "listing"
"""
enum listing_select_column {
  """column name"""
  accepted_at

  """column name"""
  accepted_by_id

  """column name"""
  amount

  """column name"""
  article_id

  """column name"""
  cancelled_at

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  is_inactive

  """column name"""
  issuer_id

  """column name"""
  metadata

  """column name"""
  objkt_id

  """column name"""
  price

  """column name"""
  royalties

  """column name"""
  status

  """column name"""
  version
}

scalar listing_status_enum

"""
Boolean expression to compare columns of type "listing_status_enum". All fields are combined with logical 'AND'.
"""
input listing_status_enum_comparison_exp {
  _eq: listing_status_enum
  _gt: listing_status_enum
  _gte: listing_status_enum
  _in: [listing_status_enum!]
  _is_null: Boolean
  _lt: listing_status_enum
  _lte: listing_status_enum
  _neq: listing_status_enum
  _nin: [listing_status_enum!]
}

"""
order by stddev() on columns of table "listing"
"""
input listing_stddev_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
order by stddev_pop() on columns of table "listing"
"""
input listing_stddev_pop_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
order by stddev_samp() on columns of table "listing"
"""
input listing_stddev_samp_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
Streaming cursor of the table "listing"
"""
input listing_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: listing_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input listing_stream_cursor_value_input {
  accepted_at: timestamptz
  accepted_by_id: String
  amount: numeric
  article_id: Int
  cancelled_at: timestamptz
  created_at: timestamptz
  id: String
  is_inactive: Boolean
  issuer_id: String
  metadata: jsonb
  objkt_id: String
  price: numeric
  royalties: Int
  status: listing_status_enum
  version: Int
}

"""
order by sum() on columns of table "listing"
"""
input listing_sum_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
order by var_pop() on columns of table "listing"
"""
input listing_var_pop_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
order by var_samp() on columns of table "listing"
"""
input listing_var_samp_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
order by variance() on columns of table "listing"
"""
input listing_variance_order_by {
  amount: order_by
  article_id: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
columns and relationships of "market_stats"
"""
type market_stats {
  floor: numeric
  floor_change7d: numeric
  floor_change24: numeric
  floor_change30d: numeric
  floor_fiat: numeric
  from: timestamptz

  """An object relationship"""
  generative_token: generative_token!
  highest_sold: numeric
  highest_sold_fiat: numeric
  listed: Int
  lowest_sold: numeric
  lowest_sold_fiat: numeric
  median: numeric
  prim_volume: numeric
  prim_volume_fiat: numeric
  prim_volume_nb: Int
  sec_volume: numeric
  sec_volume7d: numeric
  sec_volume24: numeric
  sec_volume30d: numeric
  sec_volume_fiat: numeric
  sec_volume_fiat7d: numeric
  sec_volume_fiat24: numeric
  sec_volume_fiat30d: numeric
  sec_volume_nb: Int
  sec_volume_nb7d: Int
  sec_volume_nb24: Int
  sec_volume_nb30d: Int
  to: timestamptz
  token_id: String!
  total_volume: numeric
  total_volume7d: numeric
  total_volume24: numeric
  total_volume30d: numeric
  total_volume_change7d: numeric
  total_volume_change24: numeric
  total_volume_change30d: numeric
  total_volume_fiat: numeric
  total_volume_fiat7d: numeric
  total_volume_fiat24: numeric
  total_volume_fiat30d: numeric
  total_volume_nb: Int
  total_volume_nb7d: Int
  total_volume_nb24: Int
  total_volume_nb30d: Int
}

"""
aggregated selection of "market_stats"
"""
type market_stats_aggregate {
  aggregate: market_stats_aggregate_fields
  nodes: [market_stats!]!
}

"""
aggregate fields of "market_stats"
"""
type market_stats_aggregate_fields {
  avg: market_stats_avg_fields
  count(columns: [market_stats_select_column!], distinct: Boolean): Int!
  max: market_stats_max_fields
  min: market_stats_min_fields
  stddev: market_stats_stddev_fields
  stddev_pop: market_stats_stddev_pop_fields
  stddev_samp: market_stats_stddev_samp_fields
  sum: market_stats_sum_fields
  var_pop: market_stats_var_pop_fields
  var_samp: market_stats_var_samp_fields
  variance: market_stats_variance_fields
}

"""aggregate avg on columns"""
type market_stats_avg_fields {
  floor: Float
  floor_change7d: Float
  floor_change24: Float
  floor_change30d: Float
  floor_fiat: Float
  highest_sold: Float
  highest_sold_fiat: Float
  listed: Float
  lowest_sold: Float
  lowest_sold_fiat: Float
  median: Float
  prim_volume: Float
  prim_volume_fiat: Float
  prim_volume_nb: Float
  sec_volume: Float
  sec_volume7d: Float
  sec_volume24: Float
  sec_volume30d: Float
  sec_volume_fiat: Float
  sec_volume_fiat7d: Float
  sec_volume_fiat24: Float
  sec_volume_fiat30d: Float
  sec_volume_nb: Float
  sec_volume_nb7d: Float
  sec_volume_nb24: Float
  sec_volume_nb30d: Float
  total_volume: Float
  total_volume7d: Float
  total_volume24: Float
  total_volume30d: Float
  total_volume_change7d: Float
  total_volume_change24: Float
  total_volume_change30d: Float
  total_volume_fiat: Float
  total_volume_fiat7d: Float
  total_volume_fiat24: Float
  total_volume_fiat30d: Float
  total_volume_nb: Float
  total_volume_nb7d: Float
  total_volume_nb24: Float
  total_volume_nb30d: Float
}

"""
Boolean expression to filter rows from the table "market_stats". All fields are combined with a logical 'AND'.
"""
input market_stats_bool_exp {
  _and: [market_stats_bool_exp!]
  _not: market_stats_bool_exp
  _or: [market_stats_bool_exp!]
  floor: numeric_comparison_exp
  floor_change7d: numeric_comparison_exp
  floor_change24: numeric_comparison_exp
  floor_change30d: numeric_comparison_exp
  floor_fiat: numeric_comparison_exp
  from: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  highest_sold: numeric_comparison_exp
  highest_sold_fiat: numeric_comparison_exp
  listed: Int_comparison_exp
  lowest_sold: numeric_comparison_exp
  lowest_sold_fiat: numeric_comparison_exp
  median: numeric_comparison_exp
  prim_volume: numeric_comparison_exp
  prim_volume_fiat: numeric_comparison_exp
  prim_volume_nb: Int_comparison_exp
  sec_volume: numeric_comparison_exp
  sec_volume7d: numeric_comparison_exp
  sec_volume24: numeric_comparison_exp
  sec_volume30d: numeric_comparison_exp
  sec_volume_fiat: numeric_comparison_exp
  sec_volume_fiat7d: numeric_comparison_exp
  sec_volume_fiat24: numeric_comparison_exp
  sec_volume_fiat30d: numeric_comparison_exp
  sec_volume_nb: Int_comparison_exp
  sec_volume_nb7d: Int_comparison_exp
  sec_volume_nb24: Int_comparison_exp
  sec_volume_nb30d: Int_comparison_exp
  to: timestamptz_comparison_exp
  token_id: String_comparison_exp
  total_volume: numeric_comparison_exp
  total_volume7d: numeric_comparison_exp
  total_volume24: numeric_comparison_exp
  total_volume30d: numeric_comparison_exp
  total_volume_change7d: numeric_comparison_exp
  total_volume_change24: numeric_comparison_exp
  total_volume_change30d: numeric_comparison_exp
  total_volume_fiat: numeric_comparison_exp
  total_volume_fiat7d: numeric_comparison_exp
  total_volume_fiat24: numeric_comparison_exp
  total_volume_fiat30d: numeric_comparison_exp
  total_volume_nb: Int_comparison_exp
  total_volume_nb7d: Int_comparison_exp
  total_volume_nb24: Int_comparison_exp
  total_volume_nb30d: Int_comparison_exp
}

"""
columns and relationships of "market_stats_history"
"""
type market_stats_history {
  floor: numeric
  from: timestamptz!

  """An object relationship"""
  generative_token: generative_token!
  highest_sold: numeric
  id: Int!
  listed: Int
  lowest_sold: numeric
  median: numeric
  prim_volume: numeric
  prim_volume_fiat: numeric
  prim_volume_nb: Int
  sec_volume: numeric
  sec_volume_fiat: numeric
  sec_volume_nb: Int
  to: timestamptz!
  token_id: String!
  total_volume: numeric
  total_volume_fiat: numeric
  total_volume_nb: Int
}

"""
order by aggregate values of table "market_stats_history"
"""
input market_stats_history_aggregate_order_by {
  avg: market_stats_history_avg_order_by
  count: order_by
  max: market_stats_history_max_order_by
  min: market_stats_history_min_order_by
  stddev: market_stats_history_stddev_order_by
  stddev_pop: market_stats_history_stddev_pop_order_by
  stddev_samp: market_stats_history_stddev_samp_order_by
  sum: market_stats_history_sum_order_by
  var_pop: market_stats_history_var_pop_order_by
  var_samp: market_stats_history_var_samp_order_by
  variance: market_stats_history_variance_order_by
}

"""
order by avg() on columns of table "market_stats_history"
"""
input market_stats_history_avg_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
Boolean expression to filter rows from the table "market_stats_history". All fields are combined with a logical 'AND'.
"""
input market_stats_history_bool_exp {
  _and: [market_stats_history_bool_exp!]
  _not: market_stats_history_bool_exp
  _or: [market_stats_history_bool_exp!]
  floor: numeric_comparison_exp
  from: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  highest_sold: numeric_comparison_exp
  id: Int_comparison_exp
  listed: Int_comparison_exp
  lowest_sold: numeric_comparison_exp
  median: numeric_comparison_exp
  prim_volume: numeric_comparison_exp
  prim_volume_fiat: numeric_comparison_exp
  prim_volume_nb: Int_comparison_exp
  sec_volume: numeric_comparison_exp
  sec_volume_fiat: numeric_comparison_exp
  sec_volume_nb: Int_comparison_exp
  to: timestamptz_comparison_exp
  token_id: String_comparison_exp
  total_volume: numeric_comparison_exp
  total_volume_fiat: numeric_comparison_exp
  total_volume_nb: Int_comparison_exp
}

"""
order by max() on columns of table "market_stats_history"
"""
input market_stats_history_max_order_by {
  floor: order_by
  from: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  to: order_by
  token_id: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
order by min() on columns of table "market_stats_history"
"""
input market_stats_history_min_order_by {
  floor: order_by
  from: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  to: order_by
  token_id: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""Ordering options when selecting data from "market_stats_history"."""
input market_stats_history_order_by {
  floor: order_by
  from: order_by
  generative_token: generative_token_order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  to: order_by
  token_id: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
select columns of table "market_stats_history"
"""
enum market_stats_history_select_column {
  """column name"""
  floor

  """column name"""
  from

  """column name"""
  highest_sold

  """column name"""
  id

  """column name"""
  listed

  """column name"""
  lowest_sold

  """column name"""
  median

  """column name"""
  prim_volume

  """column name"""
  prim_volume_fiat

  """column name"""
  prim_volume_nb

  """column name"""
  sec_volume

  """column name"""
  sec_volume_fiat

  """column name"""
  sec_volume_nb

  """column name"""
  to

  """column name"""
  token_id

  """column name"""
  total_volume

  """column name"""
  total_volume_fiat

  """column name"""
  total_volume_nb
}

"""
order by stddev() on columns of table "market_stats_history"
"""
input market_stats_history_stddev_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
order by stddev_pop() on columns of table "market_stats_history"
"""
input market_stats_history_stddev_pop_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
order by stddev_samp() on columns of table "market_stats_history"
"""
input market_stats_history_stddev_samp_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
Streaming cursor of the table "market_stats_history"
"""
input market_stats_history_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: market_stats_history_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input market_stats_history_stream_cursor_value_input {
  floor: numeric
  from: timestamptz
  highest_sold: numeric
  id: Int
  listed: Int
  lowest_sold: numeric
  median: numeric
  prim_volume: numeric
  prim_volume_fiat: numeric
  prim_volume_nb: Int
  sec_volume: numeric
  sec_volume_fiat: numeric
  sec_volume_nb: Int
  to: timestamptz
  token_id: String
  total_volume: numeric
  total_volume_fiat: numeric
  total_volume_nb: Int
}

"""
order by sum() on columns of table "market_stats_history"
"""
input market_stats_history_sum_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
order by var_pop() on columns of table "market_stats_history"
"""
input market_stats_history_var_pop_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
order by var_samp() on columns of table "market_stats_history"
"""
input market_stats_history_var_samp_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""
order by variance() on columns of table "market_stats_history"
"""
input market_stats_history_variance_order_by {
  floor: order_by
  highest_sold: order_by
  id: order_by
  listed: order_by
  lowest_sold: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume_fiat: order_by
  sec_volume_nb: order_by
  total_volume: order_by
  total_volume_fiat: order_by
  total_volume_nb: order_by
}

"""aggregate max on columns"""
type market_stats_max_fields {
  floor: numeric
  floor_change7d: numeric
  floor_change24: numeric
  floor_change30d: numeric
  floor_fiat: numeric
  from: timestamptz
  highest_sold: numeric
  highest_sold_fiat: numeric
  listed: Int
  lowest_sold: numeric
  lowest_sold_fiat: numeric
  median: numeric
  prim_volume: numeric
  prim_volume_fiat: numeric
  prim_volume_nb: Int
  sec_volume: numeric
  sec_volume7d: numeric
  sec_volume24: numeric
  sec_volume30d: numeric
  sec_volume_fiat: numeric
  sec_volume_fiat7d: numeric
  sec_volume_fiat24: numeric
  sec_volume_fiat30d: numeric
  sec_volume_nb: Int
  sec_volume_nb7d: Int
  sec_volume_nb24: Int
  sec_volume_nb30d: Int
  to: timestamptz
  token_id: String
  total_volume: numeric
  total_volume7d: numeric
  total_volume24: numeric
  total_volume30d: numeric
  total_volume_change7d: numeric
  total_volume_change24: numeric
  total_volume_change30d: numeric
  total_volume_fiat: numeric
  total_volume_fiat7d: numeric
  total_volume_fiat24: numeric
  total_volume_fiat30d: numeric
  total_volume_nb: Int
  total_volume_nb7d: Int
  total_volume_nb24: Int
  total_volume_nb30d: Int
}

"""aggregate min on columns"""
type market_stats_min_fields {
  floor: numeric
  floor_change7d: numeric
  floor_change24: numeric
  floor_change30d: numeric
  floor_fiat: numeric
  from: timestamptz
  highest_sold: numeric
  highest_sold_fiat: numeric
  listed: Int
  lowest_sold: numeric
  lowest_sold_fiat: numeric
  median: numeric
  prim_volume: numeric
  prim_volume_fiat: numeric
  prim_volume_nb: Int
  sec_volume: numeric
  sec_volume7d: numeric
  sec_volume24: numeric
  sec_volume30d: numeric
  sec_volume_fiat: numeric
  sec_volume_fiat7d: numeric
  sec_volume_fiat24: numeric
  sec_volume_fiat30d: numeric
  sec_volume_nb: Int
  sec_volume_nb7d: Int
  sec_volume_nb24: Int
  sec_volume_nb30d: Int
  to: timestamptz
  token_id: String
  total_volume: numeric
  total_volume7d: numeric
  total_volume24: numeric
  total_volume30d: numeric
  total_volume_change7d: numeric
  total_volume_change24: numeric
  total_volume_change30d: numeric
  total_volume_fiat: numeric
  total_volume_fiat7d: numeric
  total_volume_fiat24: numeric
  total_volume_fiat30d: numeric
  total_volume_nb: Int
  total_volume_nb7d: Int
  total_volume_nb24: Int
  total_volume_nb30d: Int
}

"""Ordering options when selecting data from "market_stats"."""
input market_stats_order_by {
  floor: order_by
  floor_change7d: order_by
  floor_change24: order_by
  floor_change30d: order_by
  floor_fiat: order_by
  from: order_by
  generative_token: generative_token_order_by
  highest_sold: order_by
  highest_sold_fiat: order_by
  listed: order_by
  lowest_sold: order_by
  lowest_sold_fiat: order_by
  median: order_by
  prim_volume: order_by
  prim_volume_fiat: order_by
  prim_volume_nb: order_by
  sec_volume: order_by
  sec_volume7d: order_by
  sec_volume24: order_by
  sec_volume30d: order_by
  sec_volume_fiat: order_by
  sec_volume_fiat7d: order_by
  sec_volume_fiat24: order_by
  sec_volume_fiat30d: order_by
  sec_volume_nb: order_by
  sec_volume_nb7d: order_by
  sec_volume_nb24: order_by
  sec_volume_nb30d: order_by
  to: order_by
  token_id: order_by
  total_volume: order_by
  total_volume7d: order_by
  total_volume24: order_by
  total_volume30d: order_by
  total_volume_change7d: order_by
  total_volume_change24: order_by
  total_volume_change30d: order_by
  total_volume_fiat: order_by
  total_volume_fiat7d: order_by
  total_volume_fiat24: order_by
  total_volume_fiat30d: order_by
  total_volume_nb: order_by
  total_volume_nb7d: order_by
  total_volume_nb24: order_by
  total_volume_nb30d: order_by
}

"""
select columns of table "market_stats"
"""
enum market_stats_select_column {
  """column name"""
  floor

  """column name"""
  floor_change7d

  """column name"""
  floor_change24

  """column name"""
  floor_change30d

  """column name"""
  floor_fiat

  """column name"""
  from

  """column name"""
  highest_sold

  """column name"""
  highest_sold_fiat

  """column name"""
  listed

  """column name"""
  lowest_sold

  """column name"""
  lowest_sold_fiat

  """column name"""
  median

  """column name"""
  prim_volume

  """column name"""
  prim_volume_fiat

  """column name"""
  prim_volume_nb

  """column name"""
  sec_volume

  """column name"""
  sec_volume7d

  """column name"""
  sec_volume24

  """column name"""
  sec_volume30d

  """column name"""
  sec_volume_fiat

  """column name"""
  sec_volume_fiat7d

  """column name"""
  sec_volume_fiat24

  """column name"""
  sec_volume_fiat30d

  """column name"""
  sec_volume_nb

  """column name"""
  sec_volume_nb7d

  """column name"""
  sec_volume_nb24

  """column name"""
  sec_volume_nb30d

  """column name"""
  to

  """column name"""
  token_id

  """column name"""
  total_volume

  """column name"""
  total_volume7d

  """column name"""
  total_volume24

  """column name"""
  total_volume30d

  """column name"""
  total_volume_change7d

  """column name"""
  total_volume_change24

  """column name"""
  total_volume_change30d

  """column name"""
  total_volume_fiat

  """column name"""
  total_volume_fiat7d

  """column name"""
  total_volume_fiat24

  """column name"""
  total_volume_fiat30d

  """column name"""
  total_volume_nb

  """column name"""
  total_volume_nb7d

  """column name"""
  total_volume_nb24

  """column name"""
  total_volume_nb30d
}

"""aggregate stddev on columns"""
type market_stats_stddev_fields {
  floor: Float
  floor_change7d: Float
  floor_change24: Float
  floor_change30d: Float
  floor_fiat: Float
  highest_sold: Float
  highest_sold_fiat: Float
  listed: Float
  lowest_sold: Float
  lowest_sold_fiat: Float
  median: Float
  prim_volume: Float
  prim_volume_fiat: Float
  prim_volume_nb: Float
  sec_volume: Float
  sec_volume7d: Float
  sec_volume24: Float
  sec_volume30d: Float
  sec_volume_fiat: Float
  sec_volume_fiat7d: Float
  sec_volume_fiat24: Float
  sec_volume_fiat30d: Float
  sec_volume_nb: Float
  sec_volume_nb7d: Float
  sec_volume_nb24: Float
  sec_volume_nb30d: Float
  total_volume: Float
  total_volume7d: Float
  total_volume24: Float
  total_volume30d: Float
  total_volume_change7d: Float
  total_volume_change24: Float
  total_volume_change30d: Float
  total_volume_fiat: Float
  total_volume_fiat7d: Float
  total_volume_fiat24: Float
  total_volume_fiat30d: Float
  total_volume_nb: Float
  total_volume_nb7d: Float
  total_volume_nb24: Float
  total_volume_nb30d: Float
}

"""aggregate stddev_pop on columns"""
type market_stats_stddev_pop_fields {
  floor: Float
  floor_change7d: Float
  floor_change24: Float
  floor_change30d: Float
  floor_fiat: Float
  highest_sold: Float
  highest_sold_fiat: Float
  listed: Float
  lowest_sold: Float
  lowest_sold_fiat: Float
  median: Float
  prim_volume: Float
  prim_volume_fiat: Float
  prim_volume_nb: Float
  sec_volume: Float
  sec_volume7d: Float
  sec_volume24: Float
  sec_volume30d: Float
  sec_volume_fiat: Float
  sec_volume_fiat7d: Float
  sec_volume_fiat24: Float
  sec_volume_fiat30d: Float
  sec_volume_nb: Float
  sec_volume_nb7d: Float
  sec_volume_nb24: Float
  sec_volume_nb30d: Float
  total_volume: Float
  total_volume7d: Float
  total_volume24: Float
  total_volume30d: Float
  total_volume_change7d: Float
  total_volume_change24: Float
  total_volume_change30d: Float
  total_volume_fiat: Float
  total_volume_fiat7d: Float
  total_volume_fiat24: Float
  total_volume_fiat30d: Float
  total_volume_nb: Float
  total_volume_nb7d: Float
  total_volume_nb24: Float
  total_volume_nb30d: Float
}

"""aggregate stddev_samp on columns"""
type market_stats_stddev_samp_fields {
  floor: Float
  floor_change7d: Float
  floor_change24: Float
  floor_change30d: Float
  floor_fiat: Float
  highest_sold: Float
  highest_sold_fiat: Float
  listed: Float
  lowest_sold: Float
  lowest_sold_fiat: Float
  median: Float
  prim_volume: Float
  prim_volume_fiat: Float
  prim_volume_nb: Float
  sec_volume: Float
  sec_volume7d: Float
  sec_volume24: Float
  sec_volume30d: Float
  sec_volume_fiat: Float
  sec_volume_fiat7d: Float
  sec_volume_fiat24: Float
  sec_volume_fiat30d: Float
  sec_volume_nb: Float
  sec_volume_nb7d: Float
  sec_volume_nb24: Float
  sec_volume_nb30d: Float
  total_volume: Float
  total_volume7d: Float
  total_volume24: Float
  total_volume30d: Float
  total_volume_change7d: Float
  total_volume_change24: Float
  total_volume_change30d: Float
  total_volume_fiat: Float
  total_volume_fiat7d: Float
  total_volume_fiat24: Float
  total_volume_fiat30d: Float
  total_volume_nb: Float
  total_volume_nb7d: Float
  total_volume_nb24: Float
  total_volume_nb30d: Float
}

"""
Streaming cursor of the table "market_stats"
"""
input market_stats_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: market_stats_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input market_stats_stream_cursor_value_input {
  floor: numeric
  floor_change7d: numeric
  floor_change24: numeric
  floor_change30d: numeric
  floor_fiat: numeric
  from: timestamptz
  highest_sold: numeric
  highest_sold_fiat: numeric
  listed: Int
  lowest_sold: numeric
  lowest_sold_fiat: numeric
  median: numeric
  prim_volume: numeric
  prim_volume_fiat: numeric
  prim_volume_nb: Int
  sec_volume: numeric
  sec_volume7d: numeric
  sec_volume24: numeric
  sec_volume30d: numeric
  sec_volume_fiat: numeric
  sec_volume_fiat7d: numeric
  sec_volume_fiat24: numeric
  sec_volume_fiat30d: numeric
  sec_volume_nb: Int
  sec_volume_nb7d: Int
  sec_volume_nb24: Int
  sec_volume_nb30d: Int
  to: timestamptz
  token_id: String
  total_volume: numeric
  total_volume7d: numeric
  total_volume24: numeric
  total_volume30d: numeric
  total_volume_change7d: numeric
  total_volume_change24: numeric
  total_volume_change30d: numeric
  total_volume_fiat: numeric
  total_volume_fiat7d: numeric
  total_volume_fiat24: numeric
  total_volume_fiat30d: numeric
  total_volume_nb: Int
  total_volume_nb7d: Int
  total_volume_nb24: Int
  total_volume_nb30d: Int
}

"""aggregate sum on columns"""
type market_stats_sum_fields {
  floor: numeric
  floor_change7d: numeric
  floor_change24: numeric
  floor_change30d: numeric
  floor_fiat: numeric
  highest_sold: numeric
  highest_sold_fiat: numeric
  listed: Int
  lowest_sold: numeric
  lowest_sold_fiat: numeric
  median: numeric
  prim_volume: numeric
  prim_volume_fiat: numeric
  prim_volume_nb: Int
  sec_volume: numeric
  sec_volume7d: numeric
  sec_volume24: numeric
  sec_volume30d: numeric
  sec_volume_fiat: numeric
  sec_volume_fiat7d: numeric
  sec_volume_fiat24: numeric
  sec_volume_fiat30d: numeric
  sec_volume_nb: Int
  sec_volume_nb7d: Int
  sec_volume_nb24: Int
  sec_volume_nb30d: Int
  total_volume: numeric
  total_volume7d: numeric
  total_volume24: numeric
  total_volume30d: numeric
  total_volume_change7d: numeric
  total_volume_change24: numeric
  total_volume_change30d: numeric
  total_volume_fiat: numeric
  total_volume_fiat7d: numeric
  total_volume_fiat24: numeric
  total_volume_fiat30d: numeric
  total_volume_nb: Int
  total_volume_nb7d: Int
  total_volume_nb24: Int
  total_volume_nb30d: Int
}

"""aggregate var_pop on columns"""
type market_stats_var_pop_fields {
  floor: Float
  floor_change7d: Float
  floor_change24: Float
  floor_change30d: Float
  floor_fiat: Float
  highest_sold: Float
  highest_sold_fiat: Float
  listed: Float
  lowest_sold: Float
  lowest_sold_fiat: Float
  median: Float
  prim_volume: Float
  prim_volume_fiat: Float
  prim_volume_nb: Float
  sec_volume: Float
  sec_volume7d: Float
  sec_volume24: Float
  sec_volume30d: Float
  sec_volume_fiat: Float
  sec_volume_fiat7d: Float
  sec_volume_fiat24: Float
  sec_volume_fiat30d: Float
  sec_volume_nb: Float
  sec_volume_nb7d: Float
  sec_volume_nb24: Float
  sec_volume_nb30d: Float
  total_volume: Float
  total_volume7d: Float
  total_volume24: Float
  total_volume30d: Float
  total_volume_change7d: Float
  total_volume_change24: Float
  total_volume_change30d: Float
  total_volume_fiat: Float
  total_volume_fiat7d: Float
  total_volume_fiat24: Float
  total_volume_fiat30d: Float
  total_volume_nb: Float
  total_volume_nb7d: Float
  total_volume_nb24: Float
  total_volume_nb30d: Float
}

"""aggregate var_samp on columns"""
type market_stats_var_samp_fields {
  floor: Float
  floor_change7d: Float
  floor_change24: Float
  floor_change30d: Float
  floor_fiat: Float
  highest_sold: Float
  highest_sold_fiat: Float
  listed: Float
  lowest_sold: Float
  lowest_sold_fiat: Float
  median: Float
  prim_volume: Float
  prim_volume_fiat: Float
  prim_volume_nb: Float
  sec_volume: Float
  sec_volume7d: Float
  sec_volume24: Float
  sec_volume30d: Float
  sec_volume_fiat: Float
  sec_volume_fiat7d: Float
  sec_volume_fiat24: Float
  sec_volume_fiat30d: Float
  sec_volume_nb: Float
  sec_volume_nb7d: Float
  sec_volume_nb24: Float
  sec_volume_nb30d: Float
  total_volume: Float
  total_volume7d: Float
  total_volume24: Float
  total_volume30d: Float
  total_volume_change7d: Float
  total_volume_change24: Float
  total_volume_change30d: Float
  total_volume_fiat: Float
  total_volume_fiat7d: Float
  total_volume_fiat24: Float
  total_volume_fiat30d: Float
  total_volume_nb: Float
  total_volume_nb7d: Float
  total_volume_nb24: Float
  total_volume_nb30d: Float
}

"""aggregate variance on columns"""
type market_stats_variance_fields {
  floor: Float
  floor_change7d: Float
  floor_change24: Float
  floor_change30d: Float
  floor_fiat: Float
  highest_sold: Float
  highest_sold_fiat: Float
  listed: Float
  lowest_sold: Float
  lowest_sold_fiat: Float
  median: Float
  prim_volume: Float
  prim_volume_fiat: Float
  prim_volume_nb: Float
  sec_volume: Float
  sec_volume7d: Float
  sec_volume24: Float
  sec_volume30d: Float
  sec_volume_fiat: Float
  sec_volume_fiat7d: Float
  sec_volume_fiat24: Float
  sec_volume_fiat30d: Float
  sec_volume_nb: Float
  sec_volume_nb7d: Float
  sec_volume_nb24: Float
  sec_volume_nb30d: Float
  total_volume: Float
  total_volume7d: Float
  total_volume24: Float
  total_volume30d: Float
  total_volume_change7d: Float
  total_volume_change24: Float
  total_volume_change30d: Float
  total_volume_fiat: Float
  total_volume_fiat7d: Float
  total_volume_fiat24: Float
  total_volume_fiat30d: Float
  total_volume_nb: Float
  total_volume_nb7d: Float
  total_volume_nb24: Float
  total_volume_nb30d: Float
}

"""
columns and relationships of "media_image"
"""
type media_image {
  height: Int
  id: bpchar!
  metadata(
    """JSON select path"""
    path: String
  ): json
  mime_type: String
  placeholder: String
  process_counters: smallint!
  processed: Boolean!
  width: Int
}

"""
Boolean expression to filter rows from the table "media_image". All fields are combined with a logical 'AND'.
"""
input media_image_bool_exp {
  _and: [media_image_bool_exp!]
  _not: media_image_bool_exp
  _or: [media_image_bool_exp!]
  height: Int_comparison_exp
  id: bpchar_comparison_exp
  metadata: json_comparison_exp
  mime_type: String_comparison_exp
  placeholder: String_comparison_exp
  process_counters: smallint_comparison_exp
  processed: Boolean_comparison_exp
  width: Int_comparison_exp
}

"""Ordering options when selecting data from "media_image"."""
input media_image_order_by {
  height: order_by
  id: order_by
  metadata: order_by
  mime_type: order_by
  placeholder: order_by
  process_counters: order_by
  processed: order_by
  width: order_by
}

"""
select columns of table "media_image"
"""
enum media_image_select_column {
  """column name"""
  height

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  mime_type

  """column name"""
  placeholder

  """column name"""
  process_counters

  """column name"""
  processed

  """column name"""
  width
}

"""
Streaming cursor of the table "media_image"
"""
input media_image_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: media_image_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input media_image_stream_cursor_value_input {
  height: Int
  id: bpchar
  metadata: json
  mime_type: String
  placeholder: String
  process_counters: smallint
  processed: Boolean
  width: Int
}

"""
columns and relationships of "metric"
"""
type metric {
  ended_at: Int!
  id: String!
  name: String!
  started_at: Int!
}

"""
Boolean expression to filter rows from the table "metric". All fields are combined with a logical 'AND'.
"""
input metric_bool_exp {
  _and: [metric_bool_exp!]
  _not: metric_bool_exp
  _or: [metric_bool_exp!]
  ended_at: Int_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  started_at: Int_comparison_exp
}

"""Ordering options when selecting data from "metric"."""
input metric_order_by {
  ended_at: order_by
  id: order_by
  name: order_by
  started_at: order_by
}

"""
select columns of table "metric"
"""
enum metric_select_column {
  """column name"""
  ended_at

  """column name"""
  id

  """column name"""
  name

  """column name"""
  started_at
}

"""
Streaming cursor of the table "metric"
"""
input metric_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: metric_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input metric_stream_cursor_value_input {
  ended_at: Int
  id: String
  name: String
  started_at: Int
}

"""
columns and relationships of "mint_ticket"
"""
type mint_ticket {
  created_at: timestamptz!

  """An object relationship"""
  generative_token: generative_token!
  id: String!
  owner_id: String!
  price: numeric!
  taxation_locked: numeric!
  taxation_paid_until: timestamptz!
  taxation_start: timestamptz!
  token_id: String!

  """An object relationship"""
  user: user!
}

"""
order by aggregate values of table "mint_ticket"
"""
input mint_ticket_aggregate_order_by {
  avg: mint_ticket_avg_order_by
  count: order_by
  max: mint_ticket_max_order_by
  min: mint_ticket_min_order_by
  stddev: mint_ticket_stddev_order_by
  stddev_pop: mint_ticket_stddev_pop_order_by
  stddev_samp: mint_ticket_stddev_samp_order_by
  sum: mint_ticket_sum_order_by
  var_pop: mint_ticket_var_pop_order_by
  var_samp: mint_ticket_var_samp_order_by
  variance: mint_ticket_variance_order_by
}

"""
order by avg() on columns of table "mint_ticket"
"""
input mint_ticket_avg_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
Boolean expression to filter rows from the table "mint_ticket". All fields are combined with a logical 'AND'.
"""
input mint_ticket_bool_exp {
  _and: [mint_ticket_bool_exp!]
  _not: mint_ticket_bool_exp
  _or: [mint_ticket_bool_exp!]
  created_at: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  owner_id: String_comparison_exp
  price: numeric_comparison_exp
  taxation_locked: numeric_comparison_exp
  taxation_paid_until: timestamptz_comparison_exp
  taxation_start: timestamptz_comparison_exp
  token_id: String_comparison_exp
  user: user_bool_exp
}

"""
order by max() on columns of table "mint_ticket"
"""
input mint_ticket_max_order_by {
  created_at: order_by
  id: order_by
  owner_id: order_by
  price: order_by
  taxation_locked: order_by
  taxation_paid_until: order_by
  taxation_start: order_by
  token_id: order_by
}

"""
order by min() on columns of table "mint_ticket"
"""
input mint_ticket_min_order_by {
  created_at: order_by
  id: order_by
  owner_id: order_by
  price: order_by
  taxation_locked: order_by
  taxation_paid_until: order_by
  taxation_start: order_by
  token_id: order_by
}

"""Ordering options when selecting data from "mint_ticket"."""
input mint_ticket_order_by {
  created_at: order_by
  generative_token: generative_token_order_by
  id: order_by
  owner_id: order_by
  price: order_by
  taxation_locked: order_by
  taxation_paid_until: order_by
  taxation_start: order_by
  token_id: order_by
  user: user_order_by
}

"""
select columns of table "mint_ticket"
"""
enum mint_ticket_select_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  owner_id

  """column name"""
  price

  """column name"""
  taxation_locked

  """column name"""
  taxation_paid_until

  """column name"""
  taxation_start

  """column name"""
  token_id
}

"""
columns and relationships of "mint_ticket_settings"
"""
type mint_ticket_settings {
  capture_media_id: bpchar

  """An object relationship"""
  generative_token: generative_token!
  gracing_period: Int!
  id: String!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json!
  metadata_uri: String
}

"""
order by aggregate values of table "mint_ticket_settings"
"""
input mint_ticket_settings_aggregate_order_by {
  avg: mint_ticket_settings_avg_order_by
  count: order_by
  max: mint_ticket_settings_max_order_by
  min: mint_ticket_settings_min_order_by
  stddev: mint_ticket_settings_stddev_order_by
  stddev_pop: mint_ticket_settings_stddev_pop_order_by
  stddev_samp: mint_ticket_settings_stddev_samp_order_by
  sum: mint_ticket_settings_sum_order_by
  var_pop: mint_ticket_settings_var_pop_order_by
  var_samp: mint_ticket_settings_var_samp_order_by
  variance: mint_ticket_settings_variance_order_by
}

"""
order by avg() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_avg_order_by {
  gracing_period: order_by
}

"""
Boolean expression to filter rows from the table "mint_ticket_settings". All fields are combined with a logical 'AND'.
"""
input mint_ticket_settings_bool_exp {
  _and: [mint_ticket_settings_bool_exp!]
  _not: mint_ticket_settings_bool_exp
  _or: [mint_ticket_settings_bool_exp!]
  capture_media_id: bpchar_comparison_exp
  generative_token: generative_token_bool_exp
  gracing_period: Int_comparison_exp
  id: String_comparison_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadata_uri: String_comparison_exp
}

"""
order by max() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_max_order_by {
  capture_media_id: order_by
  gracing_period: order_by
  id: order_by
  metadata_uri: order_by
}

"""
order by min() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_min_order_by {
  capture_media_id: order_by
  gracing_period: order_by
  id: order_by
  metadata_uri: order_by
}

"""Ordering options when selecting data from "mint_ticket_settings"."""
input mint_ticket_settings_order_by {
  capture_media_id: order_by
  generative_token: generative_token_order_by
  gracing_period: order_by
  id: order_by
  media_image: media_image_order_by
  metadata: order_by
  metadata_uri: order_by
}

"""
select columns of table "mint_ticket_settings"
"""
enum mint_ticket_settings_select_column {
  """column name"""
  capture_media_id

  """column name"""
  gracing_period

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metadata_uri
}

"""
order by stddev() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_stddev_order_by {
  gracing_period: order_by
}

"""
order by stddev_pop() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_stddev_pop_order_by {
  gracing_period: order_by
}

"""
order by stddev_samp() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_stddev_samp_order_by {
  gracing_period: order_by
}

"""
Streaming cursor of the table "mint_ticket_settings"
"""
input mint_ticket_settings_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: mint_ticket_settings_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input mint_ticket_settings_stream_cursor_value_input {
  capture_media_id: bpchar
  gracing_period: Int
  id: String
  metadata: json
  metadata_uri: String
}

"""
order by sum() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_sum_order_by {
  gracing_period: order_by
}

"""
order by var_pop() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_var_pop_order_by {
  gracing_period: order_by
}

"""
order by var_samp() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_var_samp_order_by {
  gracing_period: order_by
}

"""
order by variance() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_variance_order_by {
  gracing_period: order_by
}

"""
order by stddev() on columns of table "mint_ticket"
"""
input mint_ticket_stddev_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
order by stddev_pop() on columns of table "mint_ticket"
"""
input mint_ticket_stddev_pop_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
order by stddev_samp() on columns of table "mint_ticket"
"""
input mint_ticket_stddev_samp_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
Streaming cursor of the table "mint_ticket"
"""
input mint_ticket_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: mint_ticket_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input mint_ticket_stream_cursor_value_input {
  created_at: timestamptz
  id: String
  owner_id: String
  price: numeric
  taxation_locked: numeric
  taxation_paid_until: timestamptz
  taxation_start: timestamptz
  token_id: String
}

"""
order by sum() on columns of table "mint_ticket"
"""
input mint_ticket_sum_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
order by var_pop() on columns of table "mint_ticket"
"""
input mint_ticket_var_pop_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
order by var_samp() on columns of table "mint_ticket"
"""
input mint_ticket_var_samp_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
order by variance() on columns of table "mint_ticket"
"""
input mint_ticket_variance_order_by {
  price: order_by
  taxation_locked: order_by
}

"""
columns and relationships of "moderation_reason"
"""
type moderation_reason {
  """An array relationship"""
  articles(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """An aggregate relationship"""
  articles_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """An array relationship"""
  generative_tokens(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """An aggregate relationship"""
  generative_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!
  id: String!
  reason: String!

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """An array relationship"""
  users(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!
}

"""
Boolean expression to filter rows from the table "moderation_reason". All fields are combined with a logical 'AND'.
"""
input moderation_reason_bool_exp {
  _and: [moderation_reason_bool_exp!]
  _not: moderation_reason_bool_exp
  _or: [moderation_reason_bool_exp!]
  articles: article_bool_exp
  articles_aggregate: article_aggregate_bool_exp
  generative_tokens: generative_token_bool_exp
  generative_tokens_aggregate: generative_token_aggregate_bool_exp
  id: String_comparison_exp
  reason: String_comparison_exp
  reports: report_bool_exp
  users: user_bool_exp
}

"""Ordering options when selecting data from "moderation_reason"."""
input moderation_reason_order_by {
  articles_aggregate: article_aggregate_order_by
  generative_tokens_aggregate: generative_token_aggregate_order_by
  id: order_by
  reason: order_by
  reports_aggregate: report_aggregate_order_by
  users_aggregate: user_aggregate_order_by
}

"""
select columns of table "moderation_reason"
"""
enum moderation_reason_select_column {
  """column name"""
  id

  """column name"""
  reason
}

"""
Streaming cursor of the table "moderation_reason"
"""
input moderation_reason_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: moderation_reason_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input moderation_reason_stream_cursor_value_input {
  id: String
  reason: String
}

"""mutation root"""
type mutation_root {
  authenticate(input: AuthenticationInput!): AuthenticationResult

  """Authenticate using a Web3Auth idToken"""
  authenticate_web3auth(input: AuthenticationWeb3AuthInput!): AuthenticationResult
  generate_challenge(input: ChallengeInput!): ChallengeResult
  link_wallet_to_account(input: LinkWalletInput): Boolean!

  """
  Logout the current logged in user. For cookie sessions, no need to pass any input.
  """
  logout(input: LogoutInput): LogoutResult
  offchain: offchain_mutation_frontend
  prepare_redemption(input: PrepareRedemptionInput!): PrepareRedemptionOutput!
  refresh(input: RefreshInput!): AuthenticationResult

  """
  given a sign in message from the farcaster account's wallet, sets the farcaster handle in the user profile
  """
  set_farcaster_handle(input: SetFarcasterHandleInput!): SetFarcasterHandleResult

  """updates the smart contract tied to a consumable"""
  set_whitelist(whitelist: jsonb!): SetWhitelistOutput
  unlink_wallet_from_account(input: UnlinkWalletInput): Boolean!

  """
  Use an OTP with an email to issue a JWT for web3auth custom provider validation
  """
  web3auth_email_auth_otp(input: Web3AuthEmailAuthOTPInput!): Web3AuthEmailAuthOTPOutput

  """Request an OTP verification for email verification"""
  web3auth_email_request_otp(input: String!): Web3AuthEmailRequestOTPOutput

  """
  Use a provider oauth id token to issue a JWT for web3auth custom provider validation
  """
  web3auth_oauth(input: Web3AuthOAuthInput!): Web3AuthOAuthOutput
}

scalar numeric

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [numeric!]

  """does the array contain the given value"""
  _contains: [numeric!]
  _eq: [numeric!]
  _gt: [numeric!]
  _gte: [numeric!]
  _in: [[numeric!]!]
  _is_null: Boolean
  _lt: [numeric!]
  _lte: [numeric!]
  _neq: [numeric!]
  _nin: [[numeric!]!]
}

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""
columns and relationships of "objkt"
"""
type objkt {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!
  assigned: Boolean
  assigned_at: timestamptz

  """An array relationship"""
  auctions(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!
  capture_media_id: bpchar
  created_at: timestamptz!
  display_uri: bpchar
  duplicate: Boolean
  features(
    """JSON select path"""
    path: String
  ): jsonb
  generation_hash: String

  """An object relationship"""
  generative_token: generative_token!

  """An object relationship"""
  gentk_assign: gentk_assign
  id: String!
  input_bytes: String
  issuer_id: String!
  iteration: numeric

  """An array relationship"""
  listings(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json
  metadata_uri: String

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric

  """An object relationship"""
  minter: user
  minter_id: String
  name: String

  """An array relationship"""
  offers(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """An object relationship"""
  owner: user
  owner_id: String
  rarity: float8

  """An array relationship"""
  redemptions(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!
  royalties: Int!

  """An array relationship"""
  secondary_splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!
  slug: String

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!
  tags: [String!]
  thumbnail_uri: bpchar

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!
  updated_at: timestamptz
  version: Int!

  """An object relationship"""
  wallet: foreign_wallet
}

"""
aggregated selection of "objkt"
"""
type objkt_aggregate {
  aggregate: objkt_aggregate_fields
  nodes: [objkt!]!
}

input objkt_aggregate_bool_exp {
  avg: objkt_aggregate_bool_exp_avg
  bool_and: objkt_aggregate_bool_exp_bool_and
  bool_or: objkt_aggregate_bool_exp_bool_or
  corr: objkt_aggregate_bool_exp_corr
  count: objkt_aggregate_bool_exp_count
  covar_samp: objkt_aggregate_bool_exp_covar_samp
  max: objkt_aggregate_bool_exp_max
  min: objkt_aggregate_bool_exp_min
  stddev_samp: objkt_aggregate_bool_exp_stddev_samp
  sum: objkt_aggregate_bool_exp_sum
  var_samp: objkt_aggregate_bool_exp_var_samp
}

input objkt_aggregate_bool_exp_avg {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_avg_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_bool_and {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: Boolean_comparison_exp!
}

input objkt_aggregate_bool_exp_bool_or {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: Boolean_comparison_exp!
}

input objkt_aggregate_bool_exp_corr {
  arguments: objkt_aggregate_bool_exp_corr_arguments!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_corr_arguments {
  X: objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns!
  Y: objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns!
}

input objkt_aggregate_bool_exp_count {
  arguments: [objkt_select_column!]
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: Int_comparison_exp!
}

input objkt_aggregate_bool_exp_covar_samp {
  arguments: objkt_aggregate_bool_exp_covar_samp_arguments!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_covar_samp_arguments {
  X: objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns!
  Y: objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns!
}

input objkt_aggregate_bool_exp_max {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_max_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_min {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_min_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_stddev_samp {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_stddev_samp_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_sum {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_sum_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_var_samp {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_var_samp_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

"""
aggregate fields of "objkt"
"""
type objkt_aggregate_fields {
  avg: objkt_avg_fields
  count(columns: [objkt_select_column!], distinct: Boolean): Int!
  max: objkt_max_fields
  min: objkt_min_fields
  stddev: objkt_stddev_fields
  stddev_pop: objkt_stddev_pop_fields
  stddev_samp: objkt_stddev_samp_fields
  sum: objkt_sum_fields
  var_pop: objkt_var_pop_fields
  var_samp: objkt_var_samp_fields
  variance: objkt_variance_fields
}

"""
order by aggregate values of table "objkt"
"""
input objkt_aggregate_order_by {
  avg: objkt_avg_order_by
  count: order_by
  max: objkt_max_order_by
  min: objkt_min_order_by
  stddev: objkt_stddev_order_by
  stddev_pop: objkt_stddev_pop_order_by
  stddev_samp: objkt_stddev_samp_order_by
  sum: objkt_sum_order_by
  var_pop: objkt_var_pop_order_by
  var_samp: objkt_var_samp_order_by
  variance: objkt_variance_order_by
}

"""aggregate avg on columns"""
type objkt_avg_fields {
  iteration: Float

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by avg() on columns of table "objkt"
"""
input objkt_avg_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "objkt". All fields are combined with a logical 'AND'.
"""
input objkt_bool_exp {
  _and: [objkt_bool_exp!]
  _not: objkt_bool_exp
  _or: [objkt_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  assigned: Boolean_comparison_exp
  assigned_at: timestamptz_comparison_exp
  auctions: auction_bool_exp
  capture_media_id: bpchar_comparison_exp
  created_at: timestamptz_comparison_exp
  display_uri: bpchar_comparison_exp
  duplicate: Boolean_comparison_exp
  features: jsonb_comparison_exp
  generation_hash: String_comparison_exp
  generative_token: generative_token_bool_exp
  gentk_assign: gentk_assign_bool_exp
  id: String_comparison_exp
  input_bytes: String_comparison_exp
  issuer_id: String_comparison_exp
  iteration: numeric_comparison_exp
  listings: listing_bool_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadata_uri: String_comparison_exp
  minted_price: numeric_comparison_exp
  minter: user_bool_exp
  minter_id: String_comparison_exp
  name: String_comparison_exp
  offers: offer_bool_exp
  owner: user_bool_exp
  owner_id: String_comparison_exp
  rarity: float8_comparison_exp
  redemptions: redemption_bool_exp
  royalties: Int_comparison_exp
  secondary_splits: split_bool_exp
  slug: String_comparison_exp
  splits: split_bool_exp
  tags: String_array_comparison_exp
  thumbnail_uri: bpchar_comparison_exp
  transactions: transaction_bool_exp
  updated_at: timestamptz_comparison_exp
  version: Int_comparison_exp
  wallet: foreign_wallet_bool_exp
}

"""aggregate max on columns"""
type objkt_max_fields {
  assigned_at: timestamptz
  capture_media_id: bpchar
  created_at: timestamptz
  display_uri: bpchar
  generation_hash: String
  id: String
  input_bytes: String
  issuer_id: String
  iteration: numeric
  metadata_uri: String

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  minter_id: String
  name: String
  owner_id: String
  rarity: float8
  royalties: Int
  slug: String
  tags: [String!]
  thumbnail_uri: bpchar
  updated_at: timestamptz
  version: Int
}

"""
order by max() on columns of table "objkt"
"""
input objkt_max_order_by {
  assigned_at: order_by
  capture_media_id: order_by
  created_at: order_by
  display_uri: order_by
  generation_hash: order_by
  id: order_by
  input_bytes: order_by
  issuer_id: order_by
  iteration: order_by
  metadata_uri: order_by
  minter_id: order_by
  name: order_by
  owner_id: order_by
  rarity: order_by
  royalties: order_by
  slug: order_by
  tags: order_by
  thumbnail_uri: order_by
  updated_at: order_by
  version: order_by
}

"""aggregate min on columns"""
type objkt_min_fields {
  assigned_at: timestamptz
  capture_media_id: bpchar
  created_at: timestamptz
  display_uri: bpchar
  generation_hash: String
  id: String
  input_bytes: String
  issuer_id: String
  iteration: numeric
  metadata_uri: String

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  minter_id: String
  name: String
  owner_id: String
  rarity: float8
  royalties: Int
  slug: String
  tags: [String!]
  thumbnail_uri: bpchar
  updated_at: timestamptz
  version: Int
}

"""
order by min() on columns of table "objkt"
"""
input objkt_min_order_by {
  assigned_at: order_by
  capture_media_id: order_by
  created_at: order_by
  display_uri: order_by
  generation_hash: order_by
  id: order_by
  input_bytes: order_by
  issuer_id: order_by
  iteration: order_by
  metadata_uri: order_by
  minter_id: order_by
  name: order_by
  owner_id: order_by
  rarity: order_by
  royalties: order_by
  slug: order_by
  tags: order_by
  thumbnail_uri: order_by
  updated_at: order_by
  version: order_by
}

"""Ordering options when selecting data from "objkt"."""
input objkt_order_by {
  actions_aggregate: action_aggregate_order_by
  assigned: order_by
  assigned_at: order_by
  auctions_aggregate: auction_aggregate_order_by
  capture_media_id: order_by
  created_at: order_by
  display_uri: order_by
  duplicate: order_by
  features: order_by
  generation_hash: order_by
  generative_token: generative_token_order_by
  gentk_assign: gentk_assign_order_by
  id: order_by
  input_bytes: order_by
  issuer_id: order_by
  iteration: order_by
  listings_aggregate: listing_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadata_uri: order_by
  minted_price: order_by
  minter: user_order_by
  minter_id: order_by
  name: order_by
  offers_aggregate: offer_aggregate_order_by
  owner: user_order_by
  owner_id: order_by
  rarity: order_by
  redemptions_aggregate: redemption_aggregate_order_by
  royalties: order_by
  secondary_splits_aggregate: split_aggregate_order_by
  slug: order_by
  splits_aggregate: split_aggregate_order_by
  tags: order_by
  thumbnail_uri: order_by
  transactions_aggregate: transaction_aggregate_order_by
  updated_at: order_by
  version: order_by
  wallet: foreign_wallet_order_by
}

"""
select columns of table "objkt"
"""
enum objkt_select_column {
  """column name"""
  assigned

  """column name"""
  assigned_at

  """column name"""
  capture_media_id

  """column name"""
  created_at

  """column name"""
  display_uri

  """column name"""
  duplicate

  """column name"""
  features

  """column name"""
  generation_hash

  """column name"""
  id

  """column name"""
  input_bytes

  """column name"""
  issuer_id

  """column name"""
  iteration

  """column name"""
  metadata

  """column name"""
  metadata_uri

  """column name"""
  minter_id

  """column name"""
  name

  """column name"""
  owner_id

  """column name"""
  rarity

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  tags

  """column name"""
  thumbnail_uri

  """column name"""
  updated_at

  """column name"""
  version
}

"""
select "objkt_aggregate_bool_exp_avg_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_avg_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_bool_and_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  assigned

  """column name"""
  duplicate
}

"""
select "objkt_aggregate_bool_exp_bool_or_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  assigned

  """column name"""
  duplicate
}

"""
select "objkt_aggregate_bool_exp_corr_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_max_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_max_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_min_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_min_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_stddev_samp_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_sum_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_sum_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_var_samp_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_var_samp_arguments_columns {
  """column name"""
  rarity
}

"""aggregate stddev on columns"""
type objkt_stddev_fields {
  iteration: Float

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by stddev() on columns of table "objkt"
"""
input objkt_stddev_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate stddev_pop on columns"""
type objkt_stddev_pop_fields {
  iteration: Float

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by stddev_pop() on columns of table "objkt"
"""
input objkt_stddev_pop_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate stddev_samp on columns"""
type objkt_stddev_samp_fields {
  iteration: Float

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by stddev_samp() on columns of table "objkt"
"""
input objkt_stddev_samp_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""
Streaming cursor of the table "objkt"
"""
input objkt_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: objkt_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input objkt_stream_cursor_value_input {
  assigned: Boolean
  assigned_at: timestamptz
  capture_media_id: bpchar
  created_at: timestamptz
  display_uri: bpchar
  duplicate: Boolean
  features: jsonb
  generation_hash: String
  id: String
  input_bytes: String
  issuer_id: String
  iteration: numeric
  metadata: json
  metadata_uri: String
  minter_id: String
  name: String
  owner_id: String
  rarity: float8
  royalties: Int
  slug: String
  tags: [String!]
  thumbnail_uri: bpchar
  updated_at: timestamptz
  version: Int
}

"""aggregate sum on columns"""
type objkt_sum_fields {
  iteration: numeric

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: float8
  royalties: Int
  version: Int
}

"""
order by sum() on columns of table "objkt"
"""
input objkt_sum_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate var_pop on columns"""
type objkt_var_pop_fields {
  iteration: Float

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by var_pop() on columns of table "objkt"
"""
input objkt_var_pop_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate var_samp on columns"""
type objkt_var_samp_fields {
  iteration: Float

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by var_samp() on columns of table "objkt"
"""
input objkt_var_samp_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate variance on columns"""
type objkt_variance_fields {
  iteration: Float

  """
  A computed field, executes function "objkt_minted_price"
  """
  minted_price: numeric
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by variance() on columns of table "objkt"
"""
input objkt_variance_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

type offchain_mutation_frontend {
  """
  delete data from the table: "ProjectCollaborator"
  """
  delete_ProjectCollaborator(
    """filter the rows which have to be deleted"""
    where: ProjectCollaborator_bool_exp!
  ): ProjectCollaborator_mutation_response

  """
  delete data from the table: "ProjectMedia"
  """
  delete_ProjectMedia(
    """filter the rows which have to be deleted"""
    where: ProjectMedia_bool_exp!
  ): ProjectMedia_mutation_response

  """
  insert data into the table: "Project"
  """
  insert_Project(
    """the rows to be inserted"""
    objects: [Project_insert_input!]!

    """upsert condition"""
    on_conflict: Project_on_conflict
  ): Project_mutation_response

  """
  insert data into the table: "ProjectCollaborator"
  """
  insert_ProjectCollaborator(
    """the rows to be inserted"""
    objects: [ProjectCollaborator_insert_input!]!

    """upsert condition"""
    on_conflict: ProjectCollaborator_on_conflict
  ): ProjectCollaborator_mutation_response

  """
  insert a single row into the table: "ProjectCollaborator"
  """
  insert_ProjectCollaborator_one(
    """the row to be inserted"""
    object: ProjectCollaborator_insert_input!

    """upsert condition"""
    on_conflict: ProjectCollaborator_on_conflict
  ): ProjectCollaborator

  """
  insert data into the table: "ProjectMedia"
  """
  insert_ProjectMedia(
    """the rows to be inserted"""
    objects: [ProjectMedia_insert_input!]!

    """upsert condition"""
    on_conflict: ProjectMedia_on_conflict
  ): ProjectMedia_mutation_response

  """
  insert a single row into the table: "ProjectMedia"
  """
  insert_ProjectMedia_one(
    """the row to be inserted"""
    object: ProjectMedia_insert_input!

    """upsert condition"""
    on_conflict: ProjectMedia_on_conflict
  ): ProjectMedia

  """
  insert a single row into the table: "Project"
  """
  insert_Project_one(
    """the row to be inserted"""
    object: Project_insert_input!

    """upsert condition"""
    on_conflict: Project_on_conflict
  ): Project

  """
  update data of the table: "Account"
  """
  update_Account(
    """sets the columns of the filtered rows to the given values"""
    _set: Account_set_input

    """filter the rows which have to be updated"""
    where: Account_bool_exp!
  ): Account_mutation_response

  """
  update single row of the table: "Account"
  """
  update_Account_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Account_set_input
    pk_columns: Account_pk_columns_input!
  ): Account

  """
  update multiples rows of table: "Account"
  """
  update_Account_many(
    """updates to execute, in order"""
    updates: [Account_updates!]!
  ): [Account_mutation_response]

  """
  update data of the table: "Profile"
  """
  update_Profile(
    """sets the columns of the filtered rows to the given values"""
    _set: Profile_set_input

    """filter the rows which have to be updated"""
    where: Profile_bool_exp!
  ): Profile_mutation_response

  """
  update single row of the table: "Profile"
  """
  update_Profile_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: Profile_set_input
    pk_columns: Profile_pk_columns_input!
  ): Profile

  """
  update multiples rows of table: "Profile"
  """
  update_Profile_many(
    """updates to execute, in order"""
    updates: [Profile_updates!]!
  ): [Profile_mutation_response]

  """
  update data of the table: "Project"
  """
  update_Project(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Project_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Project_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Project_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Project_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Project_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Project_set_input

    """filter the rows which have to be updated"""
    where: Project_bool_exp!
  ): Project_mutation_response

  """
  update data of the table: "ProjectMedia"
  """
  update_ProjectMedia(
    """increments the numeric columns with given value of the filtered values"""
    _inc: ProjectMedia_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: ProjectMedia_set_input

    """filter the rows which have to be updated"""
    where: ProjectMedia_bool_exp!
  ): ProjectMedia_mutation_response

  """
  update multiples rows of table: "ProjectMedia"
  """
  update_ProjectMedia_many(
    """updates to execute, in order"""
    updates: [ProjectMedia_updates!]!
  ): [ProjectMedia_mutation_response]

  """
  update single row of the table: "Project"
  """
  update_Project_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: Project_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: Project_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: Project_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: Project_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: Project_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: Project_set_input
    pk_columns: Project_pk_columns_input!
  ): Project

  """
  update multiples rows of table: "Project"
  """
  update_Project_many(
    """updates to execute, in order"""
    updates: [Project_updates!]!
  ): [Project_mutation_response]
}

type offchain_query {
  """
  fetch data from the table: "Account"
  """
  Account(
    """distinct select on columns"""
    distinct_on: [Account_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Account_order_by!]

    """filter the rows returned"""
    where: Account_bool_exp
  ): [Account!]!

  """
  fetch data from the table: "AccountRole"
  """
  AccountRole(
    """distinct select on columns"""
    distinct_on: [AccountRole_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [AccountRole_order_by!]

    """filter the rows returned"""
    where: AccountRole_bool_exp
  ): [AccountRole!]!

  """fetch data from the table: "AccountRole" using primary key columns"""
  AccountRole_by_pk(value: String!): AccountRole

  """
  fetch aggregated fields from the table: "Account"
  """
  Account_aggregate(
    """distinct select on columns"""
    distinct_on: [Account_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Account_order_by!]

    """filter the rows returned"""
    where: Account_bool_exp
  ): Account_aggregate!

  """fetch data from the table: "Account" using primary key columns"""
  Account_by_pk(id: uuid!): Account

  """
  fetch data from the table: "AccountsRoles"
  """
  AccountsRoles(
    """distinct select on columns"""
    distinct_on: [AccountsRoles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [AccountsRoles_order_by!]

    """filter the rows returned"""
    where: AccountsRoles_bool_exp
  ): [AccountsRoles!]!

  """fetch data from the table: "AccountsRoles" using primary key columns"""
  AccountsRoles_by_pk(accountId: uuid!, roleValue: AccountRole_enum!): AccountsRoles

  """
  fetch data from the table: "Consumable"
  """
  Consumable(
    """distinct select on columns"""
    distinct_on: [Consumable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Consumable_order_by!]

    """filter the rows returned"""
    where: Consumable_bool_exp
  ): [Consumable!]!

  """fetch data from the table: "Consumable" using primary key columns"""
  Consumable_by_pk(address: String!): Consumable

  """
  fetch data from the table: "Event"
  """
  Event(
    """distinct select on columns"""
    distinct_on: [Event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Event_order_by!]

    """filter the rows returned"""
    where: Event_bool_exp
  ): [Event!]!

  """
  fetch data from the table: "EventOnboarding"
  """
  EventOnboarding(
    """distinct select on columns"""
    distinct_on: [EventOnboarding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventOnboarding_order_by!]

    """filter the rows returned"""
    where: EventOnboarding_bool_exp
  ): [EventOnboarding!]!

  """
  fetch data from the table: "EventOnboardingOnComponents"
  """
  EventOnboardingOnComponents(
    """distinct select on columns"""
    distinct_on: [EventOnboardingOnComponents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventOnboardingOnComponents_order_by!]

    """filter the rows returned"""
    where: EventOnboardingOnComponents_bool_exp
  ): [EventOnboardingOnComponents!]!

  """
  fetch data from the table: "EventOnboardingOnComponents" using primary key columns
  """
  EventOnboardingOnComponents_by_pk(componentId: Int!, eventOnboardingId: Int!): EventOnboardingOnComponents

  """fetch data from the table: "EventOnboarding" using primary key columns"""
  EventOnboarding_by_pk(id: Int!): EventOnboarding

  """
  fetch aggregated fields from the table: "Event"
  """
  Event_aggregate(
    """distinct select on columns"""
    distinct_on: [Event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Event_order_by!]

    """filter the rows returned"""
    where: Event_bool_exp
  ): Event_aggregate!

  """fetch data from the table: "Event" using primary key columns"""
  Event_by_pk(id: String!): Event

  """
  fetch data from the table: "Featured"
  """
  Featured(
    """distinct select on columns"""
    distinct_on: [Featured_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Featured_order_by!]

    """filter the rows returned"""
    where: Featured_bool_exp
  ): [Featured!]!

  """fetch data from the table: "Featured" using primary key columns"""
  Featured_by_pk(id: Int!): Featured

  """
  fetch data from the table: "Media"
  """
  Media(
    """distinct select on columns"""
    distinct_on: [Media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Media_order_by!]

    """filter the rows returned"""
    where: Media_bool_exp
  ): [Media!]!

  """fetch data from the table: "Media" using primary key columns"""
  Media_by_pk(id: uuid!): Media

  """
  fetch data from the table: "MediasOnConsumables"
  """
  MediasOnConsumables(
    """distinct select on columns"""
    distinct_on: [MediasOnConsumables_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MediasOnConsumables_order_by!]

    """filter the rows returned"""
    where: MediasOnConsumables_bool_exp
  ): [MediasOnConsumables!]!

  """
  fetch data from the table: "MediasOnConsumables" using primary key columns
  """
  MediasOnConsumables_by_pk(consumableAddress: String!, mediaId: uuid!): MediasOnConsumables

  """
  fetch data from the table: "MintPassGroup"
  """
  MintPassGroup(
    """distinct select on columns"""
    distinct_on: [MintPassGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MintPassGroup_order_by!]

    """filter the rows returned"""
    where: MintPassGroup_bool_exp
  ): [MintPassGroup!]!

  """fetch data from the table: "MintPassGroup" using primary key columns"""
  MintPassGroup_by_pk(address: String!): MintPassGroup

  """
  fetch data from the table: "OnboardingComponent"
  """
  OnboardingComponent(
    """distinct select on columns"""
    distinct_on: [OnboardingComponent_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [OnboardingComponent_order_by!]

    """filter the rows returned"""
    where: OnboardingComponent_bool_exp
  ): [OnboardingComponent!]!

  """
  fetch data from the table: "OnboardingComponent" using primary key columns
  """
  OnboardingComponent_by_pk(id: Int!): OnboardingComponent

  """
  fetch data from the table: "Profile"
  """
  Profile(
    """distinct select on columns"""
    distinct_on: [Profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Profile_order_by!]

    """filter the rows returned"""
    where: Profile_bool_exp
  ): [Profile!]!

  """fetch data from the table: "Profile" using primary key columns"""
  Profile_by_pk(accountId: uuid!): Profile

  """
  fetch data from the table: "Project"
  """
  Project(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """
  fetch data from the table: "ProjectCollaborator"
  """
  ProjectCollaborator(
    """distinct select on columns"""
    distinct_on: [ProjectCollaborator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectCollaborator_order_by!]

    """filter the rows returned"""
    where: ProjectCollaborator_bool_exp
  ): [ProjectCollaborator!]!

  """
  fetch data from the table: "ProjectMedia"
  """
  ProjectMedia(
    """distinct select on columns"""
    distinct_on: [ProjectMedia_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectMedia_order_by!]

    """filter the rows returned"""
    where: ProjectMedia_bool_exp
  ): [ProjectMedia!]!

  """fetch data from the table: "Project" using primary key columns"""
  Project_by_pk(id: uuid!): Project

  """
  fetch data from the table: "UserAccount"
  """
  UserAccount(
    """distinct select on columns"""
    distinct_on: [UserAccount_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserAccount_order_by!]

    """filter the rows returned"""
    where: UserAccount_bool_exp
  ): [UserAccount!]!

  """
  fetch data from the table: "Wallet"
  """
  Wallet(
    """distinct select on columns"""
    distinct_on: [Wallet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Wallet_order_by!]

    """filter the rows returned"""
    where: Wallet_bool_exp
  ): [Wallet!]!

  """fetch data from the table: "Wallet" using primary key columns"""
  Wallet_by_pk(address: String!): Wallet

  """
  fetch data from the table: "Whitelist"
  """
  Whitelist(
    """distinct select on columns"""
    distinct_on: [Whitelist_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Whitelist_order_by!]

    """filter the rows returned"""
    where: Whitelist_bool_exp
  ): [Whitelist!]!

  """
  fetch data from the table: "WhitelistEntries"
  """
  WhitelistEntries(
    """distinct select on columns"""
    distinct_on: [WhitelistEntries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [WhitelistEntries_order_by!]

    """filter the rows returned"""
    where: WhitelistEntries_bool_exp
  ): [WhitelistEntries!]!

  """
  fetch data from the table: "WhitelistEntries" using primary key columns
  """
  WhitelistEntries_by_pk(merkleRoot: String!, whitelistIndex: Int!): WhitelistEntries

  """fetch data from the table: "Whitelist" using primary key columns"""
  Whitelist_by_pk(merkleRoot: String!): Whitelist
}

type offchain_subscription {
  """
  fetch data from the table: "Account"
  """
  Account(
    """distinct select on columns"""
    distinct_on: [Account_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Account_order_by!]

    """filter the rows returned"""
    where: Account_bool_exp
  ): [Account!]!

  """
  fetch data from the table: "AccountRole"
  """
  AccountRole(
    """distinct select on columns"""
    distinct_on: [AccountRole_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [AccountRole_order_by!]

    """filter the rows returned"""
    where: AccountRole_bool_exp
  ): [AccountRole!]!

  """fetch data from the table: "AccountRole" using primary key columns"""
  AccountRole_by_pk(value: String!): AccountRole

  """
  fetch data from the table in a streaming manner: "AccountRole"
  """
  AccountRole_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [AccountRole_stream_cursor_input]!

    """filter the rows returned"""
    where: AccountRole_bool_exp
  ): [AccountRole!]!

  """
  fetch aggregated fields from the table: "Account"
  """
  Account_aggregate(
    """distinct select on columns"""
    distinct_on: [Account_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Account_order_by!]

    """filter the rows returned"""
    where: Account_bool_exp
  ): Account_aggregate!

  """fetch data from the table: "Account" using primary key columns"""
  Account_by_pk(id: uuid!): Account

  """
  fetch data from the table in a streaming manner: "Account"
  """
  Account_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Account_stream_cursor_input]!

    """filter the rows returned"""
    where: Account_bool_exp
  ): [Account!]!

  """
  fetch data from the table: "AccountsRoles"
  """
  AccountsRoles(
    """distinct select on columns"""
    distinct_on: [AccountsRoles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [AccountsRoles_order_by!]

    """filter the rows returned"""
    where: AccountsRoles_bool_exp
  ): [AccountsRoles!]!

  """fetch data from the table: "AccountsRoles" using primary key columns"""
  AccountsRoles_by_pk(accountId: uuid!, roleValue: AccountRole_enum!): AccountsRoles

  """
  fetch data from the table in a streaming manner: "AccountsRoles"
  """
  AccountsRoles_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [AccountsRoles_stream_cursor_input]!

    """filter the rows returned"""
    where: AccountsRoles_bool_exp
  ): [AccountsRoles!]!

  """
  fetch data from the table: "Consumable"
  """
  Consumable(
    """distinct select on columns"""
    distinct_on: [Consumable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Consumable_order_by!]

    """filter the rows returned"""
    where: Consumable_bool_exp
  ): [Consumable!]!

  """fetch data from the table: "Consumable" using primary key columns"""
  Consumable_by_pk(address: String!): Consumable

  """
  fetch data from the table in a streaming manner: "Consumable"
  """
  Consumable_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Consumable_stream_cursor_input]!

    """filter the rows returned"""
    where: Consumable_bool_exp
  ): [Consumable!]!

  """
  fetch data from the table: "Event"
  """
  Event(
    """distinct select on columns"""
    distinct_on: [Event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Event_order_by!]

    """filter the rows returned"""
    where: Event_bool_exp
  ): [Event!]!

  """
  fetch data from the table: "EventOnboarding"
  """
  EventOnboarding(
    """distinct select on columns"""
    distinct_on: [EventOnboarding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventOnboarding_order_by!]

    """filter the rows returned"""
    where: EventOnboarding_bool_exp
  ): [EventOnboarding!]!

  """
  fetch data from the table: "EventOnboardingOnComponents"
  """
  EventOnboardingOnComponents(
    """distinct select on columns"""
    distinct_on: [EventOnboardingOnComponents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [EventOnboardingOnComponents_order_by!]

    """filter the rows returned"""
    where: EventOnboardingOnComponents_bool_exp
  ): [EventOnboardingOnComponents!]!

  """
  fetch data from the table: "EventOnboardingOnComponents" using primary key columns
  """
  EventOnboardingOnComponents_by_pk(componentId: Int!, eventOnboardingId: Int!): EventOnboardingOnComponents

  """
  fetch data from the table in a streaming manner: "EventOnboardingOnComponents"
  """
  EventOnboardingOnComponents_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [EventOnboardingOnComponents_stream_cursor_input]!

    """filter the rows returned"""
    where: EventOnboardingOnComponents_bool_exp
  ): [EventOnboardingOnComponents!]!

  """fetch data from the table: "EventOnboarding" using primary key columns"""
  EventOnboarding_by_pk(id: Int!): EventOnboarding

  """
  fetch data from the table in a streaming manner: "EventOnboarding"
  """
  EventOnboarding_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [EventOnboarding_stream_cursor_input]!

    """filter the rows returned"""
    where: EventOnboarding_bool_exp
  ): [EventOnboarding!]!

  """
  fetch aggregated fields from the table: "Event"
  """
  Event_aggregate(
    """distinct select on columns"""
    distinct_on: [Event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Event_order_by!]

    """filter the rows returned"""
    where: Event_bool_exp
  ): Event_aggregate!

  """fetch data from the table: "Event" using primary key columns"""
  Event_by_pk(id: String!): Event

  """
  fetch data from the table in a streaming manner: "Event"
  """
  Event_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Event_stream_cursor_input]!

    """filter the rows returned"""
    where: Event_bool_exp
  ): [Event!]!

  """
  fetch data from the table: "Featured"
  """
  Featured(
    """distinct select on columns"""
    distinct_on: [Featured_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Featured_order_by!]

    """filter the rows returned"""
    where: Featured_bool_exp
  ): [Featured!]!

  """fetch data from the table: "Featured" using primary key columns"""
  Featured_by_pk(id: Int!): Featured

  """
  fetch data from the table in a streaming manner: "Featured"
  """
  Featured_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Featured_stream_cursor_input]!

    """filter the rows returned"""
    where: Featured_bool_exp
  ): [Featured!]!

  """
  fetch data from the table: "Media"
  """
  Media(
    """distinct select on columns"""
    distinct_on: [Media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Media_order_by!]

    """filter the rows returned"""
    where: Media_bool_exp
  ): [Media!]!

  """fetch data from the table: "Media" using primary key columns"""
  Media_by_pk(id: uuid!): Media

  """
  fetch data from the table in a streaming manner: "Media"
  """
  Media_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Media_stream_cursor_input]!

    """filter the rows returned"""
    where: Media_bool_exp
  ): [Media!]!

  """
  fetch data from the table: "MediasOnConsumables"
  """
  MediasOnConsumables(
    """distinct select on columns"""
    distinct_on: [MediasOnConsumables_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MediasOnConsumables_order_by!]

    """filter the rows returned"""
    where: MediasOnConsumables_bool_exp
  ): [MediasOnConsumables!]!

  """
  fetch data from the table: "MediasOnConsumables" using primary key columns
  """
  MediasOnConsumables_by_pk(consumableAddress: String!, mediaId: uuid!): MediasOnConsumables

  """
  fetch data from the table in a streaming manner: "MediasOnConsumables"
  """
  MediasOnConsumables_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [MediasOnConsumables_stream_cursor_input]!

    """filter the rows returned"""
    where: MediasOnConsumables_bool_exp
  ): [MediasOnConsumables!]!

  """
  fetch data from the table: "MintPassGroup"
  """
  MintPassGroup(
    """distinct select on columns"""
    distinct_on: [MintPassGroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [MintPassGroup_order_by!]

    """filter the rows returned"""
    where: MintPassGroup_bool_exp
  ): [MintPassGroup!]!

  """fetch data from the table: "MintPassGroup" using primary key columns"""
  MintPassGroup_by_pk(address: String!): MintPassGroup

  """
  fetch data from the table in a streaming manner: "MintPassGroup"
  """
  MintPassGroup_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [MintPassGroup_stream_cursor_input]!

    """filter the rows returned"""
    where: MintPassGroup_bool_exp
  ): [MintPassGroup!]!

  """
  fetch data from the table: "OnboardingComponent"
  """
  OnboardingComponent(
    """distinct select on columns"""
    distinct_on: [OnboardingComponent_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [OnboardingComponent_order_by!]

    """filter the rows returned"""
    where: OnboardingComponent_bool_exp
  ): [OnboardingComponent!]!

  """
  fetch data from the table: "OnboardingComponent" using primary key columns
  """
  OnboardingComponent_by_pk(id: Int!): OnboardingComponent

  """
  fetch data from the table in a streaming manner: "OnboardingComponent"
  """
  OnboardingComponent_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [OnboardingComponent_stream_cursor_input]!

    """filter the rows returned"""
    where: OnboardingComponent_bool_exp
  ): [OnboardingComponent!]!

  """
  fetch data from the table: "Profile"
  """
  Profile(
    """distinct select on columns"""
    distinct_on: [Profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Profile_order_by!]

    """filter the rows returned"""
    where: Profile_bool_exp
  ): [Profile!]!

  """fetch data from the table: "Profile" using primary key columns"""
  Profile_by_pk(accountId: uuid!): Profile

  """
  fetch data from the table in a streaming manner: "Profile"
  """
  Profile_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Profile_stream_cursor_input]!

    """filter the rows returned"""
    where: Profile_bool_exp
  ): [Profile!]!

  """
  fetch data from the table: "Project"
  """
  Project(
    """distinct select on columns"""
    distinct_on: [Project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Project_order_by!]

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """
  fetch data from the table: "ProjectCollaborator"
  """
  ProjectCollaborator(
    """distinct select on columns"""
    distinct_on: [ProjectCollaborator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectCollaborator_order_by!]

    """filter the rows returned"""
    where: ProjectCollaborator_bool_exp
  ): [ProjectCollaborator!]!

  """
  fetch data from the table in a streaming manner: "ProjectCollaborator"
  """
  ProjectCollaborator_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [ProjectCollaborator_stream_cursor_input]!

    """filter the rows returned"""
    where: ProjectCollaborator_bool_exp
  ): [ProjectCollaborator!]!

  """
  fetch data from the table: "ProjectMedia"
  """
  ProjectMedia(
    """distinct select on columns"""
    distinct_on: [ProjectMedia_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ProjectMedia_order_by!]

    """filter the rows returned"""
    where: ProjectMedia_bool_exp
  ): [ProjectMedia!]!

  """
  fetch data from the table in a streaming manner: "ProjectMedia"
  """
  ProjectMedia_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [ProjectMedia_stream_cursor_input]!

    """filter the rows returned"""
    where: ProjectMedia_bool_exp
  ): [ProjectMedia!]!

  """fetch data from the table: "Project" using primary key columns"""
  Project_by_pk(id: uuid!): Project

  """
  fetch data from the table in a streaming manner: "Project"
  """
  Project_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Project_stream_cursor_input]!

    """filter the rows returned"""
    where: Project_bool_exp
  ): [Project!]!

  """
  fetch data from the table: "UserAccount"
  """
  UserAccount(
    """distinct select on columns"""
    distinct_on: [UserAccount_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UserAccount_order_by!]

    """filter the rows returned"""
    where: UserAccount_bool_exp
  ): [UserAccount!]!

  """
  fetch data from the table in a streaming manner: "UserAccount"
  """
  UserAccount_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [UserAccount_stream_cursor_input]!

    """filter the rows returned"""
    where: UserAccount_bool_exp
  ): [UserAccount!]!

  """
  fetch data from the table: "Wallet"
  """
  Wallet(
    """distinct select on columns"""
    distinct_on: [Wallet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Wallet_order_by!]

    """filter the rows returned"""
    where: Wallet_bool_exp
  ): [Wallet!]!

  """fetch data from the table: "Wallet" using primary key columns"""
  Wallet_by_pk(address: String!): Wallet

  """
  fetch data from the table in a streaming manner: "Wallet"
  """
  Wallet_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Wallet_stream_cursor_input]!

    """filter the rows returned"""
    where: Wallet_bool_exp
  ): [Wallet!]!

  """
  fetch data from the table: "Whitelist"
  """
  Whitelist(
    """distinct select on columns"""
    distinct_on: [Whitelist_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [Whitelist_order_by!]

    """filter the rows returned"""
    where: Whitelist_bool_exp
  ): [Whitelist!]!

  """
  fetch data from the table: "WhitelistEntries"
  """
  WhitelistEntries(
    """distinct select on columns"""
    distinct_on: [WhitelistEntries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [WhitelistEntries_order_by!]

    """filter the rows returned"""
    where: WhitelistEntries_bool_exp
  ): [WhitelistEntries!]!

  """
  fetch data from the table: "WhitelistEntries" using primary key columns
  """
  WhitelistEntries_by_pk(merkleRoot: String!, whitelistIndex: Int!): WhitelistEntries

  """
  fetch data from the table in a streaming manner: "WhitelistEntries"
  """
  WhitelistEntries_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [WhitelistEntries_stream_cursor_input]!

    """filter the rows returned"""
    where: WhitelistEntries_bool_exp
  ): [WhitelistEntries!]!

  """fetch data from the table: "Whitelist" using primary key columns"""
  Whitelist_by_pk(merkleRoot: String!): Whitelist

  """
  fetch data from the table in a streaming manner: "Whitelist"
  """
  Whitelist_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [Whitelist_stream_cursor_input]!

    """filter the rows returned"""
    where: Whitelist_bool_exp
  ): [Whitelist!]!
}

"""
columns and relationships of "offer"
"""
type offer {
  accepted_at: timestamptz
  buyer_id: String
  cancelled_at: timestamptz
  created_at: timestamptz!
  id: String!
  is_inactive: Boolean
  metadata(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  objkt: objkt
  objkt_id: String
  price: numeric!
  status: offer_status_enum!

  """An object relationship"""
  user: user
  version: Int!
}

"""
order by aggregate values of table "offer"
"""
input offer_aggregate_order_by {
  avg: offer_avg_order_by
  count: order_by
  max: offer_max_order_by
  min: offer_min_order_by
  stddev: offer_stddev_order_by
  stddev_pop: offer_stddev_pop_order_by
  stddev_samp: offer_stddev_samp_order_by
  sum: offer_sum_order_by
  var_pop: offer_var_pop_order_by
  var_samp: offer_var_samp_order_by
  variance: offer_variance_order_by
}

"""
order by avg() on columns of table "offer"
"""
input offer_avg_order_by {
  price: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "offer". All fields are combined with a logical 'AND'.
"""
input offer_bool_exp {
  _and: [offer_bool_exp!]
  _not: offer_bool_exp
  _or: [offer_bool_exp!]
  accepted_at: timestamptz_comparison_exp
  buyer_id: String_comparison_exp
  cancelled_at: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  id: String_comparison_exp
  is_inactive: Boolean_comparison_exp
  metadata: jsonb_comparison_exp
  objkt: objkt_bool_exp
  objkt_id: String_comparison_exp
  price: numeric_comparison_exp
  status: offer_status_enum_comparison_exp
  user: user_bool_exp
  version: Int_comparison_exp
}

"""
order by max() on columns of table "offer"
"""
input offer_max_order_by {
  accepted_at: order_by
  buyer_id: order_by
  cancelled_at: order_by
  created_at: order_by
  id: order_by
  objkt_id: order_by
  price: order_by
  status: order_by
  version: order_by
}

"""
order by min() on columns of table "offer"
"""
input offer_min_order_by {
  accepted_at: order_by
  buyer_id: order_by
  cancelled_at: order_by
  created_at: order_by
  id: order_by
  objkt_id: order_by
  price: order_by
  status: order_by
  version: order_by
}

"""Ordering options when selecting data from "offer"."""
input offer_order_by {
  accepted_at: order_by
  buyer_id: order_by
  cancelled_at: order_by
  created_at: order_by
  id: order_by
  is_inactive: order_by
  metadata: order_by
  objkt: objkt_order_by
  objkt_id: order_by
  price: order_by
  status: order_by
  user: user_order_by
  version: order_by
}

"""
select columns of table "offer"
"""
enum offer_select_column {
  """column name"""
  accepted_at

  """column name"""
  buyer_id

  """column name"""
  cancelled_at

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  is_inactive

  """column name"""
  metadata

  """column name"""
  objkt_id

  """column name"""
  price

  """column name"""
  status

  """column name"""
  version
}

scalar offer_status_enum

"""
Boolean expression to compare columns of type "offer_status_enum". All fields are combined with logical 'AND'.
"""
input offer_status_enum_comparison_exp {
  _eq: offer_status_enum
  _gt: offer_status_enum
  _gte: offer_status_enum
  _in: [offer_status_enum!]
  _is_null: Boolean
  _lt: offer_status_enum
  _lte: offer_status_enum
  _neq: offer_status_enum
  _nin: [offer_status_enum!]
}

"""
order by stddev() on columns of table "offer"
"""
input offer_stddev_order_by {
  price: order_by
  version: order_by
}

"""
order by stddev_pop() on columns of table "offer"
"""
input offer_stddev_pop_order_by {
  price: order_by
  version: order_by
}

"""
order by stddev_samp() on columns of table "offer"
"""
input offer_stddev_samp_order_by {
  price: order_by
  version: order_by
}

"""
Streaming cursor of the table "offer"
"""
input offer_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: offer_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input offer_stream_cursor_value_input {
  accepted_at: timestamptz
  buyer_id: String
  cancelled_at: timestamptz
  created_at: timestamptz
  id: String
  is_inactive: Boolean
  metadata: jsonb
  objkt_id: String
  price: numeric
  status: offer_status_enum
  version: Int
}

"""
order by sum() on columns of table "offer"
"""
input offer_sum_order_by {
  price: order_by
  version: order_by
}

"""
order by var_pop() on columns of table "offer"
"""
input offer_var_pop_order_by {
  price: order_by
  version: order_by
}

"""
order by var_samp() on columns of table "offer"
"""
input offer_var_samp_order_by {
  price: order_by
  version: order_by
}

"""
order by variance() on columns of table "offer"
"""
input offer_variance_order_by {
  price: order_by
  version: order_by
}

type onchain_query {
  """
  fetch data from the table: "action"
  """
  action(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """
  fetch aggregated fields from the table: "action"
  """
  action_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """fetch data from the table: "action" using primary key columns"""
  action_by_pk(id: uuid!): action

  """
  fetch data from the table: "article"
  """
  article(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """
  fetch aggregated fields from the table: "article"
  """
  article_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """fetch data from the table: "article" using primary key columns"""
  article_by_pk(id: Int!): article

  """
  fetch data from the table: "article_generative_token"
  """
  article_generative_token(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!

  """
  fetch data from the table: "article_generative_token" using primary key columns
  """
  article_generative_token_by_pk(article_id: Int!, generative_token_id: String!): article_generative_token

  """
  fetch data from the table: "article_ledger"
  """
  article_ledger(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """
  fetch aggregated fields from the table: "article_ledger"
  """
  article_ledger_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """fetch data from the table: "article_ledger" using primary key columns"""
  article_ledger_by_pk(article_id: Int!, owner_id: String!): article_ledger

  """
  fetch data from the table: "article_revision"
  """
  article_revision(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!

  """
  fetch data from the table: "article_revision" using primary key columns
  """
  article_revision_by_pk(article_id: Int!, iteration: smallint!): article_revision

  """
  fetch data from the table: "artist"
  """
  artist(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): [artist!]!

  """
  fetch aggregated fields from the table: "artist"
  """
  artist_aggregate(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): artist_aggregate!

  """
  fetch data from the table: "auction"
  """
  auction(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """
  fetch data from the table: "auction_bid"
  """
  auction_bid(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """fetch data from the table: "auction_bid" using primary key columns"""
  auction_bid_by_pk(id: uuid!): auction_bid

  """
  fetch data from the table: "auction_bid_table"
  """
  auction_bid_table(
    """distinct select on columns"""
    distinct_on: [auction_bid_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_table_order_by!]

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): [auction_bid_table!]!

  """
  fetch data from the table: "auction_bid_table" using primary key columns
  """
  auction_bid_table_by_pk(id: Int!): auction_bid_table

  """fetch data from the table: "auction" using primary key columns"""
  auction_by_pk(id: Int!, version: Int!): auction

  """
  fetch data from the table: "squid_processor_base.status"
  """
  base_indexer(
    """distinct select on columns"""
    distinct_on: [base_indexer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [base_indexer_order_by!]

    """filter the rows returned"""
    where: base_indexer_bool_exp
  ): [base_indexer!]!

  """
  fetch data from the table: "squid_processor_base.status" using primary key columns
  """
  base_indexer_by_pk(id: Int!): base_indexer

  """
  fetch data from the table: "codex"
  """
  codex(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """fetch data from the table: "codex" using primary key columns"""
  codex_by_pk(id: String!, token_version: generative_token_version!): codex

  """
  fetch data from the table: "codex_update_request"
  """
  codex_update_request(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """
  fetch data from the table: "codex_update_request" using primary key columns
  """
  codex_update_request_by_pk(codex_id: String!, token_id: String!, token_version: generative_token_version!): codex_update_request

  """
  fetch data from the table: "collaboration"
  """
  collaboration(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """
  fetch data from the table: "collection_offer"
  """
  collection_offer(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """
  fetch data from the table: "collection_offer" using primary key columns
  """
  collection_offer_by_pk(id: String!, version: Int!): collection_offer

  """
  fetch data from the table: "eth_frame_data"
  """
  eth_frame_data(
    """distinct select on columns"""
    distinct_on: [eth_frame_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_frame_data_order_by!]

    """filter the rows returned"""
    where: eth_frame_data_bool_exp
  ): [eth_frame_data!]!

  """fetch data from the table: "eth_frame_data" using primary key columns"""
  eth_frame_data_by_pk(id: String!): eth_frame_data

  """
  fetch data from the table: "squid_processor.status"
  """
  eth_indexer(
    """distinct select on columns"""
    distinct_on: [eth_indexer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_indexer_order_by!]

    """filter the rows returned"""
    where: eth_indexer_bool_exp
  ): [eth_indexer!]!

  """
  fetch data from the table: "squid_processor.status" using primary key columns
  """
  eth_indexer_by_pk(id: Int!): eth_indexer

  """
  fetch data from the table: "eth_minter_proceeds"
  """
  eth_minter_proceeds(
    """distinct select on columns"""
    distinct_on: [eth_minter_proceeds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_minter_proceeds_order_by!]

    """filter the rows returned"""
    where: eth_minter_proceeds_bool_exp
  ): [eth_minter_proceeds!]!

  """
  fetch data from the table: "eth_minter_proceeds" using primary key columns
  """
  eth_minter_proceeds_by_pk(id: String!): eth_minter_proceeds

  """
  fetch data from the table: "eth_primary_splits"
  """
  eth_primary_splits(
    """distinct select on columns"""
    distinct_on: [eth_primary_splits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_primary_splits_order_by!]

    """filter the rows returned"""
    where: eth_primary_splits_bool_exp
  ): [eth_primary_splits!]!

  """
  fetch data from the table: "eth_primary_splits" using primary key columns
  """
  eth_primary_splits_by_pk(id: String!): eth_primary_splits

  """
  fetch data from the table: "eth_secondary_splits"
  """
  eth_secondary_splits(
    """distinct select on columns"""
    distinct_on: [eth_secondary_splits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_secondary_splits_order_by!]

    """filter the rows returned"""
    where: eth_secondary_splits_bool_exp
  ): [eth_secondary_splits!]!

  """
  fetch data from the table: "eth_secondary_splits" using primary key columns
  """
  eth_secondary_splits_by_pk(id: String!): eth_secondary_splits

  """
  fetch data from the table: "eth_user_proceeds"
  """
  eth_user_proceeds(
    """distinct select on columns"""
    distinct_on: [eth_user_proceeds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_user_proceeds_order_by!]

    """filter the rows returned"""
    where: eth_user_proceeds_bool_exp
  ): [eth_user_proceeds!]!

  """
  fetch data from the table: "eth_user_proceeds" using primary key columns
  """
  eth_user_proceeds_by_pk(id: String!): eth_user_proceeds

  """
  fetch data from the table: "foreign_account"
  """
  foreign_account(
    """distinct select on columns"""
    distinct_on: [foreign_account_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [foreign_account_order_by!]

    """filter the rows returned"""
    where: foreign_account_bool_exp
  ): [foreign_account!]!

  """
  fetch data from the table: "foreign_wallet"
  """
  foreign_wallet(
    """distinct select on columns"""
    distinct_on: [foreign_wallet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [foreign_wallet_order_by!]

    """filter the rows returned"""
    where: foreign_wallet_bool_exp
  ): [foreign_wallet!]!

  """
  fetch data from the table: "generative_token"
  """
  generative_token(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """
  fetch aggregated fields from the table: "generative_token"
  """
  generative_token_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!

  """
  fetch data from the table: "generative_token" using primary key columns
  """
  generative_token_by_pk(id: String!): generative_token

  """
  fetch data from the table: "generative_token_collected"
  """
  generative_token_collected(
    """distinct select on columns"""
    distinct_on: [generative_token_collected_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_collected_order_by!]

    """filter the rows returned"""
    where: generative_token_collected_bool_exp
  ): [generative_token_collected!]!

  """
  fetch aggregated fields from the table: "generative_token_collected"
  """
  generative_token_collected_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_collected_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_collected_order_by!]

    """filter the rows returned"""
    where: generative_token_collected_bool_exp
  ): generative_token_collected_aggregate!

  """
  fetch data from the table: "gentk_assign"
  """
  gentk_assign(
    """distinct select on columns"""
    distinct_on: [gentk_assign_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gentk_assign_order_by!]

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): [gentk_assign!]!

  """fetch data from the table: "gentk_assign" using primary key columns"""
  gentk_assign_by_pk(id: String!): gentk_assign

  """
  fetch data from the table: "indexed_operation"
  """
  indexed_operation(
    """distinct select on columns"""
    distinct_on: [indexed_operation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [indexed_operation_order_by!]

    """filter the rows returned"""
    where: indexed_operation_bool_exp
  ): [indexed_operation!]!

  """
  fetch data from the table: "indexed_operation" using primary key columns
  """
  indexed_operation_by_pk(hashed: String!): indexed_operation

  """
  fetch data from the table: "indexing_cursor"
  """
  indexing_cursor(
    """distinct select on columns"""
    distinct_on: [indexing_cursor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [indexing_cursor_order_by!]

    """filter the rows returned"""
    where: indexing_cursor_bool_exp
  ): [indexing_cursor!]!

  """fetch data from the table: "indexing_cursor" using primary key columns"""
  indexing_cursor_by_pk(group_id: String!): indexing_cursor

  """
  fetch data from the table: "indexing_target"
  """
  indexing_target(
    """distinct select on columns"""
    distinct_on: [indexing_target_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [indexing_target_order_by!]

    """filter the rows returned"""
    where: indexing_target_bool_exp
  ): [indexing_target!]!

  """fetch data from the table: "indexing_target" using primary key columns"""
  indexing_target_by_pk(address: String!): indexing_target

  """
  fetch data from the table: "ipfs_cid"
  """
  ipfs_cid(
    """distinct select on columns"""
    distinct_on: [ipfs_cid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ipfs_cid_order_by!]

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): [ipfs_cid!]!

  """fetch data from the table: "ipfs_cid" using primary key columns"""
  ipfs_cid_by_pk(cid: String!): ipfs_cid

  """
  fetch data from the table: "listing"
  """
  listing(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """fetch data from the table: "listing" using primary key columns"""
  listing_by_pk(id: String!, version: Int!): listing

  """
  fetch data from the table: "market_stats"
  """
  market_stats(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): [market_stats!]!

  """
  fetch aggregated fields from the table: "market_stats"
  """
  market_stats_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): market_stats_aggregate!

  """fetch data from the table: "market_stats" using primary key columns"""
  market_stats_by_pk(token_id: String!): market_stats

  """
  fetch data from the table: "market_stats_history"
  """
  market_stats_history(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """
  fetch data from the table: "market_stats_history" using primary key columns
  """
  market_stats_history_by_pk(id: Int!): market_stats_history

  """
  fetch data from the table: "media_image"
  """
  media_image(
    """distinct select on columns"""
    distinct_on: [media_image_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_image_order_by!]

    """filter the rows returned"""
    where: media_image_bool_exp
  ): [media_image!]!

  """fetch data from the table: "media_image" using primary key columns"""
  media_image_by_pk(id: bpchar!): media_image

  """
  fetch data from the table: "metric"
  """
  metric(
    """distinct select on columns"""
    distinct_on: [metric_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_order_by!]

    """filter the rows returned"""
    where: metric_bool_exp
  ): [metric!]!

  """fetch data from the table: "metric" using primary key columns"""
  metric_by_pk(id: String!): metric

  """
  fetch data from the table: "mint_ticket"
  """
  mint_ticket(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """fetch data from the table: "mint_ticket" using primary key columns"""
  mint_ticket_by_pk(id: String!): mint_ticket

  """An array relationship"""
  mint_ticket_settings(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """
  fetch data from the table: "mint_ticket_settings" using primary key columns
  """
  mint_ticket_settings_by_pk(id: String!): mint_ticket_settings

  """
  fetch data from the table: "moderation_reason"
  """
  moderation_reason(
    """distinct select on columns"""
    distinct_on: [moderation_reason_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moderation_reason_order_by!]

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): [moderation_reason!]!

  """
  fetch data from the table: "moderation_reason" using primary key columns
  """
  moderation_reason_by_pk(id: String!): moderation_reason

  """
  fetch data from the table: "objkt"
  """
  objkt(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """
  fetch aggregated fields from the table: "objkt"
  """
  objkt_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """fetch data from the table: "objkt" using primary key columns"""
  objkt_by_pk(id: String!): objkt

  """
  fetch data from the table: "offer"
  """
  offer(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """fetch data from the table: "offer" using primary key columns"""
  offer_by_pk(id: String!, version: Int!): offer

  """
  fetch data from the table: "pricing_dutch_auction"
  """
  pricing_dutch_auction(
    """distinct select on columns"""
    distinct_on: [pricing_dutch_auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_dutch_auction_order_by!]

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): [pricing_dutch_auction!]!

  """
  fetch data from the table: "pricing_dutch_auction" using primary key columns
  """
  pricing_dutch_auction_by_pk(id: String!): pricing_dutch_auction

  """
  fetch data from the table: "pricing_fixed"
  """
  pricing_fixed(
    """distinct select on columns"""
    distinct_on: [pricing_fixed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_fixed_order_by!]

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): [pricing_fixed!]!

  """fetch data from the table: "pricing_fixed" using primary key columns"""
  pricing_fixed_by_pk(id: String!): pricing_fixed

  """
  fetch data from the table: "redeemable"
  """
  redeemable(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """fetch data from the table: "redeemable" using primary key columns"""
  redeemable_by_pk(address: String!): redeemable

  """
  fetch data from the table: "redemption"
  """
  redemption(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """fetch data from the table: "redemption" using primary key columns"""
  redemption_by_pk(id: Int!): redemption

  """
  fetch data from the table: "report"
  """
  report(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """fetch data from the table: "report" using primary key columns"""
  report_by_pk(id: uuid!): report

  """
  fetch data from the table: "reserve"
  """
  reserve(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!

  """fetch data from the table: "reserve" using primary key columns"""
  reserve_by_pk(id: Int!): reserve

  """
  fetch data from the table: "split"
  """
  split(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """fetch data from the table: "split" using primary key columns"""
  split_by_pk(id: Int!): split

  """
  fetch data from the table: "transaction"
  """
  transaction(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """fetch data from the table: "transaction" using primary key columns"""
  transaction_by_pk(id: Int!): transaction

  """
  fetch data from the table: "user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """fetch data from the table: "user" using primary key columns"""
  user_by_pk(id: String!): user

  """
  fetch data from the table: "user_stats"
  """
  user_stats(
    """distinct select on columns"""
    distinct_on: [user_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_stats_order_by!]

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): [user_stats!]!

  """fetch data from the table: "user_stats" using primary key columns"""
  user_stats_by_pk(user_id: String!): user_stats
}

type onchain_subscription {
  """
  fetch data from the table: "action"
  """
  action(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """
  fetch aggregated fields from the table: "action"
  """
  action_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """fetch data from the table: "action" using primary key columns"""
  action_by_pk(id: uuid!): action

  """
  fetch data from the table in a streaming manner: "action"
  """
  action_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [action_stream_cursor_input]!

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """
  fetch data from the table: "article"
  """
  article(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """
  fetch aggregated fields from the table: "article"
  """
  article_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """fetch data from the table: "article" using primary key columns"""
  article_by_pk(id: Int!): article

  """
  fetch data from the table: "article_generative_token"
  """
  article_generative_token(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!

  """
  fetch data from the table: "article_generative_token" using primary key columns
  """
  article_generative_token_by_pk(article_id: Int!, generative_token_id: String!): article_generative_token

  """
  fetch data from the table in a streaming manner: "article_generative_token"
  """
  article_generative_token_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_generative_token_stream_cursor_input]!

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!

  """
  fetch data from the table: "article_ledger"
  """
  article_ledger(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """
  fetch aggregated fields from the table: "article_ledger"
  """
  article_ledger_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """fetch data from the table: "article_ledger" using primary key columns"""
  article_ledger_by_pk(article_id: Int!, owner_id: String!): article_ledger

  """
  fetch data from the table in a streaming manner: "article_ledger"
  """
  article_ledger_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_ledger_stream_cursor_input]!

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """
  fetch data from the table: "article_revision"
  """
  article_revision(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!

  """
  fetch data from the table: "article_revision" using primary key columns
  """
  article_revision_by_pk(article_id: Int!, iteration: smallint!): article_revision

  """
  fetch data from the table in a streaming manner: "article_revision"
  """
  article_revision_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_revision_stream_cursor_input]!

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!

  """
  fetch data from the table in a streaming manner: "article"
  """
  article_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_stream_cursor_input]!

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """
  fetch data from the table: "artist"
  """
  artist(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): [artist!]!

  """
  fetch aggregated fields from the table: "artist"
  """
  artist_aggregate(
    """distinct select on columns"""
    distinct_on: [artist_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artist_order_by!]

    """filter the rows returned"""
    where: artist_bool_exp
  ): artist_aggregate!

  """
  fetch data from the table in a streaming manner: "artist"
  """
  artist_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [artist_stream_cursor_input]!

    """filter the rows returned"""
    where: artist_bool_exp
  ): [artist!]!

  """
  fetch data from the table: "auction"
  """
  auction(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """
  fetch data from the table: "auction_bid"
  """
  auction_bid(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """fetch data from the table: "auction_bid" using primary key columns"""
  auction_bid_by_pk(id: uuid!): auction_bid

  """
  fetch data from the table in a streaming manner: "auction_bid"
  """
  auction_bid_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [auction_bid_stream_cursor_input]!

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """
  fetch data from the table: "auction_bid_table"
  """
  auction_bid_table(
    """distinct select on columns"""
    distinct_on: [auction_bid_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_table_order_by!]

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): [auction_bid_table!]!

  """
  fetch data from the table: "auction_bid_table" using primary key columns
  """
  auction_bid_table_by_pk(id: Int!): auction_bid_table

  """
  fetch data from the table in a streaming manner: "auction_bid_table"
  """
  auction_bid_table_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [auction_bid_table_stream_cursor_input]!

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): [auction_bid_table!]!

  """fetch data from the table: "auction" using primary key columns"""
  auction_by_pk(id: Int!, version: Int!): auction

  """
  fetch data from the table in a streaming manner: "auction"
  """
  auction_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [auction_stream_cursor_input]!

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """
  fetch data from the table: "squid_processor_base.status"
  """
  base_indexer(
    """distinct select on columns"""
    distinct_on: [base_indexer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [base_indexer_order_by!]

    """filter the rows returned"""
    where: base_indexer_bool_exp
  ): [base_indexer!]!

  """
  fetch data from the table: "squid_processor_base.status" using primary key columns
  """
  base_indexer_by_pk(id: Int!): base_indexer

  """
  fetch data from the table in a streaming manner: "squid_processor_base.status"
  """
  base_indexer_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [base_indexer_stream_cursor_input]!

    """filter the rows returned"""
    where: base_indexer_bool_exp
  ): [base_indexer!]!

  """
  fetch data from the table: "codex"
  """
  codex(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """fetch data from the table: "codex" using primary key columns"""
  codex_by_pk(id: String!, token_version: generative_token_version!): codex

  """
  fetch data from the table in a streaming manner: "codex"
  """
  codex_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [codex_stream_cursor_input]!

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """
  fetch data from the table: "codex_update_request"
  """
  codex_update_request(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """
  fetch data from the table: "codex_update_request" using primary key columns
  """
  codex_update_request_by_pk(codex_id: String!, token_id: String!, token_version: generative_token_version!): codex_update_request

  """
  fetch data from the table in a streaming manner: "codex_update_request"
  """
  codex_update_request_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [codex_update_request_stream_cursor_input]!

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """
  fetch data from the table: "collaboration"
  """
  collaboration(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """
  fetch data from the table in a streaming manner: "collaboration"
  """
  collaboration_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [collaboration_stream_cursor_input]!

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """
  fetch data from the table: "collection_offer"
  """
  collection_offer(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """
  fetch data from the table: "collection_offer" using primary key columns
  """
  collection_offer_by_pk(id: String!, version: Int!): collection_offer

  """
  fetch data from the table in a streaming manner: "collection_offer"
  """
  collection_offer_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [collection_offer_stream_cursor_input]!

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """
  fetch data from the table: "eth_frame_data"
  """
  eth_frame_data(
    """distinct select on columns"""
    distinct_on: [eth_frame_data_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_frame_data_order_by!]

    """filter the rows returned"""
    where: eth_frame_data_bool_exp
  ): [eth_frame_data!]!

  """fetch data from the table: "eth_frame_data" using primary key columns"""
  eth_frame_data_by_pk(id: String!): eth_frame_data

  """
  fetch data from the table in a streaming manner: "eth_frame_data"
  """
  eth_frame_data_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eth_frame_data_stream_cursor_input]!

    """filter the rows returned"""
    where: eth_frame_data_bool_exp
  ): [eth_frame_data!]!

  """
  fetch data from the table: "squid_processor.status"
  """
  eth_indexer(
    """distinct select on columns"""
    distinct_on: [eth_indexer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_indexer_order_by!]

    """filter the rows returned"""
    where: eth_indexer_bool_exp
  ): [eth_indexer!]!

  """
  fetch data from the table: "squid_processor.status" using primary key columns
  """
  eth_indexer_by_pk(id: Int!): eth_indexer

  """
  fetch data from the table in a streaming manner: "squid_processor.status"
  """
  eth_indexer_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eth_indexer_stream_cursor_input]!

    """filter the rows returned"""
    where: eth_indexer_bool_exp
  ): [eth_indexer!]!

  """
  fetch data from the table: "eth_minter_proceeds"
  """
  eth_minter_proceeds(
    """distinct select on columns"""
    distinct_on: [eth_minter_proceeds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_minter_proceeds_order_by!]

    """filter the rows returned"""
    where: eth_minter_proceeds_bool_exp
  ): [eth_minter_proceeds!]!

  """
  fetch data from the table: "eth_minter_proceeds" using primary key columns
  """
  eth_minter_proceeds_by_pk(id: String!): eth_minter_proceeds

  """
  fetch data from the table in a streaming manner: "eth_minter_proceeds"
  """
  eth_minter_proceeds_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eth_minter_proceeds_stream_cursor_input]!

    """filter the rows returned"""
    where: eth_minter_proceeds_bool_exp
  ): [eth_minter_proceeds!]!

  """
  fetch data from the table: "eth_primary_splits"
  """
  eth_primary_splits(
    """distinct select on columns"""
    distinct_on: [eth_primary_splits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_primary_splits_order_by!]

    """filter the rows returned"""
    where: eth_primary_splits_bool_exp
  ): [eth_primary_splits!]!

  """
  fetch data from the table: "eth_primary_splits" using primary key columns
  """
  eth_primary_splits_by_pk(id: String!): eth_primary_splits

  """
  fetch data from the table in a streaming manner: "eth_primary_splits"
  """
  eth_primary_splits_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eth_primary_splits_stream_cursor_input]!

    """filter the rows returned"""
    where: eth_primary_splits_bool_exp
  ): [eth_primary_splits!]!

  """
  fetch data from the table: "eth_secondary_splits"
  """
  eth_secondary_splits(
    """distinct select on columns"""
    distinct_on: [eth_secondary_splits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_secondary_splits_order_by!]

    """filter the rows returned"""
    where: eth_secondary_splits_bool_exp
  ): [eth_secondary_splits!]!

  """
  fetch data from the table: "eth_secondary_splits" using primary key columns
  """
  eth_secondary_splits_by_pk(id: String!): eth_secondary_splits

  """
  fetch data from the table in a streaming manner: "eth_secondary_splits"
  """
  eth_secondary_splits_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eth_secondary_splits_stream_cursor_input]!

    """filter the rows returned"""
    where: eth_secondary_splits_bool_exp
  ): [eth_secondary_splits!]!

  """
  fetch data from the table: "eth_user_proceeds"
  """
  eth_user_proceeds(
    """distinct select on columns"""
    distinct_on: [eth_user_proceeds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eth_user_proceeds_order_by!]

    """filter the rows returned"""
    where: eth_user_proceeds_bool_exp
  ): [eth_user_proceeds!]!

  """
  fetch data from the table: "eth_user_proceeds" using primary key columns
  """
  eth_user_proceeds_by_pk(id: String!): eth_user_proceeds

  """
  fetch data from the table in a streaming manner: "eth_user_proceeds"
  """
  eth_user_proceeds_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eth_user_proceeds_stream_cursor_input]!

    """filter the rows returned"""
    where: eth_user_proceeds_bool_exp
  ): [eth_user_proceeds!]!

  """
  fetch data from the table: "foreign_account"
  """
  foreign_account(
    """distinct select on columns"""
    distinct_on: [foreign_account_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [foreign_account_order_by!]

    """filter the rows returned"""
    where: foreign_account_bool_exp
  ): [foreign_account!]!

  """
  fetch data from the table in a streaming manner: "foreign_account"
  """
  foreign_account_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [foreign_account_stream_cursor_input]!

    """filter the rows returned"""
    where: foreign_account_bool_exp
  ): [foreign_account!]!

  """
  fetch data from the table: "foreign_wallet"
  """
  foreign_wallet(
    """distinct select on columns"""
    distinct_on: [foreign_wallet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [foreign_wallet_order_by!]

    """filter the rows returned"""
    where: foreign_wallet_bool_exp
  ): [foreign_wallet!]!

  """
  fetch data from the table in a streaming manner: "foreign_wallet"
  """
  foreign_wallet_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [foreign_wallet_stream_cursor_input]!

    """filter the rows returned"""
    where: foreign_wallet_bool_exp
  ): [foreign_wallet!]!

  """
  fetch data from the table: "generative_token"
  """
  generative_token(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """
  fetch aggregated fields from the table: "generative_token"
  """
  generative_token_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!

  """
  fetch data from the table: "generative_token" using primary key columns
  """
  generative_token_by_pk(id: String!): generative_token

  """
  fetch data from the table: "generative_token_collected"
  """
  generative_token_collected(
    """distinct select on columns"""
    distinct_on: [generative_token_collected_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_collected_order_by!]

    """filter the rows returned"""
    where: generative_token_collected_bool_exp
  ): [generative_token_collected!]!

  """
  fetch aggregated fields from the table: "generative_token_collected"
  """
  generative_token_collected_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_collected_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_collected_order_by!]

    """filter the rows returned"""
    where: generative_token_collected_bool_exp
  ): generative_token_collected_aggregate!

  """
  fetch data from the table in a streaming manner: "generative_token_collected"
  """
  generative_token_collected_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [generative_token_collected_stream_cursor_input]!

    """filter the rows returned"""
    where: generative_token_collected_bool_exp
  ): [generative_token_collected!]!

  """
  fetch data from the table in a streaming manner: "generative_token"
  """
  generative_token_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [generative_token_stream_cursor_input]!

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """
  fetch data from the table: "gentk_assign"
  """
  gentk_assign(
    """distinct select on columns"""
    distinct_on: [gentk_assign_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gentk_assign_order_by!]

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): [gentk_assign!]!

  """fetch data from the table: "gentk_assign" using primary key columns"""
  gentk_assign_by_pk(id: String!): gentk_assign

  """
  fetch data from the table in a streaming manner: "gentk_assign"
  """
  gentk_assign_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [gentk_assign_stream_cursor_input]!

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): [gentk_assign!]!

  """
  fetch data from the table: "indexed_operation"
  """
  indexed_operation(
    """distinct select on columns"""
    distinct_on: [indexed_operation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [indexed_operation_order_by!]

    """filter the rows returned"""
    where: indexed_operation_bool_exp
  ): [indexed_operation!]!

  """
  fetch data from the table: "indexed_operation" using primary key columns
  """
  indexed_operation_by_pk(hashed: String!): indexed_operation

  """
  fetch data from the table in a streaming manner: "indexed_operation"
  """
  indexed_operation_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [indexed_operation_stream_cursor_input]!

    """filter the rows returned"""
    where: indexed_operation_bool_exp
  ): [indexed_operation!]!

  """
  fetch data from the table: "indexing_cursor"
  """
  indexing_cursor(
    """distinct select on columns"""
    distinct_on: [indexing_cursor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [indexing_cursor_order_by!]

    """filter the rows returned"""
    where: indexing_cursor_bool_exp
  ): [indexing_cursor!]!

  """fetch data from the table: "indexing_cursor" using primary key columns"""
  indexing_cursor_by_pk(group_id: String!): indexing_cursor

  """
  fetch data from the table in a streaming manner: "indexing_cursor"
  """
  indexing_cursor_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [indexing_cursor_stream_cursor_input]!

    """filter the rows returned"""
    where: indexing_cursor_bool_exp
  ): [indexing_cursor!]!

  """
  fetch data from the table: "indexing_target"
  """
  indexing_target(
    """distinct select on columns"""
    distinct_on: [indexing_target_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [indexing_target_order_by!]

    """filter the rows returned"""
    where: indexing_target_bool_exp
  ): [indexing_target!]!

  """fetch data from the table: "indexing_target" using primary key columns"""
  indexing_target_by_pk(address: String!): indexing_target

  """
  fetch data from the table in a streaming manner: "indexing_target"
  """
  indexing_target_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [indexing_target_stream_cursor_input]!

    """filter the rows returned"""
    where: indexing_target_bool_exp
  ): [indexing_target!]!

  """
  fetch data from the table: "ipfs_cid"
  """
  ipfs_cid(
    """distinct select on columns"""
    distinct_on: [ipfs_cid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ipfs_cid_order_by!]

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): [ipfs_cid!]!

  """fetch data from the table: "ipfs_cid" using primary key columns"""
  ipfs_cid_by_pk(cid: String!): ipfs_cid

  """
  fetch data from the table in a streaming manner: "ipfs_cid"
  """
  ipfs_cid_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [ipfs_cid_stream_cursor_input]!

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): [ipfs_cid!]!

  """
  fetch data from the table: "listing"
  """
  listing(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """fetch data from the table: "listing" using primary key columns"""
  listing_by_pk(id: String!, version: Int!): listing

  """
  fetch data from the table in a streaming manner: "listing"
  """
  listing_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [listing_stream_cursor_input]!

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """
  fetch data from the table: "market_stats"
  """
  market_stats(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): [market_stats!]!

  """
  fetch aggregated fields from the table: "market_stats"
  """
  market_stats_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): market_stats_aggregate!

  """fetch data from the table: "market_stats" using primary key columns"""
  market_stats_by_pk(token_id: String!): market_stats

  """
  fetch data from the table: "market_stats_history"
  """
  market_stats_history(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """
  fetch data from the table: "market_stats_history" using primary key columns
  """
  market_stats_history_by_pk(id: Int!): market_stats_history

  """
  fetch data from the table in a streaming manner: "market_stats_history"
  """
  market_stats_history_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [market_stats_history_stream_cursor_input]!

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """
  fetch data from the table in a streaming manner: "market_stats"
  """
  market_stats_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [market_stats_stream_cursor_input]!

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): [market_stats!]!

  """
  fetch data from the table: "media_image"
  """
  media_image(
    """distinct select on columns"""
    distinct_on: [media_image_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_image_order_by!]

    """filter the rows returned"""
    where: media_image_bool_exp
  ): [media_image!]!

  """fetch data from the table: "media_image" using primary key columns"""
  media_image_by_pk(id: bpchar!): media_image

  """
  fetch data from the table in a streaming manner: "media_image"
  """
  media_image_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [media_image_stream_cursor_input]!

    """filter the rows returned"""
    where: media_image_bool_exp
  ): [media_image!]!

  """
  fetch data from the table: "metric"
  """
  metric(
    """distinct select on columns"""
    distinct_on: [metric_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_order_by!]

    """filter the rows returned"""
    where: metric_bool_exp
  ): [metric!]!

  """fetch data from the table: "metric" using primary key columns"""
  metric_by_pk(id: String!): metric

  """
  fetch data from the table in a streaming manner: "metric"
  """
  metric_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [metric_stream_cursor_input]!

    """filter the rows returned"""
    where: metric_bool_exp
  ): [metric!]!

  """
  fetch data from the table: "mint_ticket"
  """
  mint_ticket(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """fetch data from the table: "mint_ticket" using primary key columns"""
  mint_ticket_by_pk(id: String!): mint_ticket

  """An array relationship"""
  mint_ticket_settings(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """
  fetch data from the table: "mint_ticket_settings" using primary key columns
  """
  mint_ticket_settings_by_pk(id: String!): mint_ticket_settings

  """
  fetch data from the table in a streaming manner: "mint_ticket_settings"
  """
  mint_ticket_settings_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [mint_ticket_settings_stream_cursor_input]!

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """
  fetch data from the table in a streaming manner: "mint_ticket"
  """
  mint_ticket_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [mint_ticket_stream_cursor_input]!

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """
  fetch data from the table: "moderation_reason"
  """
  moderation_reason(
    """distinct select on columns"""
    distinct_on: [moderation_reason_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moderation_reason_order_by!]

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): [moderation_reason!]!

  """
  fetch data from the table: "moderation_reason" using primary key columns
  """
  moderation_reason_by_pk(id: String!): moderation_reason

  """
  fetch data from the table in a streaming manner: "moderation_reason"
  """
  moderation_reason_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [moderation_reason_stream_cursor_input]!

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): [moderation_reason!]!

  """
  fetch data from the table: "objkt"
  """
  objkt(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """
  fetch aggregated fields from the table: "objkt"
  """
  objkt_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """fetch data from the table: "objkt" using primary key columns"""
  objkt_by_pk(id: String!): objkt

  """
  fetch data from the table in a streaming manner: "objkt"
  """
  objkt_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [objkt_stream_cursor_input]!

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """
  fetch data from the table: "offer"
  """
  offer(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """fetch data from the table: "offer" using primary key columns"""
  offer_by_pk(id: String!, version: Int!): offer

  """
  fetch data from the table in a streaming manner: "offer"
  """
  offer_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [offer_stream_cursor_input]!

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """
  fetch data from the table: "pricing_dutch_auction"
  """
  pricing_dutch_auction(
    """distinct select on columns"""
    distinct_on: [pricing_dutch_auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_dutch_auction_order_by!]

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): [pricing_dutch_auction!]!

  """
  fetch data from the table: "pricing_dutch_auction" using primary key columns
  """
  pricing_dutch_auction_by_pk(id: String!): pricing_dutch_auction

  """
  fetch data from the table in a streaming manner: "pricing_dutch_auction"
  """
  pricing_dutch_auction_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [pricing_dutch_auction_stream_cursor_input]!

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): [pricing_dutch_auction!]!

  """
  fetch data from the table: "pricing_fixed"
  """
  pricing_fixed(
    """distinct select on columns"""
    distinct_on: [pricing_fixed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_fixed_order_by!]

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): [pricing_fixed!]!

  """fetch data from the table: "pricing_fixed" using primary key columns"""
  pricing_fixed_by_pk(id: String!): pricing_fixed

  """
  fetch data from the table in a streaming manner: "pricing_fixed"
  """
  pricing_fixed_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [pricing_fixed_stream_cursor_input]!

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): [pricing_fixed!]!

  """
  fetch data from the table: "redeemable"
  """
  redeemable(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """fetch data from the table: "redeemable" using primary key columns"""
  redeemable_by_pk(address: String!): redeemable

  """
  fetch data from the table in a streaming manner: "redeemable"
  """
  redeemable_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [redeemable_stream_cursor_input]!

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """
  fetch data from the table: "redemption"
  """
  redemption(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """fetch data from the table: "redemption" using primary key columns"""
  redemption_by_pk(id: Int!): redemption

  """
  fetch data from the table in a streaming manner: "redemption"
  """
  redemption_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [redemption_stream_cursor_input]!

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """
  fetch data from the table: "report"
  """
  report(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """fetch data from the table: "report" using primary key columns"""
  report_by_pk(id: uuid!): report

  """
  fetch data from the table in a streaming manner: "report"
  """
  report_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [report_stream_cursor_input]!

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """
  fetch data from the table: "reserve"
  """
  reserve(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!

  """fetch data from the table: "reserve" using primary key columns"""
  reserve_by_pk(id: Int!): reserve

  """
  fetch data from the table in a streaming manner: "reserve"
  """
  reserve_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [reserve_stream_cursor_input]!

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!

  """
  fetch data from the table: "split"
  """
  split(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """fetch data from the table: "split" using primary key columns"""
  split_by_pk(id: Int!): split

  """
  fetch data from the table in a streaming manner: "split"
  """
  split_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [split_stream_cursor_input]!

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """
  fetch data from the table: "transaction"
  """
  transaction(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """fetch data from the table: "transaction" using primary key columns"""
  transaction_by_pk(id: Int!): transaction

  """
  fetch data from the table in a streaming manner: "transaction"
  """
  transaction_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [transaction_stream_cursor_input]!

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """
  fetch data from the table: "user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """fetch data from the table: "user" using primary key columns"""
  user_by_pk(id: String!): user

  """
  fetch data from the table: "user_stats"
  """
  user_stats(
    """distinct select on columns"""
    distinct_on: [user_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_stats_order_by!]

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): [user_stats!]!

  """fetch data from the table: "user_stats" using primary key columns"""
  user_stats_by_pk(user_id: String!): user_stats

  """
  fetch data from the table in a streaming manner: "user_stats"
  """
  user_stats_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [user_stats_stream_cursor_input]!

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): [user_stats!]!

  """
  fetch data from the table in a streaming manner: "user"
  """
  user_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [user_stream_cursor_input]!

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "pricing_dutch_auction"
"""
type pricing_dutch_auction {
  decrement_duration: bigint!
  final_price: numeric

  """An object relationship"""
  generative_token: generative_token
  id: String!
  levels: [numeric!]!
  opens_at: timestamptz
  refundable: Boolean
  resting_price: String!
  token_id: String
}

"""
order by aggregate values of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_aggregate_order_by {
  avg: pricing_dutch_auction_avg_order_by
  count: order_by
  max: pricing_dutch_auction_max_order_by
  min: pricing_dutch_auction_min_order_by
  stddev: pricing_dutch_auction_stddev_order_by
  stddev_pop: pricing_dutch_auction_stddev_pop_order_by
  stddev_samp: pricing_dutch_auction_stddev_samp_order_by
  sum: pricing_dutch_auction_sum_order_by
  var_pop: pricing_dutch_auction_var_pop_order_by
  var_samp: pricing_dutch_auction_var_samp_order_by
  variance: pricing_dutch_auction_variance_order_by
}

"""
order by avg() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_avg_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
Boolean expression to filter rows from the table "pricing_dutch_auction". All fields are combined with a logical 'AND'.
"""
input pricing_dutch_auction_bool_exp {
  _and: [pricing_dutch_auction_bool_exp!]
  _not: pricing_dutch_auction_bool_exp
  _or: [pricing_dutch_auction_bool_exp!]
  decrement_duration: bigint_comparison_exp
  final_price: numeric_comparison_exp
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  levels: numeric_array_comparison_exp
  opens_at: timestamptz_comparison_exp
  refundable: Boolean_comparison_exp
  resting_price: String_comparison_exp
  token_id: String_comparison_exp
}

"""
order by max() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_max_order_by {
  decrement_duration: order_by
  final_price: order_by
  id: order_by
  levels: order_by
  opens_at: order_by
  resting_price: order_by
  token_id: order_by
}

"""
order by min() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_min_order_by {
  decrement_duration: order_by
  final_price: order_by
  id: order_by
  levels: order_by
  opens_at: order_by
  resting_price: order_by
  token_id: order_by
}

"""Ordering options when selecting data from "pricing_dutch_auction"."""
input pricing_dutch_auction_order_by {
  decrement_duration: order_by
  final_price: order_by
  generative_token: generative_token_order_by
  id: order_by
  levels: order_by
  opens_at: order_by
  refundable: order_by
  resting_price: order_by
  token_id: order_by
}

"""
select columns of table "pricing_dutch_auction"
"""
enum pricing_dutch_auction_select_column {
  """column name"""
  decrement_duration

  """column name"""
  final_price

  """column name"""
  id

  """column name"""
  levels

  """column name"""
  opens_at

  """column name"""
  refundable

  """column name"""
  resting_price

  """column name"""
  token_id
}

"""
order by stddev() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_stddev_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
order by stddev_pop() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_stddev_pop_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
order by stddev_samp() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_stddev_samp_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
Streaming cursor of the table "pricing_dutch_auction"
"""
input pricing_dutch_auction_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: pricing_dutch_auction_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input pricing_dutch_auction_stream_cursor_value_input {
  decrement_duration: bigint
  final_price: numeric
  id: String
  levels: [numeric!]
  opens_at: timestamptz
  refundable: Boolean
  resting_price: String
  token_id: String
}

"""
order by sum() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_sum_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
order by var_pop() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_var_pop_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
order by var_samp() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_var_samp_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
order by variance() on columns of table "pricing_dutch_auction"
"""
input pricing_dutch_auction_variance_order_by {
  decrement_duration: order_by
  final_price: order_by
}

"""
columns and relationships of "pricing_fixed"
"""
type pricing_fixed {
  """An object relationship"""
  generative_token: generative_token
  id: String!
  opens_at: timestamptz
  price: numeric!
  token_id: String
}

"""
order by aggregate values of table "pricing_fixed"
"""
input pricing_fixed_aggregate_order_by {
  avg: pricing_fixed_avg_order_by
  count: order_by
  max: pricing_fixed_max_order_by
  min: pricing_fixed_min_order_by
  stddev: pricing_fixed_stddev_order_by
  stddev_pop: pricing_fixed_stddev_pop_order_by
  stddev_samp: pricing_fixed_stddev_samp_order_by
  sum: pricing_fixed_sum_order_by
  var_pop: pricing_fixed_var_pop_order_by
  var_samp: pricing_fixed_var_samp_order_by
  variance: pricing_fixed_variance_order_by
}

"""
order by avg() on columns of table "pricing_fixed"
"""
input pricing_fixed_avg_order_by {
  price: order_by
}

"""
Boolean expression to filter rows from the table "pricing_fixed". All fields are combined with a logical 'AND'.
"""
input pricing_fixed_bool_exp {
  _and: [pricing_fixed_bool_exp!]
  _not: pricing_fixed_bool_exp
  _or: [pricing_fixed_bool_exp!]
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  opens_at: timestamptz_comparison_exp
  price: numeric_comparison_exp
  token_id: String_comparison_exp
}

"""
order by max() on columns of table "pricing_fixed"
"""
input pricing_fixed_max_order_by {
  id: order_by
  opens_at: order_by
  price: order_by
  token_id: order_by
}

"""
order by min() on columns of table "pricing_fixed"
"""
input pricing_fixed_min_order_by {
  id: order_by
  opens_at: order_by
  price: order_by
  token_id: order_by
}

"""Ordering options when selecting data from "pricing_fixed"."""
input pricing_fixed_order_by {
  generative_token: generative_token_order_by
  id: order_by
  opens_at: order_by
  price: order_by
  token_id: order_by
}

"""
select columns of table "pricing_fixed"
"""
enum pricing_fixed_select_column {
  """column name"""
  id

  """column name"""
  opens_at

  """column name"""
  price

  """column name"""
  token_id
}

"""
order by stddev() on columns of table "pricing_fixed"
"""
input pricing_fixed_stddev_order_by {
  price: order_by
}

"""
order by stddev_pop() on columns of table "pricing_fixed"
"""
input pricing_fixed_stddev_pop_order_by {
  price: order_by
}

"""
order by stddev_samp() on columns of table "pricing_fixed"
"""
input pricing_fixed_stddev_samp_order_by {
  price: order_by
}

"""
Streaming cursor of the table "pricing_fixed"
"""
input pricing_fixed_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: pricing_fixed_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input pricing_fixed_stream_cursor_value_input {
  id: String
  opens_at: timestamptz
  price: numeric
  token_id: String
}

"""
order by sum() on columns of table "pricing_fixed"
"""
input pricing_fixed_sum_order_by {
  price: order_by
}

"""
order by var_pop() on columns of table "pricing_fixed"
"""
input pricing_fixed_var_pop_order_by {
  price: order_by
}

"""
order by var_samp() on columns of table "pricing_fixed"
"""
input pricing_fixed_var_samp_order_by {
  price: order_by
}

"""
order by variance() on columns of table "pricing_fixed"
"""
input pricing_fixed_variance_order_by {
  price: order_by
}

type query_root {
  """Simulates an EVM transaction and returns the simulation results."""
  estimate_evm_transaction(input: EstimateEvmTransactionInput!): EstimateEvmTransactionOutput
  mailTemplates: [MailTemplate!]!
  managedWalletState(publicKey: String!): EWalletOperatorState!
  mediaFullUrl(s3key: String!): String!
  offchain: offchain_query
  onchain: onchain_query
  walletRpcs: [WalletRpc!]
}

input random_objkts_generative_token_args {
  excluded_ids: _text
  limit_param: Int
}

"""
columns and relationships of "redeemable"
"""
type redeemable {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!
  address: String!
  base_amount: numeric!
  created_at: timestamptz!
  fa2: String!

  """An object relationship"""
  generative_token: generative_token!
  max_consumptions_per_token: Int!

  """An array relationship"""
  redemptions(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!
  token_id: String!
}

"""
order by aggregate values of table "redeemable"
"""
input redeemable_aggregate_order_by {
  avg: redeemable_avg_order_by
  count: order_by
  max: redeemable_max_order_by
  min: redeemable_min_order_by
  stddev: redeemable_stddev_order_by
  stddev_pop: redeemable_stddev_pop_order_by
  stddev_samp: redeemable_stddev_samp_order_by
  sum: redeemable_sum_order_by
  var_pop: redeemable_var_pop_order_by
  var_samp: redeemable_var_samp_order_by
  variance: redeemable_variance_order_by
}

"""
order by avg() on columns of table "redeemable"
"""
input redeemable_avg_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
Boolean expression to filter rows from the table "redeemable". All fields are combined with a logical 'AND'.
"""
input redeemable_bool_exp {
  _and: [redeemable_bool_exp!]
  _not: redeemable_bool_exp
  _or: [redeemable_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  address: String_comparison_exp
  base_amount: numeric_comparison_exp
  created_at: timestamptz_comparison_exp
  fa2: String_comparison_exp
  generative_token: generative_token_bool_exp
  max_consumptions_per_token: Int_comparison_exp
  redemptions: redemption_bool_exp
  splits: split_bool_exp
  token_id: String_comparison_exp
}

"""
order by max() on columns of table "redeemable"
"""
input redeemable_max_order_by {
  address: order_by
  base_amount: order_by
  created_at: order_by
  fa2: order_by
  max_consumptions_per_token: order_by
  token_id: order_by
}

"""
order by min() on columns of table "redeemable"
"""
input redeemable_min_order_by {
  address: order_by
  base_amount: order_by
  created_at: order_by
  fa2: order_by
  max_consumptions_per_token: order_by
  token_id: order_by
}

"""Ordering options when selecting data from "redeemable"."""
input redeemable_order_by {
  actions_aggregate: action_aggregate_order_by
  address: order_by
  base_amount: order_by
  created_at: order_by
  fa2: order_by
  generative_token: generative_token_order_by
  max_consumptions_per_token: order_by
  redemptions_aggregate: redemption_aggregate_order_by
  splits_aggregate: split_aggregate_order_by
  token_id: order_by
}

"""
select columns of table "redeemable"
"""
enum redeemable_select_column {
  """column name"""
  address

  """column name"""
  base_amount

  """column name"""
  created_at

  """column name"""
  fa2

  """column name"""
  max_consumptions_per_token

  """column name"""
  token_id
}

"""
order by stddev() on columns of table "redeemable"
"""
input redeemable_stddev_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
order by stddev_pop() on columns of table "redeemable"
"""
input redeemable_stddev_pop_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
order by stddev_samp() on columns of table "redeemable"
"""
input redeemable_stddev_samp_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
Streaming cursor of the table "redeemable"
"""
input redeemable_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: redeemable_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input redeemable_stream_cursor_value_input {
  address: String
  base_amount: numeric
  created_at: timestamptz
  fa2: String
  max_consumptions_per_token: Int
  token_id: String
}

"""
order by sum() on columns of table "redeemable"
"""
input redeemable_sum_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
order by var_pop() on columns of table "redeemable"
"""
input redeemable_var_pop_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
order by var_samp() on columns of table "redeemable"
"""
input redeemable_var_samp_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
order by variance() on columns of table "redeemable"
"""
input redeemable_variance_order_by {
  base_amount: order_by
  max_consumptions_per_token: order_by
}

"""
columns and relationships of "redemption"
"""
type redemption {
  amount: numeric!
  created_at: timestamptz!
  id: Int!

  """An object relationship"""
  objkt: objkt
  objkt_id: String

  """An object relationship"""
  redeemable: redeemable
  redeemable_address: String
  redeemer_id: String

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "redemption"
"""
input redemption_aggregate_order_by {
  avg: redemption_avg_order_by
  count: order_by
  max: redemption_max_order_by
  min: redemption_min_order_by
  stddev: redemption_stddev_order_by
  stddev_pop: redemption_stddev_pop_order_by
  stddev_samp: redemption_stddev_samp_order_by
  sum: redemption_sum_order_by
  var_pop: redemption_var_pop_order_by
  var_samp: redemption_var_samp_order_by
  variance: redemption_variance_order_by
}

"""
order by avg() on columns of table "redemption"
"""
input redemption_avg_order_by {
  amount: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "redemption". All fields are combined with a logical 'AND'.
"""
input redemption_bool_exp {
  _and: [redemption_bool_exp!]
  _not: redemption_bool_exp
  _or: [redemption_bool_exp!]
  amount: numeric_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  objkt: objkt_bool_exp
  objkt_id: String_comparison_exp
  redeemable: redeemable_bool_exp
  redeemable_address: String_comparison_exp
  redeemer_id: String_comparison_exp
  user: user_bool_exp
}

"""
order by max() on columns of table "redemption"
"""
input redemption_max_order_by {
  amount: order_by
  created_at: order_by
  id: order_by
  objkt_id: order_by
  redeemable_address: order_by
  redeemer_id: order_by
}

"""
order by min() on columns of table "redemption"
"""
input redemption_min_order_by {
  amount: order_by
  created_at: order_by
  id: order_by
  objkt_id: order_by
  redeemable_address: order_by
  redeemer_id: order_by
}

"""Ordering options when selecting data from "redemption"."""
input redemption_order_by {
  amount: order_by
  created_at: order_by
  id: order_by
  objkt: objkt_order_by
  objkt_id: order_by
  redeemable: redeemable_order_by
  redeemable_address: order_by
  redeemer_id: order_by
  user: user_order_by
}

"""
select columns of table "redemption"
"""
enum redemption_select_column {
  """column name"""
  amount

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  objkt_id

  """column name"""
  redeemable_address

  """column name"""
  redeemer_id
}

"""
order by stddev() on columns of table "redemption"
"""
input redemption_stddev_order_by {
  amount: order_by
  id: order_by
}

"""
order by stddev_pop() on columns of table "redemption"
"""
input redemption_stddev_pop_order_by {
  amount: order_by
  id: order_by
}

"""
order by stddev_samp() on columns of table "redemption"
"""
input redemption_stddev_samp_order_by {
  amount: order_by
  id: order_by
}

"""
Streaming cursor of the table "redemption"
"""
input redemption_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: redemption_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input redemption_stream_cursor_value_input {
  amount: numeric
  created_at: timestamptz
  id: Int
  objkt_id: String
  redeemable_address: String
  redeemer_id: String
}

"""
order by sum() on columns of table "redemption"
"""
input redemption_sum_order_by {
  amount: order_by
  id: order_by
}

"""
order by var_pop() on columns of table "redemption"
"""
input redemption_var_pop_order_by {
  amount: order_by
  id: order_by
}

"""
order by var_samp() on columns of table "redemption"
"""
input redemption_var_samp_order_by {
  amount: order_by
  id: order_by
}

"""
order by variance() on columns of table "redemption"
"""
input redemption_variance_order_by {
  amount: order_by
  id: order_by
}

"""
columns and relationships of "report"
"""
type report {
  created_at: timestamptz!

  """An object relationship"""
  generative_token: generative_token
  id: uuid!

  """An object relationship"""
  moderation_reason: moderation_reason
  reason_id: String
  token_id: String

  """An object relationship"""
  user: user
  user_id: String
}

"""
order by aggregate values of table "report"
"""
input report_aggregate_order_by {
  count: order_by
  max: report_max_order_by
  min: report_min_order_by
}

"""
Boolean expression to filter rows from the table "report". All fields are combined with a logical 'AND'.
"""
input report_bool_exp {
  _and: [report_bool_exp!]
  _not: report_bool_exp
  _or: [report_bool_exp!]
  created_at: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: uuid_comparison_exp
  moderation_reason: moderation_reason_bool_exp
  reason_id: String_comparison_exp
  token_id: String_comparison_exp
  user: user_bool_exp
  user_id: String_comparison_exp
}

"""
order by max() on columns of table "report"
"""
input report_max_order_by {
  created_at: order_by
  id: order_by
  reason_id: order_by
  token_id: order_by
  user_id: order_by
}

"""
order by min() on columns of table "report"
"""
input report_min_order_by {
  created_at: order_by
  id: order_by
  reason_id: order_by
  token_id: order_by
  user_id: order_by
}

"""Ordering options when selecting data from "report"."""
input report_order_by {
  created_at: order_by
  generative_token: generative_token_order_by
  id: order_by
  moderation_reason: moderation_reason_order_by
  reason_id: order_by
  token_id: order_by
  user: user_order_by
  user_id: order_by
}

"""
select columns of table "report"
"""
enum report_select_column {
  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  reason_id

  """column name"""
  token_id

  """column name"""
  user_id
}

"""
Streaming cursor of the table "report"
"""
input report_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: report_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input report_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  reason_id: String
  token_id: String
  user_id: String
}

"""
columns and relationships of "reserve"
"""
type reserve {
  amount: numeric!
  data(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  generative_token: generative_token
  id: Int!
  method: Int!
  token_id: String
}

"""
order by aggregate values of table "reserve"
"""
input reserve_aggregate_order_by {
  avg: reserve_avg_order_by
  count: order_by
  max: reserve_max_order_by
  min: reserve_min_order_by
  stddev: reserve_stddev_order_by
  stddev_pop: reserve_stddev_pop_order_by
  stddev_samp: reserve_stddev_samp_order_by
  sum: reserve_sum_order_by
  var_pop: reserve_var_pop_order_by
  var_samp: reserve_var_samp_order_by
  variance: reserve_variance_order_by
}

"""
order by avg() on columns of table "reserve"
"""
input reserve_avg_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
Boolean expression to filter rows from the table "reserve". All fields are combined with a logical 'AND'.
"""
input reserve_bool_exp {
  _and: [reserve_bool_exp!]
  _not: reserve_bool_exp
  _or: [reserve_bool_exp!]
  amount: numeric_comparison_exp
  data: jsonb_comparison_exp
  generative_token: generative_token_bool_exp
  id: Int_comparison_exp
  method: Int_comparison_exp
  token_id: String_comparison_exp
}

"""
order by max() on columns of table "reserve"
"""
input reserve_max_order_by {
  amount: order_by
  id: order_by
  method: order_by
  token_id: order_by
}

"""
order by min() on columns of table "reserve"
"""
input reserve_min_order_by {
  amount: order_by
  id: order_by
  method: order_by
  token_id: order_by
}

"""Ordering options when selecting data from "reserve"."""
input reserve_order_by {
  amount: order_by
  data: order_by
  generative_token: generative_token_order_by
  id: order_by
  method: order_by
  token_id: order_by
}

"""
select columns of table "reserve"
"""
enum reserve_select_column {
  """column name"""
  amount

  """column name"""
  data

  """column name"""
  id

  """column name"""
  method

  """column name"""
  token_id
}

"""
order by stddev() on columns of table "reserve"
"""
input reserve_stddev_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
order by stddev_pop() on columns of table "reserve"
"""
input reserve_stddev_pop_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
order by stddev_samp() on columns of table "reserve"
"""
input reserve_stddev_samp_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
Streaming cursor of the table "reserve"
"""
input reserve_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: reserve_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reserve_stream_cursor_value_input {
  amount: numeric
  data: jsonb
  id: Int
  method: Int
  token_id: String
}

"""
order by sum() on columns of table "reserve"
"""
input reserve_sum_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
order by var_pop() on columns of table "reserve"
"""
input reserve_var_pop_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
order by var_samp() on columns of table "reserve"
"""
input reserve_var_samp_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
order by variance() on columns of table "reserve"
"""
input reserve_variance_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

scalar smallint

"""
Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'.
"""
input smallint_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [smallint!]

  """does the array contain the given value"""
  _contains: [smallint!]
  _eq: [smallint!]
  _gt: [smallint!]
  _gte: [smallint!]
  _in: [[smallint!]!]
  _is_null: Boolean
  _lt: [smallint!]
  _lte: [smallint!]
  _neq: [smallint!]
  _nin: [[smallint!]!]
}

"""
Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  _eq: smallint
  _gt: smallint
  _gte: smallint
  _in: [smallint!]
  _is_null: Boolean
  _lt: smallint
  _lte: smallint
  _neq: smallint
  _nin: [smallint!]
}

"""
columns and relationships of "split"
"""
type split {
  """An object relationship"""
  article: article
  article_id: Int

  """An object relationship"""
  generativeTokenByGenerativeTokenPrimaryId: generative_token

  """An object relationship"""
  generative_token: generative_token
  generative_token_primary_id: String
  generative_token_secondary_id: String
  id: Int!

  """An object relationship"""
  objkt: objkt
  objkt_id: String
  pct: Int!

  """An object relationship"""
  redeemable: redeemable
  redeemable_address: String

  """An object relationship"""
  user: user
  user_id: String
}

"""
order by aggregate values of table "split"
"""
input split_aggregate_order_by {
  avg: split_avg_order_by
  count: order_by
  max: split_max_order_by
  min: split_min_order_by
  stddev: split_stddev_order_by
  stddev_pop: split_stddev_pop_order_by
  stddev_samp: split_stddev_samp_order_by
  sum: split_sum_order_by
  var_pop: split_var_pop_order_by
  var_samp: split_var_samp_order_by
  variance: split_variance_order_by
}

"""
order by avg() on columns of table "split"
"""
input split_avg_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

"""
Boolean expression to filter rows from the table "split". All fields are combined with a logical 'AND'.
"""
input split_bool_exp {
  _and: [split_bool_exp!]
  _not: split_bool_exp
  _or: [split_bool_exp!]
  article: article_bool_exp
  article_id: Int_comparison_exp
  generativeTokenByGenerativeTokenPrimaryId: generative_token_bool_exp
  generative_token: generative_token_bool_exp
  generative_token_primary_id: String_comparison_exp
  generative_token_secondary_id: String_comparison_exp
  id: Int_comparison_exp
  objkt: objkt_bool_exp
  objkt_id: String_comparison_exp
  pct: Int_comparison_exp
  redeemable: redeemable_bool_exp
  redeemable_address: String_comparison_exp
  user: user_bool_exp
  user_id: String_comparison_exp
}

"""
order by max() on columns of table "split"
"""
input split_max_order_by {
  article_id: order_by
  generative_token_primary_id: order_by
  generative_token_secondary_id: order_by
  id: order_by
  objkt_id: order_by
  pct: order_by
  redeemable_address: order_by
  user_id: order_by
}

"""
order by min() on columns of table "split"
"""
input split_min_order_by {
  article_id: order_by
  generative_token_primary_id: order_by
  generative_token_secondary_id: order_by
  id: order_by
  objkt_id: order_by
  pct: order_by
  redeemable_address: order_by
  user_id: order_by
}

"""Ordering options when selecting data from "split"."""
input split_order_by {
  article: article_order_by
  article_id: order_by
  generativeTokenByGenerativeTokenPrimaryId: generative_token_order_by
  generative_token: generative_token_order_by
  generative_token_primary_id: order_by
  generative_token_secondary_id: order_by
  id: order_by
  objkt: objkt_order_by
  objkt_id: order_by
  pct: order_by
  redeemable: redeemable_order_by
  redeemable_address: order_by
  user: user_order_by
  user_id: order_by
}

"""
select columns of table "split"
"""
enum split_select_column {
  """column name"""
  article_id

  """column name"""
  generative_token_primary_id

  """column name"""
  generative_token_secondary_id

  """column name"""
  id

  """column name"""
  objkt_id

  """column name"""
  pct

  """column name"""
  redeemable_address

  """column name"""
  user_id
}

"""
order by stddev() on columns of table "split"
"""
input split_stddev_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

"""
order by stddev_pop() on columns of table "split"
"""
input split_stddev_pop_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

"""
order by stddev_samp() on columns of table "split"
"""
input split_stddev_samp_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

"""
Streaming cursor of the table "split"
"""
input split_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: split_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input split_stream_cursor_value_input {
  article_id: Int
  generative_token_primary_id: String
  generative_token_secondary_id: String
  id: Int
  objkt_id: String
  pct: Int
  redeemable_address: String
  user_id: String
}

"""
order by sum() on columns of table "split"
"""
input split_sum_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

"""
order by var_pop() on columns of table "split"
"""
input split_var_pop_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

"""
order by var_samp() on columns of table "split"
"""
input split_var_samp_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

"""
order by variance() on columns of table "split"
"""
input split_variance_order_by {
  article_id: order_by
  id: order_by
  pct: order_by
}

type subscription_root {
  offchain: offchain_subscription
  onchain: onchain_subscription
}

scalar timestamp

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "transaction"
"""
type transaction {
  """An object relationship"""
  article: article
  article_id: Int
  created_at: timestamptz!

  """An object relationship"""
  generative_token: generative_token
  id: Int!

  """An object relationship"""
  objkt: objkt
  objkt_id: String
  op_hash: String!
  price: numeric!
  ticket_id: String
  token_id: String
  type: transaction_type_enum!
}

"""
order by aggregate values of table "transaction"
"""
input transaction_aggregate_order_by {
  avg: transaction_avg_order_by
  count: order_by
  max: transaction_max_order_by
  min: transaction_min_order_by
  stddev: transaction_stddev_order_by
  stddev_pop: transaction_stddev_pop_order_by
  stddev_samp: transaction_stddev_samp_order_by
  sum: transaction_sum_order_by
  var_pop: transaction_var_pop_order_by
  var_samp: transaction_var_samp_order_by
  variance: transaction_variance_order_by
}

"""
order by avg() on columns of table "transaction"
"""
input transaction_avg_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

"""
Boolean expression to filter rows from the table "transaction". All fields are combined with a logical 'AND'.
"""
input transaction_bool_exp {
  _and: [transaction_bool_exp!]
  _not: transaction_bool_exp
  _or: [transaction_bool_exp!]
  article: article_bool_exp
  article_id: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: Int_comparison_exp
  objkt: objkt_bool_exp
  objkt_id: String_comparison_exp
  op_hash: String_comparison_exp
  price: numeric_comparison_exp
  ticket_id: String_comparison_exp
  token_id: String_comparison_exp
  type: transaction_type_enum_comparison_exp
}

"""
order by max() on columns of table "transaction"
"""
input transaction_max_order_by {
  article_id: order_by
  created_at: order_by
  id: order_by
  objkt_id: order_by
  op_hash: order_by
  price: order_by
  ticket_id: order_by
  token_id: order_by
  type: order_by
}

"""
order by min() on columns of table "transaction"
"""
input transaction_min_order_by {
  article_id: order_by
  created_at: order_by
  id: order_by
  objkt_id: order_by
  op_hash: order_by
  price: order_by
  ticket_id: order_by
  token_id: order_by
  type: order_by
}

"""Ordering options when selecting data from "transaction"."""
input transaction_order_by {
  article: article_order_by
  article_id: order_by
  created_at: order_by
  generative_token: generative_token_order_by
  id: order_by
  objkt: objkt_order_by
  objkt_id: order_by
  op_hash: order_by
  price: order_by
  ticket_id: order_by
  token_id: order_by
  type: order_by
}

"""
select columns of table "transaction"
"""
enum transaction_select_column {
  """column name"""
  article_id

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  objkt_id

  """column name"""
  op_hash

  """column name"""
  price

  """column name"""
  ticket_id

  """column name"""
  token_id

  """column name"""
  type
}

"""
order by stddev() on columns of table "transaction"
"""
input transaction_stddev_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

"""
order by stddev_pop() on columns of table "transaction"
"""
input transaction_stddev_pop_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

"""
order by stddev_samp() on columns of table "transaction"
"""
input transaction_stddev_samp_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

"""
Streaming cursor of the table "transaction"
"""
input transaction_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: transaction_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input transaction_stream_cursor_value_input {
  article_id: Int
  created_at: timestamptz
  id: Int
  objkt_id: String
  op_hash: String
  price: numeric
  ticket_id: String
  token_id: String
  type: transaction_type_enum
}

"""
order by sum() on columns of table "transaction"
"""
input transaction_sum_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

scalar transaction_type_enum

"""
Boolean expression to compare columns of type "transaction_type_enum". All fields are combined with logical 'AND'.
"""
input transaction_type_enum_comparison_exp {
  _eq: transaction_type_enum
  _gt: transaction_type_enum
  _gte: transaction_type_enum
  _in: [transaction_type_enum!]
  _is_null: Boolean
  _lt: transaction_type_enum
  _lte: transaction_type_enum
  _neq: transaction_type_enum
  _nin: [transaction_type_enum!]
}

"""
order by var_pop() on columns of table "transaction"
"""
input transaction_var_pop_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

"""
order by var_samp() on columns of table "transaction"
"""
input transaction_var_samp_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

"""
order by variance() on columns of table "transaction"
"""
input transaction_variance_order_by {
  article_id: order_by
  id: order_by
  price: order_by
}

"""
columns and relationships of "user"
"""
type user {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An array relationship"""
  actionsByIssuerId(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actionsByIssuerId_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """An array relationship"""
  article_ledgers(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """An aggregate relationship"""
  article_ledgers_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """An array relationship"""
  articles(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """An aggregate relationship"""
  articles_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """An array relationship"""
  auction_bids(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """An array relationship"""
  auctions(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!
  authorizations: [smallint!]!
  avatar_media_id: bpchar
  avatar_uri: String

  """An array relationship"""
  codexes(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """An array relationship"""
  collaborations(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """An array relationship"""
  collaborationsByCollaboratorId(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """An array relationship"""
  collection_offers(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!
  created_at: timestamptz!
  description: String
  flag: user_flag_enum!

  """An array relationship"""
  generative_tokens(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """An aggregate relationship"""
  generative_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!
  id: String!

  """An array relationship"""
  listings(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An array relationship"""
  listingsByAcceptedById(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): jsonb
  metadata_uri: String

  """An array relationship"""
  mint_tickets(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """An object relationship"""
  moderation_reason: moderation_reason
  moderation_reason_id: String
  name: String

  """An array relationship"""
  objkts(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """An array relationship"""
  objktsByOwnerId(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """An aggregate relationship"""
  objktsByOwnerId_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """An aggregate relationship"""
  objkts_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """An array relationship"""
  offers(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """An array relationship"""
  redemptions(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!
  type: user_type_enum!
  updated_at: timestamptz!

  """An object relationship"""
  user_stat: user_stats
  wallet: Wallet
}

"""
order by aggregate values of table "user"
"""
input user_aggregate_order_by {
  count: order_by
  max: user_max_order_by
  min: user_min_order_by
}

"""
Boolean expression to filter rows from the table "user". All fields are combined with a logical 'AND'.
"""
input user_bool_exp {
  _and: [user_bool_exp!]
  _not: user_bool_exp
  _or: [user_bool_exp!]
  actions: action_bool_exp
  actionsByIssuerId: action_bool_exp
  actionsByIssuerId_aggregate: action_aggregate_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  article_ledgers: article_ledger_bool_exp
  article_ledgers_aggregate: article_ledger_aggregate_bool_exp
  articles: article_bool_exp
  articles_aggregate: article_aggregate_bool_exp
  auction_bids: auction_bid_bool_exp
  auctions: auction_bool_exp
  authorizations: smallint_array_comparison_exp
  avatar_media_id: bpchar_comparison_exp
  avatar_uri: String_comparison_exp
  codexes: codex_bool_exp
  collaborations: collaboration_bool_exp
  collaborationsByCollaboratorId: collaboration_bool_exp
  collection_offers: collection_offer_bool_exp
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  flag: user_flag_enum_comparison_exp
  generative_tokens: generative_token_bool_exp
  generative_tokens_aggregate: generative_token_aggregate_bool_exp
  id: String_comparison_exp
  listings: listing_bool_exp
  listingsByAcceptedById: listing_bool_exp
  media_image: media_image_bool_exp
  metadata: jsonb_comparison_exp
  metadata_uri: String_comparison_exp
  mint_tickets: mint_ticket_bool_exp
  moderation_reason: moderation_reason_bool_exp
  moderation_reason_id: String_comparison_exp
  name: String_comparison_exp
  objkts: objkt_bool_exp
  objktsByOwnerId: objkt_bool_exp
  objktsByOwnerId_aggregate: objkt_aggregate_bool_exp
  objkts_aggregate: objkt_aggregate_bool_exp
  offers: offer_bool_exp
  redemptions: redemption_bool_exp
  reports: report_bool_exp
  splits: split_bool_exp
  type: user_type_enum_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_stat: user_stats_bool_exp
}

scalar user_flag_enum

"""
Boolean expression to compare columns of type "user_flag_enum". All fields are combined with logical 'AND'.
"""
input user_flag_enum_comparison_exp {
  _eq: user_flag_enum
  _gt: user_flag_enum
  _gte: user_flag_enum
  _in: [user_flag_enum!]
  _is_null: Boolean
  _lt: user_flag_enum
  _lte: user_flag_enum
  _neq: user_flag_enum
  _nin: [user_flag_enum!]
}

"""
order by max() on columns of table "user"
"""
input user_max_order_by {
  authorizations: order_by
  avatar_media_id: order_by
  avatar_uri: order_by
  created_at: order_by
  description: order_by
  flag: order_by
  id: order_by
  metadata_uri: order_by
  moderation_reason_id: order_by
  name: order_by
  type: order_by
  updated_at: order_by
}

"""
order by min() on columns of table "user"
"""
input user_min_order_by {
  authorizations: order_by
  avatar_media_id: order_by
  avatar_uri: order_by
  created_at: order_by
  description: order_by
  flag: order_by
  id: order_by
  metadata_uri: order_by
  moderation_reason_id: order_by
  name: order_by
  type: order_by
  updated_at: order_by
}

"""Ordering options when selecting data from "user"."""
input user_order_by {
  actionsByIssuerId_aggregate: action_aggregate_order_by
  actions_aggregate: action_aggregate_order_by
  article_ledgers_aggregate: article_ledger_aggregate_order_by
  articles_aggregate: article_aggregate_order_by
  auction_bids_aggregate: auction_bid_aggregate_order_by
  auctions_aggregate: auction_aggregate_order_by
  authorizations: order_by
  avatar_media_id: order_by
  avatar_uri: order_by
  codexes_aggregate: codex_aggregate_order_by
  collaborationsByCollaboratorId_aggregate: collaboration_aggregate_order_by
  collaborations_aggregate: collaboration_aggregate_order_by
  collection_offers_aggregate: collection_offer_aggregate_order_by
  created_at: order_by
  description: order_by
  flag: order_by
  generative_tokens_aggregate: generative_token_aggregate_order_by
  id: order_by
  listingsByAcceptedById_aggregate: listing_aggregate_order_by
  listings_aggregate: listing_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadata_uri: order_by
  mint_tickets_aggregate: mint_ticket_aggregate_order_by
  moderation_reason: moderation_reason_order_by
  moderation_reason_id: order_by
  name: order_by
  objktsByOwnerId_aggregate: objkt_aggregate_order_by
  objkts_aggregate: objkt_aggregate_order_by
  offers_aggregate: offer_aggregate_order_by
  redemptions_aggregate: redemption_aggregate_order_by
  reports_aggregate: report_aggregate_order_by
  splits_aggregate: split_aggregate_order_by
  type: order_by
  updated_at: order_by
  user_stat: user_stats_order_by
}

"""
select columns of table "user"
"""
enum user_select_column {
  """column name"""
  authorizations

  """column name"""
  avatar_media_id

  """column name"""
  avatar_uri

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  flag

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metadata_uri

  """column name"""
  moderation_reason_id

  """column name"""
  name

  """column name"""
  type

  """column name"""
  updated_at
}

"""
columns and relationships of "user_stats"
"""
type user_stats {
  from: timestamptz
  prim_volume_nb: Int
  prim_volume_nb7d: Int
  prim_volume_nb24: Int
  prim_volume_nb30d: Int
  prim_volume_tz: numeric
  prim_volume_tz7d: numeric
  prim_volume_tz24: numeric
  prim_volume_tz30d: numeric
  sec_volume_nb: Int
  sec_volume_nb7d: Int
  sec_volume_nb24: Int
  sec_volume_nb30d: Int
  sec_volume_tz: numeric
  sec_volume_tz7d: numeric
  sec_volume_tz24: numeric
  sec_volume_tz30d: numeric
  to: timestamptz

  """An object relationship"""
  user: user!
  user_id: String!
}

"""
Boolean expression to filter rows from the table "user_stats". All fields are combined with a logical 'AND'.
"""
input user_stats_bool_exp {
  _and: [user_stats_bool_exp!]
  _not: user_stats_bool_exp
  _or: [user_stats_bool_exp!]
  from: timestamptz_comparison_exp
  prim_volume_nb: Int_comparison_exp
  prim_volume_nb7d: Int_comparison_exp
  prim_volume_nb24: Int_comparison_exp
  prim_volume_nb30d: Int_comparison_exp
  prim_volume_tz: numeric_comparison_exp
  prim_volume_tz7d: numeric_comparison_exp
  prim_volume_tz24: numeric_comparison_exp
  prim_volume_tz30d: numeric_comparison_exp
  sec_volume_nb: Int_comparison_exp
  sec_volume_nb7d: Int_comparison_exp
  sec_volume_nb24: Int_comparison_exp
  sec_volume_nb30d: Int_comparison_exp
  sec_volume_tz: numeric_comparison_exp
  sec_volume_tz7d: numeric_comparison_exp
  sec_volume_tz24: numeric_comparison_exp
  sec_volume_tz30d: numeric_comparison_exp
  to: timestamptz_comparison_exp
  user: user_bool_exp
  user_id: String_comparison_exp
}

"""Ordering options when selecting data from "user_stats"."""
input user_stats_order_by {
  from: order_by
  prim_volume_nb: order_by
  prim_volume_nb7d: order_by
  prim_volume_nb24: order_by
  prim_volume_nb30d: order_by
  prim_volume_tz: order_by
  prim_volume_tz7d: order_by
  prim_volume_tz24: order_by
  prim_volume_tz30d: order_by
  sec_volume_nb: order_by
  sec_volume_nb7d: order_by
  sec_volume_nb24: order_by
  sec_volume_nb30d: order_by
  sec_volume_tz: order_by
  sec_volume_tz7d: order_by
  sec_volume_tz24: order_by
  sec_volume_tz30d: order_by
  to: order_by
  user: user_order_by
  user_id: order_by
}

"""
select columns of table "user_stats"
"""
enum user_stats_select_column {
  """column name"""
  from

  """column name"""
  prim_volume_nb

  """column name"""
  prim_volume_nb7d

  """column name"""
  prim_volume_nb24

  """column name"""
  prim_volume_nb30d

  """column name"""
  prim_volume_tz

  """column name"""
  prim_volume_tz7d

  """column name"""
  prim_volume_tz24

  """column name"""
  prim_volume_tz30d

  """column name"""
  sec_volume_nb

  """column name"""
  sec_volume_nb7d

  """column name"""
  sec_volume_nb24

  """column name"""
  sec_volume_nb30d

  """column name"""
  sec_volume_tz

  """column name"""
  sec_volume_tz7d

  """column name"""
  sec_volume_tz24

  """column name"""
  sec_volume_tz30d

  """column name"""
  to

  """column name"""
  user_id
}

"""
Streaming cursor of the table "user_stats"
"""
input user_stats_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: user_stats_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_stats_stream_cursor_value_input {
  from: timestamptz
  prim_volume_nb: Int
  prim_volume_nb7d: Int
  prim_volume_nb24: Int
  prim_volume_nb30d: Int
  prim_volume_tz: numeric
  prim_volume_tz7d: numeric
  prim_volume_tz24: numeric
  prim_volume_tz30d: numeric
  sec_volume_nb: Int
  sec_volume_nb7d: Int
  sec_volume_nb24: Int
  sec_volume_nb30d: Int
  sec_volume_tz: numeric
  sec_volume_tz7d: numeric
  sec_volume_tz24: numeric
  sec_volume_tz30d: numeric
  to: timestamptz
  user_id: String
}

"""
Streaming cursor of the table "user"
"""
input user_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: user_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_stream_cursor_value_input {
  authorizations: [smallint!]
  avatar_media_id: bpchar
  avatar_uri: String
  created_at: timestamptz
  description: String
  flag: user_flag_enum
  id: String
  metadata: jsonb
  metadata_uri: String
  moderation_reason_id: String
  name: String
  type: user_type_enum
  updated_at: timestamptz
}

scalar user_type_enum

"""
Boolean expression to compare columns of type "user_type_enum". All fields are combined with logical 'AND'.
"""
input user_type_enum_comparison_exp {
  _eq: user_type_enum
  _gt: user_type_enum
  _gte: user_type_enum
  _in: [user_type_enum!]
  _is_null: Boolean
  _lt: user_type_enum
  _lte: user_type_enum
  _neq: user_type_enum
  _nin: [user_type_enum!]
}

scalar uuid

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}